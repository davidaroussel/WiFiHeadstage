
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.2.1.288.0

// backanno -o FPGA_Intan_Driver_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui -msgset C:/Users/david/Desktop/WiFi Headstage/WiFiHeadstage V2/FPGA/FPGA_Intan_Driver/promote.xml FPGA_Intan_Driver_impl_1.udb 
// Netlist created on Tue Jul 22 15:49:20 2025
// Netlist written on Tue Jul 22 15:49:30 2025
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top_level ( RGB_1, o_RHD_SPI_CS_n, o_RHD_SPI_Clk, o_RHD_SPI_MOSI, RGB_2, 
                   o_STM32_SPI_CS_n, o_STM32_SPI_Clk, o_STM32_SPI_MOSI, RGB_3, 
                   RGB_4, i_clk, pll_clk, i_STM32_SPI_MISO, i_RHD_SPI_MISO );
  input  i_clk, i_STM32_SPI_MISO, i_RHD_SPI_MISO;
  output RGB_1, o_RHD_SPI_CS_n, o_RHD_SPI_Clk, o_RHD_SPI_MOSI, RGB_2, 
         o_STM32_SPI_CS_n, o_STM32_SPI_Clk, o_STM32_SPI_MOSI, RGB_3, RGB_4, 
         pll_clk;
  wire   n134, n19554, n13291, \counter[31] , n8493, pll_clk_internal, n135, 
         n136, n19551, \counter[30] , n13289, \counter[29] , n137, n138, 
         n19548, \counter[28] , n13287, \counter[27] , n139, n140, n19545, 
         \counter[26] , n13285, \counter[25] , n141, n142, n19542, 
         \counter[24] , n13283, \counter[23] , n143, n144, n19539, 
         \counter[22] , n13281, \counter[21] , n145, n146, n19536, 
         \counter[20] , n13279, \counter[19] , n147, n148, n19533, 
         \counter[18] , n13277, \counter[17] , n149, n150, n19530, 
         \counter[16] , n13275, \counter[15] , n151, n152, n19527, 
         \counter[14] , n13273, \counter[13] , n153, n154, n19524, 
         \counter[12] , n13271, \counter[11] , n155, n156, n19521, 
         \counter[10] , n13269, \counter[9] , n157, n158, n19518, \counter[8] , 
         n13267, \counter[7] , n159, n160, n19515, \counter[6] , n13265, 
         \counter[5] , n161, n162, n19512, \counter[4] , n13263, \counter[3] , 
         n163, n164, n19509, \counter[2] , n13261, \counter[1] , n165, n19506, 
         \counter[0] , VCC_net, \reset_counter_7__N_3[7] , n19569, n13258, 
         \reset_counter[7] , \reset_counter_7__N_3[6] , 
         \reset_counter_7__N_3[5] , n19566, \reset_counter[6] , n13256, 
         \reset_counter[5] , \reset_counter_7__N_3[4] , 
         \reset_counter_7__N_3[3] , n19563, \reset_counter[4] , n13254, 
         \reset_counter[3] , \reset_counter_7__N_3[2] , 
         \reset_counter_7__N_3[1] , n19560, \reset_counter[2] , n13252, 
         \reset_counter[1] , \reset_counter_7__N_3[0] , n19503, 
         \reset_counter[0] , n2417, \Controller_inst.n19578 , 
         \Controller_inst.stm32_counter[6] , \Controller_inst.n13223 , 
         \Controller_inst.stm32_counter[5] , \Controller_inst.n133[5] , 
         \Controller_inst.n133[6] , \Controller_inst.n13225 , 
         \Controller_inst.n19575 , \Controller_inst.stm32_counter[4] , 
         \Controller_inst.n13221 , \Controller_inst.stm32_counter[3] , 
         \Controller_inst.n133[3] , \Controller_inst.n133[4] , 
         \Controller_inst.n19572 , \Controller_inst.stm32_counter[2] , 
         \Controller_inst.n13219 , \Controller_inst.stm32_counter[1] , 
         \Controller_inst.n133[1] , \Controller_inst.n133[2] , 
         \Controller_inst.n19500 , \Controller_inst.stm32_counter[0] , 
         \Controller_inst.n318 , \Controller_inst.n133[0] , 
         \Controller_inst.n19665 , \Controller_inst.n13216 , 
         \Controller_inst.index[31] , \Controller_inst.n133_adj_680[31] , 
         \Controller_inst.n19662 , \Controller_inst.index[30] , 
         \Controller_inst.n13214 , \Controller_inst.index[29] , 
         \Controller_inst.n133_adj_680[29] , 
         \Controller_inst.n133_adj_680[30] , \Controller_inst.n19659 , 
         \Controller_inst.index[28] , \Controller_inst.n13212 , 
         \Controller_inst.index[27] , \Controller_inst.n133_adj_680[27] , 
         \Controller_inst.n133_adj_680[28] , \Controller_inst.n19656 , 
         \Controller_inst.index[26] , \Controller_inst.n13210 , 
         \Controller_inst.index[25] , \Controller_inst.n133_adj_680[25] , 
         \Controller_inst.n133_adj_680[26] , \Controller_inst.n19653 , 
         \Controller_inst.index[24] , \Controller_inst.n13208 , 
         \Controller_inst.index[23] , \Controller_inst.n133_adj_680[23] , 
         \Controller_inst.n133_adj_680[24] , \Controller_inst.n19650 , 
         \Controller_inst.index[22] , \Controller_inst.n13206 , 
         \Controller_inst.index[21] , \Controller_inst.n133_adj_680[21] , 
         \Controller_inst.n133_adj_680[22] , \Controller_inst.n19647 , 
         \Controller_inst.index[20] , \Controller_inst.n13204 , 
         \Controller_inst.index[19] , \Controller_inst.n133_adj_680[19] , 
         \Controller_inst.n133_adj_680[20] , \Controller_inst.n19644 , 
         \Controller_inst.index[18] , \Controller_inst.n13202 , 
         \Controller_inst.index[17] , \Controller_inst.n133_adj_680[17] , 
         \Controller_inst.n133_adj_680[18] , \Controller_inst.n19641 , 
         \Controller_inst.index[16] , \Controller_inst.n13200 , 
         \Controller_inst.index[15] , \Controller_inst.n133_adj_680[15] , 
         \Controller_inst.n133_adj_680[16] , \Controller_inst.n19638 , 
         \Controller_inst.index[14] , \Controller_inst.n13198 , 
         \Controller_inst.index[13] , \Controller_inst.n133_adj_680[13] , 
         \Controller_inst.n133_adj_680[14] , \Controller_inst.n19635 , 
         \Controller_inst.index[12] , \Controller_inst.n13196 , 
         \Controller_inst.index[11] , \Controller_inst.n133_adj_680[11] , 
         \Controller_inst.n133_adj_680[12] , \Controller_inst.n19632 , 
         \Controller_inst.index[10] , \Controller_inst.n13194 , 
         \Controller_inst.index[9] , \Controller_inst.n133_adj_680[9] , 
         \Controller_inst.n133_adj_680[10] , \Controller_inst.n19629 , 
         \Controller_inst.index[8] , \Controller_inst.n13192 , 
         \Controller_inst.index[7] , \Controller_inst.n133_adj_680[7] , 
         \Controller_inst.n133_adj_680[8] , \Controller_inst.n19626 , 
         \Controller_inst.index[6] , \Controller_inst.n13190 , 
         \Controller_inst.index[5] , \Controller_inst.n133_adj_680[5] , 
         \Controller_inst.n133_adj_680[6] , \Controller_inst.n19623 , 
         \Controller_inst.index[4] , \Controller_inst.n13188 , 
         \Controller_inst.index[3] , \Controller_inst.n133_adj_680[3] , 
         \Controller_inst.n133_adj_680[4] , \Controller_inst.n19620 , 
         \Controller_inst.index[2] , \Controller_inst.n13186 , 
         \Controller_inst.index[1] , \Controller_inst.n133_adj_680[1] , 
         \Controller_inst.n133_adj_680[2] , \Controller_inst.n19497 , 
         \Controller_inst.index[0] , \Controller_inst.n133_adj_680[0] , 
         \Controller_inst.n19476 , \Controller_inst.n13137 , 
         \Controller_inst.NUM_DATA[31] , \Controller_inst.n167_adj_681[31] , 
         \Controller_inst.n19467 , \Controller_inst.NUM_DATA[30] , 
         \Controller_inst.n13135 , \Controller_inst.NUM_DATA[29] , 
         \Controller_inst.n59 , \Controller_inst.n61 , 
         \Controller_inst.n19458 , \Controller_inst.NUM_DATA[28] , 
         \Controller_inst.n13133 , \Controller_inst.NUM_DATA[27] , 
         \Controller_inst.n55 , \Controller_inst.n57 , 
         \Controller_inst.n19449 , \Controller_inst.NUM_DATA[26] , 
         \Controller_inst.n13131 , \Controller_inst.NUM_DATA[25] , 
         \Controller_inst.n51 , \Controller_inst.n53 , 
         \Controller_inst.n19440 , \Controller_inst.NUM_DATA[24] , 
         \Controller_inst.n13129 , \Controller_inst.NUM_DATA[23] , 
         \Controller_inst.n47_adj_592 , \Controller_inst.n49_adj_591 , 
         \Controller_inst.n19431 , \Controller_inst.NUM_DATA[22] , 
         \Controller_inst.n13127 , \Controller_inst.NUM_DATA[21] , 
         \Controller_inst.n43_adj_590 , \Controller_inst.n45_adj_595 , 
         \Controller_inst.n19422 , \Controller_inst.NUM_DATA[20] , 
         \Controller_inst.n13125 , \Controller_inst.NUM_DATA[19] , 
         \Controller_inst.n39_adj_598 , \Controller_inst.n41 , 
         \Controller_inst.n19413 , \Controller_inst.NUM_DATA[18] , 
         \Controller_inst.n13123 , \Controller_inst.NUM_DATA[17] , 
         \Controller_inst.n35 , \Controller_inst.n37_adj_596 , 
         \Controller_inst.n19404 , \Controller_inst.NUM_DATA[16] , 
         \Controller_inst.n13121 , \Controller_inst.NUM_DATA[15] , 
         \Controller_inst.n31 , \Controller_inst.n33_adj_593 , 
         \Controller_inst.n19395 , \Controller_inst.NUM_DATA[14] , 
         \Controller_inst.n13119 , \Controller_inst.NUM_DATA[13] , 
         \Controller_inst.n27_adj_594 , \Controller_inst.n29 , 
         \Controller_inst.n19386 , \Controller_inst.NUM_DATA[12] , 
         \Controller_inst.n13117 , \Controller_inst.NUM_DATA[11] , 
         \Controller_inst.n23 , \Controller_inst.n25 , 
         \Controller_inst.n19377 , \Controller_inst.NUM_DATA[10] , 
         \Controller_inst.n13115 , \Controller_inst.NUM_DATA[9] , 
         \Controller_inst.n19 , \Controller_inst.n21 , 
         \Controller_inst.n19368 , \Controller_inst.NUM_DATA[8] , 
         \Controller_inst.n13113 , \Controller_inst.NUM_DATA[7] , 
         \Controller_inst.n167_adj_681[7] , \Controller_inst.n17 , 
         \Controller_inst.n19359 , \Controller_inst.NUM_DATA[6] , 
         \Controller_inst.n13111 , \Controller_inst.NUM_DATA[5] , 
         \Controller_inst.n167_adj_681[5] , \Controller_inst.n167_adj_681[6] , 
         \Controller_inst.n19350 , \Controller_inst.NUM_DATA[4] , 
         \Controller_inst.n13109 , \Controller_inst.NUM_DATA[3] , 
         \Controller_inst.n167_adj_681[3] , \Controller_inst.n167_adj_681[4] , 
         \Controller_inst.n19335 , \Controller_inst.NUM_DATA[0] , 
         \Controller_inst.n167_adj_681[0] , \Controller_inst.n13107 , 
         \Controller_inst.n19617 , \Controller_inst.n13249 , 
         \Controller_inst.stm32_counter[31] , \Controller_inst.n133[31] , 
         \Controller_inst.n19614 , \Controller_inst.stm32_counter[30] , 
         \Controller_inst.n13247 , \Controller_inst.stm32_counter[29] , 
         \Controller_inst.n133[29] , \Controller_inst.n133[30] , 
         \Controller_inst.n19611 , \Controller_inst.stm32_counter[28] , 
         \Controller_inst.n13245 , \Controller_inst.stm32_counter[27] , 
         \Controller_inst.n133[27] , \Controller_inst.n133[28] , 
         \Controller_inst.n19341 , \Controller_inst.NUM_DATA[2] , 
         \Controller_inst.NUM_DATA[1] , \Controller_inst.n167_adj_681[1] , 
         \Controller_inst.n167_adj_681[2] , \Controller_inst.n19608 , 
         \Controller_inst.stm32_counter[26] , \Controller_inst.n13243 , 
         \Controller_inst.stm32_counter[25] , \Controller_inst.n133[25] , 
         \Controller_inst.n133[26] , \Controller_inst.n19605 , 
         \Controller_inst.stm32_counter[24] , \Controller_inst.n13241 , 
         \Controller_inst.stm32_counter[23] , \Controller_inst.n133[23] , 
         \Controller_inst.n133[24] , \Controller_inst.n19602 , 
         \Controller_inst.stm32_counter[22] , \Controller_inst.n13239 , 
         \Controller_inst.stm32_counter[21] , \Controller_inst.n133[21] , 
         \Controller_inst.n133[22] , \Controller_inst.n19599 , 
         \Controller_inst.stm32_counter[20] , \Controller_inst.n13237 , 
         \Controller_inst.stm32_counter[19] , \Controller_inst.n133[19] , 
         \Controller_inst.n133[20] , \Controller_inst.n19596 , 
         \Controller_inst.stm32_counter[18] , \Controller_inst.n13235 , 
         \Controller_inst.stm32_counter[17] , \Controller_inst.n133[17] , 
         \Controller_inst.n133[18] , \Controller_inst.n19593 , 
         \Controller_inst.stm32_counter[16] , \Controller_inst.n13233 , 
         \Controller_inst.stm32_counter[15] , \Controller_inst.n133[15] , 
         \Controller_inst.n133[16] , \Controller_inst.n19590 , 
         \Controller_inst.stm32_counter[14] , \Controller_inst.n13231 , 
         \Controller_inst.stm32_counter[13] , \Controller_inst.n133[13] , 
         \Controller_inst.n133[14] , \Controller_inst.n19587 , 
         \Controller_inst.stm32_counter[12] , \Controller_inst.n13229 , 
         \Controller_inst.stm32_counter[11] , \Controller_inst.n133[11] , 
         \Controller_inst.n133[12] , \Controller_inst.n19584 , 
         \Controller_inst.stm32_counter[10] , \Controller_inst.n13227 , 
         \Controller_inst.stm32_counter[9] , \Controller_inst.n133[9] , 
         \Controller_inst.n133[10] , \Controller_inst.n19581 , 
         \Controller_inst.stm32_counter[8] , 
         \Controller_inst.stm32_counter[7] , \Controller_inst.n133[7] , 
         \Controller_inst.n133[8] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n19674 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n13183 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[6] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n33[6] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n19671 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n13181 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n33[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n33[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n19668 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n13179 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n33[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n33[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n19494 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.int_STM32_TX_Ready_N_535 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n33[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n33[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19308 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13100 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13102 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19716 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13088 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19305 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13098 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19713 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13086 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19302 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19710 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13084 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19296 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19314 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13104 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[7] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[7] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19311 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[6] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[6] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19908 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[5] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13160 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[4] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[5] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[6] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19905 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[3] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13158 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[2] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[3] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[4] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19287 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[1] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9252 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[0] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[1] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[2] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19683 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13176 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[5] 
         , w_reset, 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19680 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13174 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19677 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13172 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19485 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n5866 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19488 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13091 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19707 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13095 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19557 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13093 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19491 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19692 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5485 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13168 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5487 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[6] 
         , \Controller_inst.int_FIFO_COUNT[6] , 
         \Controller_inst.int_FIFO_COUNT[7] , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19689 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5489 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13166 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5491 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[4] 
         , \Controller_inst.int_FIFO_COUNT[4] , 
         \Controller_inst.int_FIFO_COUNT[5] , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19686 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5493 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13164 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5495 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[2] 
         , \Controller_inst.int_FIFO_COUNT[2] , 
         \Controller_inst.int_FIFO_COUNT[3] , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19482 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5497 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5483 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[0] 
         , \Controller_inst.int_FIFO_COUNT[0] , 
         \Controller_inst.int_FIFO_COUNT[1] , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19704 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13155 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19701 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13153 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19698 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13151 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19695 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13149 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19332 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19329 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13146 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19326 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13144 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19323 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13142 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19320 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13140 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19317 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0] 
         , \Controller_inst.n8537 , \Controller_inst.n8536 , 
         \Controller_inst.temp_buffer[32] , 
         \Controller_inst.int_STM32_TX_Byte[32] , \Controller_inst.n2455 , 
         \Controller_inst.temp_buffer[33] , 
         \Controller_inst.int_STM32_TX_Byte[33] , \Controller_inst.n18595 , 
         \Controller_inst.n14693 , \Controller_inst.n11111 , 
         \Controller_inst.n6_adj_577 , \Controller_inst.stm32_state[1] , 
         \Controller_inst.n9307 , \Controller_inst.n6622 , 
         \Controller_inst.n6_adj_579 , \Controller_inst.n317 , 
         \Controller_inst.n6953 , \Controller_inst.stm32_state[0] , 
         \Controller_inst.n167[1] , \Controller_inst.n167[0] , 
         \Controller_inst.n4391 , \Controller_inst.n4_adj_675 , 
         \Controller_inst.n167_adj_682[1] , \Controller_inst.n167_adj_682[0] , 
         \Controller_inst.n4_adj_677 , \Controller_inst.n167_adj_682[30] , 
         \Controller_inst.n167_adj_682[31] , 
         \Controller_inst.n167_adj_682[28] , 
         \Controller_inst.n167_adj_682[29] , 
         \Controller_inst.n167_adj_682[26] , 
         \Controller_inst.n167_adj_682[27] , 
         \Controller_inst.n167_adj_682[24] , 
         \Controller_inst.n167_adj_682[25] , 
         \Controller_inst.n167_adj_682[22] , 
         \Controller_inst.n167_adj_682[23] , 
         \Controller_inst.n167_adj_682[20] , 
         \Controller_inst.n167_adj_682[21] , 
         \Controller_inst.n167_adj_682[18] , 
         \Controller_inst.n167_adj_682[19] , 
         \Controller_inst.n167_adj_682[16] , 
         \Controller_inst.n167_adj_682[17] , 
         \Controller_inst.n167_adj_682[14] , 
         \Controller_inst.n167_adj_682[15] , 
         \Controller_inst.n167_adj_682[12] , 
         \Controller_inst.n167_adj_682[13] , 
         \Controller_inst.n167_adj_682[10] , 
         \Controller_inst.n167_adj_682[11] , \Controller_inst.n167_adj_682[8] , 
         \Controller_inst.n167_adj_682[9] , \Controller_inst.n167_adj_682[6] , 
         \Controller_inst.n167_adj_682[7] , \Controller_inst.n167_adj_682[4] , 
         \Controller_inst.n167_adj_682[5] , \Controller_inst.n167_adj_682[2] , 
         \Controller_inst.n167_adj_682[3] , \Controller_inst.n167[30] , 
         \Controller_inst.n167[31] , \Controller_inst.n167[28] , 
         \Controller_inst.n167[29] , \Controller_inst.n167[26] , 
         \Controller_inst.n167[27] , \Controller_inst.n167[24] , 
         \Controller_inst.n167[25] , \Controller_inst.n167[22] , 
         \Controller_inst.n167[23] , \Controller_inst.n167[20] , 
         \Controller_inst.n167[21] , \Controller_inst.n167[18] , 
         \Controller_inst.n167[19] , \Controller_inst.n167[16] , 
         \Controller_inst.n167[17] , \Controller_inst.n167[14] , 
         \Controller_inst.n167[15] , \Controller_inst.n167[12] , 
         \Controller_inst.n167[13] , \Controller_inst.n167[10] , 
         \Controller_inst.n167[11] , \Controller_inst.n167[8] , 
         \Controller_inst.n167[9] , \Controller_inst.n167[6] , 
         \Controller_inst.n167[7] , \Controller_inst.n167[4] , 
         \Controller_inst.n167[5] , \Controller_inst.n167[2] , 
         \Controller_inst.n167[3] , \Controller_inst.n15047 , 
         \Controller_inst.n3_adj_679 , \Controller_inst.n15046 , 
         \Controller_inst.n9311 , \Controller_inst.int_STM32_TX_Ready , 
         \Controller_inst.stm32_state[3] , \Controller_inst.stm32_state[2] , 
         \Controller_inst.index[2].sig_001.FeedThruLUT , 
         \Controller_inst.n4357[12] , \Controller_inst.n2457 , 
         \Controller_inst.int_RHD_TX_Byte[12] , 
         \Controller_inst.int_RHD_TX_Byte[10] , 
         \Controller_inst.index[0].sig_003.FeedThruLUT , 
         \Controller_inst.index[1].sig_002.FeedThruLUT , 
         \Controller_inst.int_RHD_TX_Byte[9] , 
         \Controller_inst.int_RHD_TX_Byte[8] , \Controller_inst.n15705 , 
         \Controller_inst.n6 , \Controller_inst.n2373 , 
         \Controller_inst.state[1] , \Controller_inst.state[0] , 
         \Controller_inst.n8597 , \Controller_inst.n8598 , 
         \Controller_inst.int_STM32_TX_Byte[35] , 
         \Controller_inst.temp_buffer[35] , 
         \Controller_inst.int_STM32_TX_Byte[34] , 
         \Controller_inst.temp_buffer[34] , \Controller_inst.n8595 , 
         \Controller_inst.n8596 , \Controller_inst.temp_buffer[37] , 
         \Controller_inst.int_STM32_TX_Byte[37] , 
         \Controller_inst.int_STM32_TX_Byte[36] , 
         \Controller_inst.temp_buffer[36] , \Controller_inst.n8593 , 
         \Controller_inst.n8594 , \Controller_inst.temp_buffer[39] , 
         \Controller_inst.int_STM32_TX_Byte[39] , 
         \Controller_inst.int_STM32_TX_Byte[38] , 
         \Controller_inst.temp_buffer[38] , \Controller_inst.n8591 , 
         \Controller_inst.n8592 , \Controller_inst.temp_buffer[41] , 
         \Controller_inst.int_STM32_TX_Byte[41] , 
         \Controller_inst.int_STM32_TX_Byte[40] , 
         \Controller_inst.temp_buffer[40] , \Controller_inst.n8589 , 
         \Controller_inst.n8590 , \Controller_inst.int_STM32_TX_Byte[43] , 
         \Controller_inst.temp_buffer[43] , 
         \Controller_inst.int_STM32_TX_Byte[42] , 
         \Controller_inst.temp_buffer[42] , \Controller_inst.n8587 , 
         \Controller_inst.n8588 , \Controller_inst.temp_buffer[45] , 
         \Controller_inst.int_STM32_TX_Byte[45] , 
         \Controller_inst.temp_buffer[44] , 
         \Controller_inst.int_STM32_TX_Byte[44] , \Controller_inst.n8585 , 
         \Controller_inst.n8586 , \Controller_inst.int_STM32_TX_Byte[47] , 
         \Controller_inst.temp_buffer[47] , 
         \Controller_inst.int_STM32_TX_Byte[46] , 
         \Controller_inst.temp_buffer[46] , \Controller_inst.n8583 , 
         \Controller_inst.n8584 , \Controller_inst.temp_buffer[49] , 
         \Controller_inst.int_STM32_TX_Byte[49] , 
         \Controller_inst.temp_buffer[48] , 
         \Controller_inst.int_STM32_TX_Byte[48] , \Controller_inst.n8581 , 
         \Controller_inst.n8582 , \Controller_inst.int_STM32_TX_Byte[51] , 
         \Controller_inst.temp_buffer[51] , \Controller_inst.temp_buffer[50] , 
         \Controller_inst.int_STM32_TX_Byte[50] , \Controller_inst.n8579 , 
         \Controller_inst.n8580 , \Controller_inst.int_STM32_TX_Byte[53] , 
         \Controller_inst.temp_buffer[53] , 
         \Controller_inst.int_STM32_TX_Byte[52] , 
         \Controller_inst.temp_buffer[52] , \Controller_inst.n8577 , 
         \Controller_inst.n8578 , \Controller_inst.int_STM32_TX_Byte[55] , 
         \Controller_inst.temp_buffer[55] , \Controller_inst.temp_buffer[54] , 
         \Controller_inst.int_STM32_TX_Byte[54] , \Controller_inst.n8575 , 
         \Controller_inst.n8576 , \Controller_inst.temp_buffer[57] , 
         \Controller_inst.int_STM32_TX_Byte[57] , 
         \Controller_inst.temp_buffer[56] , 
         \Controller_inst.int_STM32_TX_Byte[56] , \Controller_inst.n8573 , 
         \Controller_inst.n8574 , \Controller_inst.temp_buffer[59] , 
         \Controller_inst.int_STM32_TX_Byte[59] , 
         \Controller_inst.temp_buffer[58] , 
         \Controller_inst.int_STM32_TX_Byte[58] , \Controller_inst.n8571 , 
         \Controller_inst.n8572 , \Controller_inst.temp_buffer[61] , 
         \Controller_inst.int_STM32_TX_Byte[61] , 
         \Controller_inst.temp_buffer[60] , 
         \Controller_inst.int_STM32_TX_Byte[60] , \Controller_inst.n8569 , 
         \Controller_inst.n8570 , \Controller_inst.temp_buffer[63] , 
         \Controller_inst.int_STM32_TX_Byte[63] , 
         \Controller_inst.temp_buffer[62] , 
         \Controller_inst.int_STM32_TX_Byte[62] , \Controller_inst.n8523 , 
         \Controller_inst.n8568 , \Controller_inst.int_STM32_TX_Byte[0] , 
         \Controller_inst.temp_buffer[0] , \Controller_inst.temp_buffer[1] , 
         \Controller_inst.int_STM32_TX_Byte[1] , \Controller_inst.n8566 , 
         \Controller_inst.n8567 , \Controller_inst.temp_buffer[3] , 
         \Controller_inst.int_STM32_TX_Byte[3] , 
         \Controller_inst.temp_buffer[2] , 
         \Controller_inst.int_STM32_TX_Byte[2] , \Controller_inst.n8564 , 
         \Controller_inst.n8565 , \Controller_inst.int_STM32_TX_Byte[5] , 
         \Controller_inst.temp_buffer[5] , 
         \Controller_inst.int_STM32_TX_Byte[4] , 
         \Controller_inst.temp_buffer[4] , \Controller_inst.n8562 , 
         \Controller_inst.n8563 , \Controller_inst.temp_buffer[7] , 
         \Controller_inst.int_STM32_TX_Byte[7] , 
         \Controller_inst.temp_buffer[6] , 
         \Controller_inst.int_STM32_TX_Byte[6] , \Controller_inst.n8560 , 
         \Controller_inst.n8561 , \Controller_inst.temp_buffer[9] , 
         \Controller_inst.int_STM32_TX_Byte[9] , 
         \Controller_inst.temp_buffer[8] , 
         \Controller_inst.int_STM32_TX_Byte[8] , \Controller_inst.n8558 , 
         \Controller_inst.n8559 , \Controller_inst.int_STM32_TX_Byte[11] , 
         \Controller_inst.temp_buffer[11] , 
         \Controller_inst.int_STM32_TX_Byte[10] , 
         \Controller_inst.temp_buffer[10] , \Controller_inst.n8556 , 
         \Controller_inst.n8557 , \Controller_inst.temp_buffer[13] , 
         \Controller_inst.int_STM32_TX_Byte[13] , 
         \Controller_inst.int_STM32_TX_Byte[12] , 
         \Controller_inst.temp_buffer[12] , \Controller_inst.n8554 , 
         \Controller_inst.n8555 , \Controller_inst.int_STM32_TX_Byte[15] , 
         \Controller_inst.temp_buffer[15] , 
         \Controller_inst.int_STM32_TX_Byte[14] , 
         \Controller_inst.temp_buffer[14] , \Controller_inst.n8552 , 
         \Controller_inst.n8553 , \Controller_inst.temp_buffer[17] , 
         \Controller_inst.int_STM32_TX_Byte[17] , 
         \Controller_inst.temp_buffer[16] , 
         \Controller_inst.int_STM32_TX_Byte[16] , \Controller_inst.n8550 , 
         \Controller_inst.n8551 , \Controller_inst.int_STM32_TX_Byte[19] , 
         \Controller_inst.temp_buffer[19] , \Controller_inst.temp_buffer[18] , 
         \Controller_inst.int_STM32_TX_Byte[18] , \Controller_inst.n8548 , 
         \Controller_inst.n8549 , \Controller_inst.temp_buffer[21] , 
         \Controller_inst.int_STM32_TX_Byte[21] , 
         \Controller_inst.temp_buffer[20] , 
         \Controller_inst.int_STM32_TX_Byte[20] , \Controller_inst.n8546 , 
         \Controller_inst.n8547 , \Controller_inst.temp_buffer[23] , 
         \Controller_inst.int_STM32_TX_Byte[23] , 
         \Controller_inst.temp_buffer[22] , 
         \Controller_inst.int_STM32_TX_Byte[22] , \Controller_inst.n8544 , 
         \Controller_inst.n8545 , \Controller_inst.temp_buffer[25] , 
         \Controller_inst.int_STM32_TX_Byte[25] , 
         \Controller_inst.temp_buffer[24] , 
         \Controller_inst.int_STM32_TX_Byte[24] , \Controller_inst.n8542 , 
         \Controller_inst.n8543 , \Controller_inst.temp_buffer[27] , 
         \Controller_inst.int_STM32_TX_Byte[27] , 
         \Controller_inst.temp_buffer[26] , 
         \Controller_inst.int_STM32_TX_Byte[26] , \Controller_inst.n8540 , 
         \Controller_inst.n8541 , \Controller_inst.temp_buffer[29] , 
         \Controller_inst.int_STM32_TX_Byte[29] , 
         \Controller_inst.temp_buffer[28] , 
         \Controller_inst.int_STM32_TX_Byte[28] , 
         \Controller_inst.Controller_RHD_FIFO_1.n8524 , 
         \Controller_inst.n43_adj_599 , 
         \Controller_inst.Controller_RHD_FIFO_1.init_FIFO_State , 
         \w_Controller_Mode[0] , \w_Controller_Mode[1] , 
         \Controller_inst.init_FIFO_Read , 
         \Controller_inst.int_RHD_TX_DV.sig_071.FeedThruLUT , 
         \Controller_inst.n8525 , \Controller_inst.int_RHD_TX_DV , 
         \Controller_inst.n5 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV 
         , \Controller_inst.n8538 , \Controller_inst.n8539 , 
         \Controller_inst.int_STM32_TX_Byte[31] , 
         \Controller_inst.temp_buffer[31] , 
         \Controller_inst.int_STM32_TX_Byte[30] , 
         \Controller_inst.temp_buffer[30] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n42[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n42[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n216 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n1026[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready , 
         \Controller_inst.SPI_Master_CS_STM32_1.n6968 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n42[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n42[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n42[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n42[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n5877 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n5875 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n15779 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n203 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n1026[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n1026[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n15697 , o_STM32_SPI_CS_n_c, 
         \Controller_inst.int_STM32_TX_DV , 
         \Controller_inst.SPI_Master_CS_STM32_1.n11315 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n6_adj_572 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n7011 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n4 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n270 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk.sig_004.FeedThruLUT 
         , \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk , 
         o_STM32_SPI_Clk_c, 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8501 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges_7__N_271[7] 
         , \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9422 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[4] 
         , \Controller_inst.SPI_Master_CS_STM32_1.n14545 , 
         \Controller_inst.SPI_Master_CS_STM32_1.r_SPI_Clk_Count[4] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13019 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n1352 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_Trailing_Edge , 
         \Controller_inst.int_STM32_TX_Byte[1].sig_068.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[0].sig_005.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[1] 
         , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[0] 
         , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[1] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[0] , 
         \Controller_inst.n27 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8497 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8511 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8507 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8509 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8503 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8505 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[2] 
         , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[3] 
         , \Controller_inst.int_STM32_TX_Byte[62].sig_007.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[63].sig_006.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[63] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[62] , 
         \Controller_inst.int_STM32_TX_Byte[60].sig_009.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[61].sig_008.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[61] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[60] , 
         \Controller_inst.int_STM32_TX_Byte[58].sig_011.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[59].sig_010.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[59] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[58] , 
         \Controller_inst.int_STM32_TX_Byte[56].sig_013.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[57].sig_012.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[57] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[56] , 
         \Controller_inst.int_STM32_TX_Byte[54].sig_015.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[55].sig_014.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[55] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[54] , 
         \Controller_inst.int_STM32_TX_Byte[52].sig_017.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[53].sig_016.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[53] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[52] , 
         \Controller_inst.int_STM32_TX_Byte[50].sig_019.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[51].sig_018.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[51] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[50] , 
         \Controller_inst.int_STM32_TX_Byte[48].sig_021.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[49].sig_020.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[49] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[48] , 
         \Controller_inst.int_STM32_TX_Byte[46].sig_023.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[47].sig_022.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[47] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[46] , 
         \Controller_inst.int_STM32_TX_Byte[44].sig_025.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[45].sig_024.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[45] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[44] , 
         \Controller_inst.int_STM32_TX_Byte[42].sig_027.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[43].sig_026.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[43] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[42] , 
         \Controller_inst.int_STM32_TX_Byte[40].sig_029.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[41].sig_028.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[41] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[40] , 
         \Controller_inst.int_STM32_TX_Byte[38].sig_031.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[39].sig_030.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[39] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[38] , 
         \Controller_inst.int_STM32_TX_Byte[36].sig_033.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[37].sig_032.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[37] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[36] , 
         \Controller_inst.int_STM32_TX_Byte[34].sig_035.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[35].sig_034.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[35] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[34] , 
         \Controller_inst.int_STM32_TX_Byte[32].sig_037.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[33].sig_036.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[33] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[32] , 
         \Controller_inst.int_STM32_TX_Byte[30].sig_039.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[31].sig_038.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[31] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[30] , 
         \Controller_inst.int_STM32_TX_Byte[28].sig_041.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[29].sig_040.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[29] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[28] , 
         \Controller_inst.int_STM32_TX_Byte[26].sig_043.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[27].sig_042.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[27] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[26] , 
         \Controller_inst.int_STM32_TX_Byte[24].sig_045.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[25].sig_044.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[25] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[24] , 
         \Controller_inst.int_STM32_TX_Byte[22].sig_047.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[23].sig_046.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[23] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[22] , 
         \Controller_inst.int_STM32_TX_Byte[20].sig_049.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[21].sig_048.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[21] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[20] , 
         \Controller_inst.int_STM32_TX_Byte[18].sig_051.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[19].sig_050.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[19] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[18] , 
         \Controller_inst.int_STM32_TX_Byte[16].sig_053.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[17].sig_052.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[17] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[16] , 
         \Controller_inst.int_STM32_TX_Byte[14].sig_055.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[15].sig_054.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[15] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[14] , 
         \Controller_inst.int_STM32_TX_Byte[12].sig_057.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[13].sig_056.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[13] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[12] , 
         \Controller_inst.int_STM32_TX_Byte[10].sig_059.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[11].sig_058.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[11] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[10] , 
         \Controller_inst.int_STM32_TX_Byte[8].sig_061.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[9].sig_060.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[9] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[8] , 
         \Controller_inst.int_STM32_TX_Byte[6].sig_063.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[7].sig_062.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[7] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[6] , 
         \Controller_inst.int_STM32_TX_Byte[4].sig_065.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[5].sig_064.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[5] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[4] , 
         \Controller_inst.int_STM32_TX_Byte[2].sig_067.FeedThruLUT , 
         \Controller_inst.int_STM32_TX_Byte[3].sig_066.FeedThruLUT , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[3] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[2] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n302 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n14541 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n279 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6943 , 
         o_STM32_SPI_MOSI_c, 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[3] 
         , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[4] 
         , \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6993 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[1] 
         , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[2] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5853 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5855 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1137 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n15787 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n59 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[0] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[1] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[0] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[1] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[0] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6967 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[2] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[3] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13056 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[2] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[3] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[5] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n7003 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk.sig_070.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk 
         , o_RHD_SPI_Clk_c, 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n191 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n16463 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[15] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6_adj_554 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6939 
         , o_RHD_SPI_MOSI_c, 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8499 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8521 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8522 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8517 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8519 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges_5__N_355[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8515 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6059 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6057 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n4 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6971 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6063 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6061 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[0] 
         , \Controller_inst.int_RHD_TX_Byte[15].sig_072.FeedThruLUT , 
         \Controller_inst.int_RHD_TX_Byte[15] , 
         \Controller_inst.int_RHD_TX_Byte[10].sig_074.FeedThruLUT , 
         \Controller_inst.int_RHD_TX_Byte[12].sig_073.FeedThruLUT , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[12] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[10] 
         , \Controller_inst.int_RHD_TX_Byte[8].sig_076.FeedThruLUT , 
         \Controller_inst.int_RHD_TX_Byte[9].sig_075.FeedThruLUT , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[9] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[8] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6054 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6981 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n7597 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11362 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_132.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_077.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1]$n31 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0]$n4 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r 
         , \Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_078.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1cmp_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_125.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_079.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1].sig_119.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0].sig_080.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_112.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_081.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_105.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_082.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1]$n18 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0]$n6 
         , \Controller_inst.int_FIFO_RE , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1]$n32 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0]$n3 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_098.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_083.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1]$n19 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0]$n5 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_091.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_084.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[1] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_nxt_w$n2 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15777 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15781 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14561 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.empty_flag_r 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_086.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_085.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_088.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_087.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_090.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_089.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6]$n9 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[7]$n7 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4]$n13 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5]$n11 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2]$n17 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3]$n15 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_093.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_092.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_095.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_094.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_097.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_096.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6]$n22 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[7]$n20 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4]$n26 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5]$n24 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2]$n30 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3]$n28 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4]$n12 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5]$n10 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2]$n16 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3]$n14 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_100.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_099.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[7] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_102.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_101.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_104.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_103.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_107.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_106.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_109.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_108.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_111.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_110.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6].sig_114.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7].sig_113.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4].sig_116.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5].sig_115.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2].sig_118.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3].sig_117.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_120.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_122.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_121.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_124.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_123.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4]$n25 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5]$n23 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[5] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[4] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2]$n29 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3]$n27 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[2] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_127.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_126.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_129.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_128.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_131.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_130.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6].sig_134.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7].sig_133.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4].sig_136.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5].sig_135.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2].sig_138.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3].sig_137.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0].sig_140.FeedThruLUT 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1].sig_139.FeedThruLUT 
         , \Controller_inst.SPI_Master_CS_STM32_1.n6 , 
         \Controller_inst.n46_adj_628 , \Controller_inst.n44_adj_625 , 
         \Controller_inst.n48_adj_629 , \Controller_inst.n50 , 
         \Controller_inst.n52 , \Controller_inst.n10_adj_610 , 
         \Controller_inst.n8_adj_609 , \Controller_inst.n12_adj_611 , 
         \Controller_inst.n54_adj_632 , \Controller_inst.n56 , 
         \Controller_inst.n4_adj_607 , \Controller_inst.n22 , 
         \Controller_inst.n20 , \Controller_inst.n24 , \Controller_inst.n58 , 
         \Controller_inst.n60 , \Controller_inst.n26 , \Controller_inst.n28 , 
         \Controller_inst.n62 , \Controller_inst.n69 , \Controller_inst.n39 , 
         \Controller_inst.n6_adj_608 , \Controller_inst.n6634 , 
         \Controller_inst.n42 , \Controller_inst.n9 , 
         \Controller_inst.n8_adj_578 , \Controller_inst.n14_adj_612 , 
         \Controller_inst.n16_adj_613 , \Controller_inst.n18 , 
         \Controller_inst.n30 , \Controller_inst.n32 , \Controller_inst.n34 , 
         \Controller_inst.n36 , \Controller_inst.n38 , \Controller_inst.n40 , 
         \Controller_inst.n42_adj_624 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17872 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17869 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16445 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n33 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17866 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n32 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17875 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n36_adj_570 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n35_adj_571 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17920 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17923 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17914 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17917 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17908 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17911 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17902 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17905 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17896 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17899 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16436 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16439 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17890 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16433 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16430 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n1 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17932 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n2 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17893 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n43_adj_565 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n42_adj_566 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17884 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n39_adj_563 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n40_adj_564 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n5 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n4 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n57 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17878 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17863 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16448 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n54 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n55 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17926 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17929 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n51 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n50 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17860 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_c , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n48 , n15037, n6, 
         n8, n1832, n11352, n8599, n11350, n14, n13, n11093, n14546, n14589, 
         n14563, n14547, n10, n14_adj_683, n9, \Controller_inst.n48 , 
         \Controller_inst.n46 , \Controller_inst.n47 , \Controller_inst.n45 , 
         \Controller_inst.n54 , \Controller_inst.n44 , \Controller_inst.n4 , 
         \Controller_inst.n14605 , \Controller_inst.n49 , 
         \Controller_inst.n43 , \Controller_inst.n33 , 
         \Controller_inst.int_RHD_TX_Ready , \Controller_inst.n4_adj_576 , 
         \Controller_inst.n16469 , \Controller_inst.n14707 , 
         \Controller_inst.n8 , \Controller_inst.n18561 , 
         \Controller_inst.n6630 , \Controller_inst.n6633 , 
         \Controller_inst.n4_adj_581 , \Controller_inst.n6_adj_583 , 
         \Controller_inst.n8_adj_585 , \Controller_inst.n10 , 
         \Controller_inst.n12 , \Controller_inst.n14 , \Controller_inst.n16 , 
         \Controller_inst.n37 , \Controller_inst.n15793 , 
         \Controller_inst.n15797 , \Controller_inst.n46_adj_597 , 
         \Controller_inst.n15795 , \Controller_inst.n15791 , 
         \Controller_inst.n15789 , n8534, \Controller_inst.n5_adj_678 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n6600 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n1019 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n12 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n1080 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n15699 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n5834 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n10_adj_562 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n15717 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n10 , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9411 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[4] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n8 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9_adj_557 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n15739 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_555 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n3 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6_adj_556 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10966 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Leading_Edge 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_553 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.full_flag_r 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15757 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15749 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15751 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14569 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n8 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n12 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_nxt_w 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n12_adj_552 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15741 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n10 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15765 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15773 
         , \Controller_inst.n8535 , 
         \Controller_inst.SPI_Master_CS_STM32_1.n5873 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5851 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9248 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6946 , 
         \Controller_inst.int_STM32_TX_DV.sig_069.FeedThruLUT , 
         \Controller_inst.n47_adj_574 , o_RHD_SPI_CS_n_c, 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[4] , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13064 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11344 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge_N_545 
         , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[5] 
         , \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n15064 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[0] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n5839 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6]$n21 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[6] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_nxt_w 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14565 
         , \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9445 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n18562 
         , n14947, stop_counting, n16502, \step[0] , \step[1] , RGB_2_c, 
         RGB_1_c, RGB_3_c, n419, RGB_4_c, GND_net, \n11352$n0 , 
         \reset_counter[1].sig_000.FeedThruLUT , \Controller_inst.n3 , 
         \Controller_inst.n1930[0] , 
         \Controller_inst.SPI_Master_CS_STM32_1.n42[6] , 
         \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[0] 
         , \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n33 , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.o_RHD_RX_DV_N_529 
         , \Controller_inst.Controller_RHD_FIFO_1.o_RHD_RX_DV , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6050 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[3] 
         , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_nxt_w$n1 
         , \Controller_inst.Controller_RHD_FIFO_1.n5813 , 
         \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6]$n8 
         , \Controller_inst.n11088 , i_clk_c, 
         \pll_spi_inst.lscc_pll_inst.feedback_w ;

  SLICE_0 SLICE_0( .DI0(n134), .D1(n19554), .D0(n13291), .C0(\counter[31] ), 
    .LSR(n8493), .CLK(pll_clk_internal), .CIN0(n13291), .CIN1(n19554), 
    .Q0(\counter[31] ), .F0(n134), .COUT0(n19554));
  SLICE_1 SLICE_1( .DI1(n135), .DI0(n136), .D1(n19551), .C1(\counter[30] ), 
    .D0(n13289), .C0(\counter[29] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13289), .CIN1(n19551), .Q0(\counter[29] ), .Q1(\counter[30] ), 
    .F0(n136), .F1(n135), .COUT1(n13291), .COUT0(n19551));
  SLICE_2 SLICE_2( .DI1(n137), .DI0(n138), .D1(n19548), .C1(\counter[28] ), 
    .D0(n13287), .C0(\counter[27] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13287), .CIN1(n19548), .Q0(\counter[27] ), .Q1(\counter[28] ), 
    .F0(n138), .F1(n137), .COUT1(n13289), .COUT0(n19548));
  SLICE_3 SLICE_3( .DI1(n139), .DI0(n140), .D1(n19545), .C1(\counter[26] ), 
    .D0(n13285), .C0(\counter[25] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13285), .CIN1(n19545), .Q0(\counter[25] ), .Q1(\counter[26] ), 
    .F0(n140), .F1(n139), .COUT1(n13287), .COUT0(n19545));
  SLICE_4 SLICE_4( .DI1(n141), .DI0(n142), .D1(n19542), .C1(\counter[24] ), 
    .D0(n13283), .C0(\counter[23] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13283), .CIN1(n19542), .Q0(\counter[23] ), .Q1(\counter[24] ), 
    .F0(n142), .F1(n141), .COUT1(n13285), .COUT0(n19542));
  SLICE_5 SLICE_5( .DI1(n143), .DI0(n144), .D1(n19539), .C1(\counter[22] ), 
    .D0(n13281), .C0(\counter[21] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13281), .CIN1(n19539), .Q0(\counter[21] ), .Q1(\counter[22] ), 
    .F0(n144), .F1(n143), .COUT1(n13283), .COUT0(n19539));
  SLICE_6 SLICE_6( .DI1(n145), .DI0(n146), .D1(n19536), .C1(\counter[20] ), 
    .D0(n13279), .C0(\counter[19] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13279), .CIN1(n19536), .Q0(\counter[19] ), .Q1(\counter[20] ), 
    .F0(n146), .F1(n145), .COUT1(n13281), .COUT0(n19536));
  SLICE_7 SLICE_7( .DI1(n147), .DI0(n148), .D1(n19533), .C1(\counter[18] ), 
    .D0(n13277), .C0(\counter[17] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13277), .CIN1(n19533), .Q0(\counter[17] ), .Q1(\counter[18] ), 
    .F0(n148), .F1(n147), .COUT1(n13279), .COUT0(n19533));
  SLICE_8 SLICE_8( .DI1(n149), .DI0(n150), .D1(n19530), .C1(\counter[16] ), 
    .D0(n13275), .C0(\counter[15] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13275), .CIN1(n19530), .Q0(\counter[15] ), .Q1(\counter[16] ), 
    .F0(n150), .F1(n149), .COUT1(n13277), .COUT0(n19530));
  SLICE_9 SLICE_9( .DI1(n151), .DI0(n152), .D1(n19527), .C1(\counter[14] ), 
    .D0(n13273), .C0(\counter[13] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13273), .CIN1(n19527), .Q0(\counter[13] ), .Q1(\counter[14] ), 
    .F0(n152), .F1(n151), .COUT1(n13275), .COUT0(n19527));
  SLICE_10 SLICE_10( .DI1(n153), .DI0(n154), .D1(n19524), .C1(\counter[12] ), 
    .D0(n13271), .C0(\counter[11] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13271), .CIN1(n19524), .Q0(\counter[11] ), .Q1(\counter[12] ), 
    .F0(n154), .F1(n153), .COUT1(n13273), .COUT0(n19524));
  SLICE_11 SLICE_11( .DI1(n155), .DI0(n156), .D1(n19521), .C1(\counter[10] ), 
    .D0(n13269), .C0(\counter[9] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13269), .CIN1(n19521), .Q0(\counter[9] ), .Q1(\counter[10] ), 
    .F0(n156), .F1(n155), .COUT1(n13271), .COUT0(n19521));
  SLICE_12 SLICE_12( .DI1(n157), .DI0(n158), .D1(n19518), .C1(\counter[8] ), 
    .D0(n13267), .C0(\counter[7] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13267), .CIN1(n19518), .Q0(\counter[7] ), .Q1(\counter[8] ), 
    .F0(n158), .F1(n157), .COUT1(n13269), .COUT0(n19518));
  SLICE_13 SLICE_13( .DI1(n159), .DI0(n160), .D1(n19515), .C1(\counter[6] ), 
    .D0(n13265), .C0(\counter[5] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13265), .CIN1(n19515), .Q0(\counter[5] ), .Q1(\counter[6] ), 
    .F0(n160), .F1(n159), .COUT1(n13267), .COUT0(n19515));
  SLICE_14 SLICE_14( .DI1(n161), .DI0(n162), .D1(n19512), .C1(\counter[4] ), 
    .D0(n13263), .C0(\counter[3] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13263), .CIN1(n19512), .Q0(\counter[3] ), .Q1(\counter[4] ), 
    .F0(n162), .F1(n161), .COUT1(n13265), .COUT0(n19512));
  SLICE_15 SLICE_15( .DI1(n163), .DI0(n164), .D1(n19509), .C1(\counter[2] ), 
    .D0(n13261), .C0(\counter[1] ), .LSR(n8493), .CLK(pll_clk_internal), 
    .CIN0(n13261), .CIN1(n19509), .Q0(\counter[1] ), .Q1(\counter[2] ), 
    .F0(n164), .F1(n163), .COUT1(n13263), .COUT0(n19509));
  SLICE_16 SLICE_16( .DI1(n165), .D1(n19506), .C1(\counter[0] ), .B1(VCC_net), 
    .LSR(n8493), .CLK(pll_clk_internal), .CIN1(n19506), .Q1(\counter[0] ), 
    .F1(n165), .COUT1(n13261), .COUT0(n19506));
  SLICE_17 SLICE_17( .DI0(\reset_counter_7__N_3[7] ), .D1(n19569), .D0(n13258), 
    .C0(\reset_counter[7] ), .CLK(pll_clk_internal), .CIN0(n13258), 
    .CIN1(n19569), .Q0(\reset_counter[7] ), .F0(\reset_counter_7__N_3[7] ), 
    .COUT0(n19569));
  SLICE_18 SLICE_18( .DI1(\reset_counter_7__N_3[6] ), 
    .DI0(\reset_counter_7__N_3[5] ), .D1(n19566), .C1(\reset_counter[6] ), 
    .D0(n13256), .C0(\reset_counter[5] ), .CLK(pll_clk_internal), 
    .CIN0(n13256), .CIN1(n19566), .Q0(\reset_counter[5] ), 
    .Q1(\reset_counter[6] ), .F0(\reset_counter_7__N_3[5] ), 
    .F1(\reset_counter_7__N_3[6] ), .COUT1(n13258), .COUT0(n19566));
  SLICE_19 SLICE_19( .DI1(\reset_counter_7__N_3[4] ), 
    .DI0(\reset_counter_7__N_3[3] ), .D1(n19563), .C1(\reset_counter[4] ), 
    .D0(n13254), .C0(\reset_counter[3] ), .CLK(pll_clk_internal), 
    .CIN0(n13254), .CIN1(n19563), .Q0(\reset_counter[3] ), 
    .Q1(\reset_counter[4] ), .F0(\reset_counter_7__N_3[3] ), 
    .F1(\reset_counter_7__N_3[4] ), .COUT1(n13256), .COUT0(n19563));
  SLICE_20 SLICE_20( .DI1(\reset_counter_7__N_3[2] ), 
    .DI0(\reset_counter_7__N_3[1] ), .D1(n19560), .C1(\reset_counter[2] ), 
    .D0(n13252), .C0(\reset_counter[1] ), .CLK(pll_clk_internal), 
    .CIN0(n13252), .CIN1(n19560), .Q0(\reset_counter[1] ), 
    .Q1(\reset_counter[2] ), .F0(\reset_counter_7__N_3[1] ), 
    .F1(\reset_counter_7__N_3[2] ), .COUT1(n13254), .COUT0(n19560));
  SLICE_21 SLICE_21( .DI1(\reset_counter_7__N_3[0] ), .D1(n19503), 
    .C1(\reset_counter[0] ), .B1(n2417), .CLK(pll_clk_internal), .CIN1(n19503), 
    .Q1(\reset_counter[0] ), .F1(\reset_counter_7__N_3[0] ), .COUT1(n13252), 
    .COUT0(n19503));
  Controller_inst_SLICE_22 \Controller_inst.SLICE_22 ( 
    .D1(\Controller_inst.n19578 ), .C1(\Controller_inst.stm32_counter[6] ), 
    .D0(\Controller_inst.n13223 ), .C0(\Controller_inst.stm32_counter[5] ), 
    .CIN0(\Controller_inst.n13223 ), .CIN1(\Controller_inst.n19578 ), 
    .F0(\Controller_inst.n133[5] ), .F1(\Controller_inst.n133[6] ), 
    .COUT1(\Controller_inst.n13225 ), .COUT0(\Controller_inst.n19578 ));
  Controller_inst_SLICE_23 \Controller_inst.SLICE_23 ( 
    .D1(\Controller_inst.n19575 ), .C1(\Controller_inst.stm32_counter[4] ), 
    .D0(\Controller_inst.n13221 ), .C0(\Controller_inst.stm32_counter[3] ), 
    .CIN0(\Controller_inst.n13221 ), .CIN1(\Controller_inst.n19575 ), 
    .F0(\Controller_inst.n133[3] ), .F1(\Controller_inst.n133[4] ), 
    .COUT1(\Controller_inst.n13223 ), .COUT0(\Controller_inst.n19575 ));
  Controller_inst_SLICE_24 \Controller_inst.SLICE_24 ( 
    .D1(\Controller_inst.n19572 ), .C1(\Controller_inst.stm32_counter[2] ), 
    .D0(\Controller_inst.n13219 ), .C0(\Controller_inst.stm32_counter[1] ), 
    .CIN0(\Controller_inst.n13219 ), .CIN1(\Controller_inst.n19572 ), 
    .F0(\Controller_inst.n133[1] ), .F1(\Controller_inst.n133[2] ), 
    .COUT1(\Controller_inst.n13221 ), .COUT0(\Controller_inst.n19572 ));
  Controller_inst_SLICE_25 \Controller_inst.SLICE_25 ( 
    .D1(\Controller_inst.n19500 ), .C1(\Controller_inst.stm32_counter[0] ), 
    .B1(\Controller_inst.n318 ), .CIN1(\Controller_inst.n19500 ), 
    .F1(\Controller_inst.n133[0] ), .COUT1(\Controller_inst.n13219 ), 
    .COUT0(\Controller_inst.n19500 ));
  Controller_inst_SLICE_26 \Controller_inst.SLICE_26 ( 
    .D1(\Controller_inst.n19665 ), .D0(\Controller_inst.n13216 ), 
    .C0(\Controller_inst.index[31] ), .CIN0(\Controller_inst.n13216 ), 
    .CIN1(\Controller_inst.n19665 ), .F0(\Controller_inst.n133_adj_680[31] ), 
    .COUT0(\Controller_inst.n19665 ));
  Controller_inst_SLICE_27 \Controller_inst.SLICE_27 ( 
    .D1(\Controller_inst.n19662 ), .C1(\Controller_inst.index[30] ), 
    .D0(\Controller_inst.n13214 ), .C0(\Controller_inst.index[29] ), 
    .CIN0(\Controller_inst.n13214 ), .CIN1(\Controller_inst.n19662 ), 
    .F0(\Controller_inst.n133_adj_680[29] ), 
    .F1(\Controller_inst.n133_adj_680[30] ), .COUT1(\Controller_inst.n13216 ), 
    .COUT0(\Controller_inst.n19662 ));
  Controller_inst_SLICE_28 \Controller_inst.SLICE_28 ( 
    .D1(\Controller_inst.n19659 ), .C1(\Controller_inst.index[28] ), 
    .D0(\Controller_inst.n13212 ), .C0(\Controller_inst.index[27] ), 
    .CIN0(\Controller_inst.n13212 ), .CIN1(\Controller_inst.n19659 ), 
    .F0(\Controller_inst.n133_adj_680[27] ), 
    .F1(\Controller_inst.n133_adj_680[28] ), .COUT1(\Controller_inst.n13214 ), 
    .COUT0(\Controller_inst.n19659 ));
  Controller_inst_SLICE_29 \Controller_inst.SLICE_29 ( 
    .D1(\Controller_inst.n19656 ), .C1(\Controller_inst.index[26] ), 
    .D0(\Controller_inst.n13210 ), .C0(\Controller_inst.index[25] ), 
    .CIN0(\Controller_inst.n13210 ), .CIN1(\Controller_inst.n19656 ), 
    .F0(\Controller_inst.n133_adj_680[25] ), 
    .F1(\Controller_inst.n133_adj_680[26] ), .COUT1(\Controller_inst.n13212 ), 
    .COUT0(\Controller_inst.n19656 ));
  Controller_inst_SLICE_30 \Controller_inst.SLICE_30 ( 
    .D1(\Controller_inst.n19653 ), .C1(\Controller_inst.index[24] ), 
    .D0(\Controller_inst.n13208 ), .C0(\Controller_inst.index[23] ), 
    .CIN0(\Controller_inst.n13208 ), .CIN1(\Controller_inst.n19653 ), 
    .F0(\Controller_inst.n133_adj_680[23] ), 
    .F1(\Controller_inst.n133_adj_680[24] ), .COUT1(\Controller_inst.n13210 ), 
    .COUT0(\Controller_inst.n19653 ));
  Controller_inst_SLICE_31 \Controller_inst.SLICE_31 ( 
    .D1(\Controller_inst.n19650 ), .C1(\Controller_inst.index[22] ), 
    .D0(\Controller_inst.n13206 ), .C0(\Controller_inst.index[21] ), 
    .CIN0(\Controller_inst.n13206 ), .CIN1(\Controller_inst.n19650 ), 
    .F0(\Controller_inst.n133_adj_680[21] ), 
    .F1(\Controller_inst.n133_adj_680[22] ), .COUT1(\Controller_inst.n13208 ), 
    .COUT0(\Controller_inst.n19650 ));
  Controller_inst_SLICE_32 \Controller_inst.SLICE_32 ( 
    .D1(\Controller_inst.n19647 ), .C1(\Controller_inst.index[20] ), 
    .D0(\Controller_inst.n13204 ), .C0(\Controller_inst.index[19] ), 
    .CIN0(\Controller_inst.n13204 ), .CIN1(\Controller_inst.n19647 ), 
    .F0(\Controller_inst.n133_adj_680[19] ), 
    .F1(\Controller_inst.n133_adj_680[20] ), .COUT1(\Controller_inst.n13206 ), 
    .COUT0(\Controller_inst.n19647 ));
  Controller_inst_SLICE_33 \Controller_inst.SLICE_33 ( 
    .D1(\Controller_inst.n19644 ), .C1(\Controller_inst.index[18] ), 
    .D0(\Controller_inst.n13202 ), .C0(\Controller_inst.index[17] ), 
    .CIN0(\Controller_inst.n13202 ), .CIN1(\Controller_inst.n19644 ), 
    .F0(\Controller_inst.n133_adj_680[17] ), 
    .F1(\Controller_inst.n133_adj_680[18] ), .COUT1(\Controller_inst.n13204 ), 
    .COUT0(\Controller_inst.n19644 ));
  Controller_inst_SLICE_34 \Controller_inst.SLICE_34 ( 
    .D1(\Controller_inst.n19641 ), .C1(\Controller_inst.index[16] ), 
    .D0(\Controller_inst.n13200 ), .C0(\Controller_inst.index[15] ), 
    .CIN0(\Controller_inst.n13200 ), .CIN1(\Controller_inst.n19641 ), 
    .F0(\Controller_inst.n133_adj_680[15] ), 
    .F1(\Controller_inst.n133_adj_680[16] ), .COUT1(\Controller_inst.n13202 ), 
    .COUT0(\Controller_inst.n19641 ));
  Controller_inst_SLICE_35 \Controller_inst.SLICE_35 ( 
    .D1(\Controller_inst.n19638 ), .C1(\Controller_inst.index[14] ), 
    .D0(\Controller_inst.n13198 ), .C0(\Controller_inst.index[13] ), 
    .CIN0(\Controller_inst.n13198 ), .CIN1(\Controller_inst.n19638 ), 
    .F0(\Controller_inst.n133_adj_680[13] ), 
    .F1(\Controller_inst.n133_adj_680[14] ), .COUT1(\Controller_inst.n13200 ), 
    .COUT0(\Controller_inst.n19638 ));
  Controller_inst_SLICE_36 \Controller_inst.SLICE_36 ( 
    .D1(\Controller_inst.n19635 ), .C1(\Controller_inst.index[12] ), 
    .D0(\Controller_inst.n13196 ), .C0(\Controller_inst.index[11] ), 
    .CIN0(\Controller_inst.n13196 ), .CIN1(\Controller_inst.n19635 ), 
    .F0(\Controller_inst.n133_adj_680[11] ), 
    .F1(\Controller_inst.n133_adj_680[12] ), .COUT1(\Controller_inst.n13198 ), 
    .COUT0(\Controller_inst.n19635 ));
  Controller_inst_SLICE_37 \Controller_inst.SLICE_37 ( 
    .D1(\Controller_inst.n19632 ), .C1(\Controller_inst.index[10] ), 
    .D0(\Controller_inst.n13194 ), .C0(\Controller_inst.index[9] ), 
    .CIN0(\Controller_inst.n13194 ), .CIN1(\Controller_inst.n19632 ), 
    .F0(\Controller_inst.n133_adj_680[9] ), 
    .F1(\Controller_inst.n133_adj_680[10] ), .COUT1(\Controller_inst.n13196 ), 
    .COUT0(\Controller_inst.n19632 ));
  Controller_inst_SLICE_38 \Controller_inst.SLICE_38 ( 
    .D1(\Controller_inst.n19629 ), .C1(\Controller_inst.index[8] ), 
    .D0(\Controller_inst.n13192 ), .C0(\Controller_inst.index[7] ), 
    .CIN0(\Controller_inst.n13192 ), .CIN1(\Controller_inst.n19629 ), 
    .F0(\Controller_inst.n133_adj_680[7] ), 
    .F1(\Controller_inst.n133_adj_680[8] ), .COUT1(\Controller_inst.n13194 ), 
    .COUT0(\Controller_inst.n19629 ));
  Controller_inst_SLICE_39 \Controller_inst.SLICE_39 ( 
    .D1(\Controller_inst.n19626 ), .C1(\Controller_inst.index[6] ), 
    .D0(\Controller_inst.n13190 ), .C0(\Controller_inst.index[5] ), 
    .CIN0(\Controller_inst.n13190 ), .CIN1(\Controller_inst.n19626 ), 
    .F0(\Controller_inst.n133_adj_680[5] ), 
    .F1(\Controller_inst.n133_adj_680[6] ), .COUT1(\Controller_inst.n13192 ), 
    .COUT0(\Controller_inst.n19626 ));
  Controller_inst_SLICE_40 \Controller_inst.SLICE_40 ( 
    .D1(\Controller_inst.n19623 ), .C1(\Controller_inst.index[4] ), 
    .D0(\Controller_inst.n13188 ), .C0(\Controller_inst.index[3] ), 
    .CIN0(\Controller_inst.n13188 ), .CIN1(\Controller_inst.n19623 ), 
    .F0(\Controller_inst.n133_adj_680[3] ), 
    .F1(\Controller_inst.n133_adj_680[4] ), .COUT1(\Controller_inst.n13190 ), 
    .COUT0(\Controller_inst.n19623 ));
  Controller_inst_SLICE_41 \Controller_inst.SLICE_41 ( 
    .D1(\Controller_inst.n19620 ), .C1(\Controller_inst.index[2] ), 
    .D0(\Controller_inst.n13186 ), .C0(\Controller_inst.index[1] ), 
    .CIN0(\Controller_inst.n13186 ), .CIN1(\Controller_inst.n19620 ), 
    .F0(\Controller_inst.n133_adj_680[1] ), 
    .F1(\Controller_inst.n133_adj_680[2] ), .COUT1(\Controller_inst.n13188 ), 
    .COUT0(\Controller_inst.n19620 ));
  Controller_inst_SLICE_42 \Controller_inst.SLICE_42 ( 
    .D1(\Controller_inst.n19497 ), .C1(\Controller_inst.index[0] ), 
    .B1(VCC_net), .CIN1(\Controller_inst.n19497 ), 
    .F1(\Controller_inst.n133_adj_680[0] ), .COUT1(\Controller_inst.n13186 ), 
    .COUT0(\Controller_inst.n19497 ));
  Controller_inst_SLICE_43 \Controller_inst.SLICE_43 ( 
    .D1(\Controller_inst.n19476 ), .D0(\Controller_inst.n13137 ), .C0(VCC_net), 
    .B0(\Controller_inst.NUM_DATA[31] ), .CIN0(\Controller_inst.n13137 ), 
    .CIN1(\Controller_inst.n19476 ), .F0(\Controller_inst.n167_adj_681[31] ), 
    .COUT0(\Controller_inst.n19476 ));
  Controller_inst_SLICE_44 \Controller_inst.SLICE_44 ( 
    .D1(\Controller_inst.n19467 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[30] ), .D0(\Controller_inst.n13135 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[29] ), 
    .CIN0(\Controller_inst.n13135 ), .CIN1(\Controller_inst.n19467 ), 
    .F0(\Controller_inst.n59 ), .F1(\Controller_inst.n61 ), 
    .COUT1(\Controller_inst.n13137 ), .COUT0(\Controller_inst.n19467 ));
  Controller_inst_SLICE_45 \Controller_inst.SLICE_45 ( 
    .D1(\Controller_inst.n19458 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[28] ), .D0(\Controller_inst.n13133 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[27] ), 
    .CIN0(\Controller_inst.n13133 ), .CIN1(\Controller_inst.n19458 ), 
    .F0(\Controller_inst.n55 ), .F1(\Controller_inst.n57 ), 
    .COUT1(\Controller_inst.n13135 ), .COUT0(\Controller_inst.n19458 ));
  Controller_inst_SLICE_46 \Controller_inst.SLICE_46 ( 
    .D1(\Controller_inst.n19449 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[26] ), .D0(\Controller_inst.n13131 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[25] ), 
    .CIN0(\Controller_inst.n13131 ), .CIN1(\Controller_inst.n19449 ), 
    .F0(\Controller_inst.n51 ), .F1(\Controller_inst.n53 ), 
    .COUT1(\Controller_inst.n13133 ), .COUT0(\Controller_inst.n19449 ));
  Controller_inst_SLICE_47 \Controller_inst.SLICE_47 ( 
    .D1(\Controller_inst.n19440 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[24] ), .D0(\Controller_inst.n13129 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[23] ), 
    .CIN0(\Controller_inst.n13129 ), .CIN1(\Controller_inst.n19440 ), 
    .F0(\Controller_inst.n47_adj_592 ), .F1(\Controller_inst.n49_adj_591 ), 
    .COUT1(\Controller_inst.n13131 ), .COUT0(\Controller_inst.n19440 ));
  Controller_inst_SLICE_48 \Controller_inst.SLICE_48 ( 
    .D1(\Controller_inst.n19431 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[22] ), .D0(\Controller_inst.n13127 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[21] ), 
    .CIN0(\Controller_inst.n13127 ), .CIN1(\Controller_inst.n19431 ), 
    .F0(\Controller_inst.n43_adj_590 ), .F1(\Controller_inst.n45_adj_595 ), 
    .COUT1(\Controller_inst.n13129 ), .COUT0(\Controller_inst.n19431 ));
  Controller_inst_SLICE_49 \Controller_inst.SLICE_49 ( 
    .D1(\Controller_inst.n19422 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[20] ), .D0(\Controller_inst.n13125 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[19] ), 
    .CIN0(\Controller_inst.n13125 ), .CIN1(\Controller_inst.n19422 ), 
    .F0(\Controller_inst.n39_adj_598 ), .F1(\Controller_inst.n41 ), 
    .COUT1(\Controller_inst.n13127 ), .COUT0(\Controller_inst.n19422 ));
  Controller_inst_SLICE_50 \Controller_inst.SLICE_50 ( 
    .D1(\Controller_inst.n19413 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[18] ), .D0(\Controller_inst.n13123 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[17] ), 
    .CIN0(\Controller_inst.n13123 ), .CIN1(\Controller_inst.n19413 ), 
    .F0(\Controller_inst.n35 ), .F1(\Controller_inst.n37_adj_596 ), 
    .COUT1(\Controller_inst.n13125 ), .COUT0(\Controller_inst.n19413 ));
  Controller_inst_SLICE_51 \Controller_inst.SLICE_51 ( 
    .D1(\Controller_inst.n19404 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[16] ), .D0(\Controller_inst.n13121 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[15] ), 
    .CIN0(\Controller_inst.n13121 ), .CIN1(\Controller_inst.n19404 ), 
    .F0(\Controller_inst.n31 ), .F1(\Controller_inst.n33_adj_593 ), 
    .COUT1(\Controller_inst.n13123 ), .COUT0(\Controller_inst.n19404 ));
  Controller_inst_SLICE_52 \Controller_inst.SLICE_52 ( 
    .D1(\Controller_inst.n19395 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[14] ), .D0(\Controller_inst.n13119 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[13] ), 
    .CIN0(\Controller_inst.n13119 ), .CIN1(\Controller_inst.n19395 ), 
    .F0(\Controller_inst.n27_adj_594 ), .F1(\Controller_inst.n29 ), 
    .COUT1(\Controller_inst.n13121 ), .COUT0(\Controller_inst.n19395 ));
  Controller_inst_SLICE_53 \Controller_inst.SLICE_53 ( 
    .D1(\Controller_inst.n19386 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[12] ), .D0(\Controller_inst.n13117 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[11] ), 
    .CIN0(\Controller_inst.n13117 ), .CIN1(\Controller_inst.n19386 ), 
    .F0(\Controller_inst.n23 ), .F1(\Controller_inst.n25 ), 
    .COUT1(\Controller_inst.n13119 ), .COUT0(\Controller_inst.n19386 ));
  Controller_inst_SLICE_54 \Controller_inst.SLICE_54 ( 
    .D1(\Controller_inst.n19377 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[10] ), .D0(\Controller_inst.n13115 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[9] ), 
    .CIN0(\Controller_inst.n13115 ), .CIN1(\Controller_inst.n19377 ), 
    .F0(\Controller_inst.n19 ), .F1(\Controller_inst.n21 ), 
    .COUT1(\Controller_inst.n13117 ), .COUT0(\Controller_inst.n19377 ));
  Controller_inst_SLICE_55 \Controller_inst.SLICE_55 ( 
    .D1(\Controller_inst.n19368 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[8] ), .D0(\Controller_inst.n13113 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[7] ), 
    .CIN0(\Controller_inst.n13113 ), .CIN1(\Controller_inst.n19368 ), 
    .F0(\Controller_inst.n167_adj_681[7] ), .F1(\Controller_inst.n17 ), 
    .COUT1(\Controller_inst.n13115 ), .COUT0(\Controller_inst.n19368 ));
  Controller_inst_SLICE_56 \Controller_inst.SLICE_56 ( 
    .D1(\Controller_inst.n19359 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[6] ), .D0(\Controller_inst.n13111 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[5] ), 
    .CIN0(\Controller_inst.n13111 ), .CIN1(\Controller_inst.n19359 ), 
    .F0(\Controller_inst.n167_adj_681[5] ), 
    .F1(\Controller_inst.n167_adj_681[6] ), .COUT1(\Controller_inst.n13113 ), 
    .COUT0(\Controller_inst.n19359 ));
  Controller_inst_SLICE_57 \Controller_inst.SLICE_57 ( 
    .D1(\Controller_inst.n19350 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[4] ), .D0(\Controller_inst.n13109 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[3] ), 
    .CIN0(\Controller_inst.n13109 ), .CIN1(\Controller_inst.n19350 ), 
    .F0(\Controller_inst.n167_adj_681[3] ), 
    .F1(\Controller_inst.n167_adj_681[4] ), .COUT1(\Controller_inst.n13111 ), 
    .COUT0(\Controller_inst.n19350 ));
  Controller_inst_SLICE_58 \Controller_inst.SLICE_58 ( 
    .D1(\Controller_inst.n19335 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[0] ), .CIN1(\Controller_inst.n19335 ), 
    .F1(\Controller_inst.n167_adj_681[0] ), .COUT1(\Controller_inst.n13107 ), 
    .COUT0(\Controller_inst.n19335 ));
  Controller_inst_SLICE_59 \Controller_inst.SLICE_59 ( 
    .D1(\Controller_inst.n19617 ), .D0(\Controller_inst.n13249 ), 
    .C0(\Controller_inst.stm32_counter[31] ), .CIN0(\Controller_inst.n13249 ), 
    .CIN1(\Controller_inst.n19617 ), .F0(\Controller_inst.n133[31] ), 
    .COUT0(\Controller_inst.n19617 ));
  Controller_inst_SLICE_60 \Controller_inst.SLICE_60 ( 
    .D1(\Controller_inst.n19614 ), .C1(\Controller_inst.stm32_counter[30] ), 
    .D0(\Controller_inst.n13247 ), .C0(\Controller_inst.stm32_counter[29] ), 
    .CIN0(\Controller_inst.n13247 ), .CIN1(\Controller_inst.n19614 ), 
    .F0(\Controller_inst.n133[29] ), .F1(\Controller_inst.n133[30] ), 
    .COUT1(\Controller_inst.n13249 ), .COUT0(\Controller_inst.n19614 ));
  Controller_inst_SLICE_61 \Controller_inst.SLICE_61 ( 
    .D1(\Controller_inst.n19611 ), .C1(\Controller_inst.stm32_counter[28] ), 
    .D0(\Controller_inst.n13245 ), .C0(\Controller_inst.stm32_counter[27] ), 
    .CIN0(\Controller_inst.n13245 ), .CIN1(\Controller_inst.n19611 ), 
    .F0(\Controller_inst.n133[27] ), .F1(\Controller_inst.n133[28] ), 
    .COUT1(\Controller_inst.n13247 ), .COUT0(\Controller_inst.n19611 ));
  Controller_inst_SLICE_62 \Controller_inst.SLICE_62 ( 
    .D1(\Controller_inst.n19341 ), .C1(VCC_net), 
    .B1(\Controller_inst.NUM_DATA[2] ), .D0(\Controller_inst.n13107 ), 
    .C0(VCC_net), .B0(\Controller_inst.NUM_DATA[1] ), 
    .CIN0(\Controller_inst.n13107 ), .CIN1(\Controller_inst.n19341 ), 
    .F0(\Controller_inst.n167_adj_681[1] ), 
    .F1(\Controller_inst.n167_adj_681[2] ), .COUT1(\Controller_inst.n13109 ), 
    .COUT0(\Controller_inst.n19341 ));
  Controller_inst_SLICE_63 \Controller_inst.SLICE_63 ( 
    .D1(\Controller_inst.n19608 ), .C1(\Controller_inst.stm32_counter[26] ), 
    .D0(\Controller_inst.n13243 ), .C0(\Controller_inst.stm32_counter[25] ), 
    .CIN0(\Controller_inst.n13243 ), .CIN1(\Controller_inst.n19608 ), 
    .F0(\Controller_inst.n133[25] ), .F1(\Controller_inst.n133[26] ), 
    .COUT1(\Controller_inst.n13245 ), .COUT0(\Controller_inst.n19608 ));
  Controller_inst_SLICE_64 \Controller_inst.SLICE_64 ( 
    .D1(\Controller_inst.n19605 ), .C1(\Controller_inst.stm32_counter[24] ), 
    .D0(\Controller_inst.n13241 ), .C0(\Controller_inst.stm32_counter[23] ), 
    .CIN0(\Controller_inst.n13241 ), .CIN1(\Controller_inst.n19605 ), 
    .F0(\Controller_inst.n133[23] ), .F1(\Controller_inst.n133[24] ), 
    .COUT1(\Controller_inst.n13243 ), .COUT0(\Controller_inst.n19605 ));
  Controller_inst_SLICE_65 \Controller_inst.SLICE_65 ( 
    .D1(\Controller_inst.n19602 ), .C1(\Controller_inst.stm32_counter[22] ), 
    .D0(\Controller_inst.n13239 ), .C0(\Controller_inst.stm32_counter[21] ), 
    .CIN0(\Controller_inst.n13239 ), .CIN1(\Controller_inst.n19602 ), 
    .F0(\Controller_inst.n133[21] ), .F1(\Controller_inst.n133[22] ), 
    .COUT1(\Controller_inst.n13241 ), .COUT0(\Controller_inst.n19602 ));
  Controller_inst_SLICE_66 \Controller_inst.SLICE_66 ( 
    .D1(\Controller_inst.n19599 ), .C1(\Controller_inst.stm32_counter[20] ), 
    .D0(\Controller_inst.n13237 ), .C0(\Controller_inst.stm32_counter[19] ), 
    .CIN0(\Controller_inst.n13237 ), .CIN1(\Controller_inst.n19599 ), 
    .F0(\Controller_inst.n133[19] ), .F1(\Controller_inst.n133[20] ), 
    .COUT1(\Controller_inst.n13239 ), .COUT0(\Controller_inst.n19599 ));
  Controller_inst_SLICE_67 \Controller_inst.SLICE_67 ( 
    .D1(\Controller_inst.n19596 ), .C1(\Controller_inst.stm32_counter[18] ), 
    .D0(\Controller_inst.n13235 ), .C0(\Controller_inst.stm32_counter[17] ), 
    .CIN0(\Controller_inst.n13235 ), .CIN1(\Controller_inst.n19596 ), 
    .F0(\Controller_inst.n133[17] ), .F1(\Controller_inst.n133[18] ), 
    .COUT1(\Controller_inst.n13237 ), .COUT0(\Controller_inst.n19596 ));
  Controller_inst_SLICE_68 \Controller_inst.SLICE_68 ( 
    .D1(\Controller_inst.n19593 ), .C1(\Controller_inst.stm32_counter[16] ), 
    .D0(\Controller_inst.n13233 ), .C0(\Controller_inst.stm32_counter[15] ), 
    .CIN0(\Controller_inst.n13233 ), .CIN1(\Controller_inst.n19593 ), 
    .F0(\Controller_inst.n133[15] ), .F1(\Controller_inst.n133[16] ), 
    .COUT1(\Controller_inst.n13235 ), .COUT0(\Controller_inst.n19593 ));
  Controller_inst_SLICE_69 \Controller_inst.SLICE_69 ( 
    .D1(\Controller_inst.n19590 ), .C1(\Controller_inst.stm32_counter[14] ), 
    .D0(\Controller_inst.n13231 ), .C0(\Controller_inst.stm32_counter[13] ), 
    .CIN0(\Controller_inst.n13231 ), .CIN1(\Controller_inst.n19590 ), 
    .F0(\Controller_inst.n133[13] ), .F1(\Controller_inst.n133[14] ), 
    .COUT1(\Controller_inst.n13233 ), .COUT0(\Controller_inst.n19590 ));
  Controller_inst_SLICE_70 \Controller_inst.SLICE_70 ( 
    .D1(\Controller_inst.n19587 ), .C1(\Controller_inst.stm32_counter[12] ), 
    .D0(\Controller_inst.n13229 ), .C0(\Controller_inst.stm32_counter[11] ), 
    .CIN0(\Controller_inst.n13229 ), .CIN1(\Controller_inst.n19587 ), 
    .F0(\Controller_inst.n133[11] ), .F1(\Controller_inst.n133[12] ), 
    .COUT1(\Controller_inst.n13231 ), .COUT0(\Controller_inst.n19587 ));
  Controller_inst_SLICE_71 \Controller_inst.SLICE_71 ( 
    .D1(\Controller_inst.n19584 ), .C1(\Controller_inst.stm32_counter[10] ), 
    .D0(\Controller_inst.n13227 ), .C0(\Controller_inst.stm32_counter[9] ), 
    .CIN0(\Controller_inst.n13227 ), .CIN1(\Controller_inst.n19584 ), 
    .F0(\Controller_inst.n133[9] ), .F1(\Controller_inst.n133[10] ), 
    .COUT1(\Controller_inst.n13229 ), .COUT0(\Controller_inst.n19584 ));
  Controller_inst_SLICE_72 \Controller_inst.SLICE_72 ( 
    .D1(\Controller_inst.n19581 ), .C1(\Controller_inst.stm32_counter[8] ), 
    .D0(\Controller_inst.n13225 ), .C0(\Controller_inst.stm32_counter[7] ), 
    .CIN0(\Controller_inst.n13225 ), .CIN1(\Controller_inst.n19581 ), 
    .F0(\Controller_inst.n133[7] ), .F1(\Controller_inst.n133[8] ), 
    .COUT1(\Controller_inst.n13227 ), .COUT0(\Controller_inst.n19581 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_73 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_73 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n19674 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n13183 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[6] ), .B0(VCC_net), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.n13183 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.n19674 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n33[6] ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.n19674 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_74 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_74 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n19671 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[5] ), .B1(VCC_net), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n13181 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[4] ), .B0(VCC_net), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.n13181 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.n19671 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n33[4] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n33[5] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.n13183 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.n19671 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_75 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_75 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n19668 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[3] ), .B1(VCC_net), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n13179 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[2] ), .B0(VCC_net), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.n13179 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.n19668 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n33[2] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n33[3] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.n13181 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.n19668 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_76 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_76 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n19494 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[1] ), .B1(VCC_net), 
    .D0(VCC_net), .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[0] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.int_STM32_TX_Ready_N_535 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.n19494 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n33[0] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n33[1] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.n13179 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.n19494 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_77 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_77 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19308 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[4] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13100 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[3] ), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13100 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19308 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[3] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[4] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13102 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19308 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_78 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_78 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19716 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13088 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[5] ), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13088 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19716 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[5] ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19716 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_79 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_79 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19305 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13098 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[1] ), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13098 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19305 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[1] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[2] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13100 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19305 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_80 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_80 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19713 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13086 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[3] ), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13086 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19713 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[3] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[4] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13088 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19713 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_81 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_81 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19302 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[0] ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19302 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[0] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13098 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19302 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_82 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_82 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19710 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13084 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13084 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19710 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[1] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[2] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13086 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19710 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_83 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_83 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19296 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19296 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[0] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13084 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19296 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_84 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_84 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19314 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13104 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[7] ), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13104 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19314 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[7] ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19314 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_85 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_85 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19311 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[6] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13102 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[5] ), 
    .CIN0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13102 ), 
    .CIN1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19311 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[5] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[6] ), 
    .COUT1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13104 ), 
    .COUT0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n19311 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_86 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_86 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19908 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[5] )
    , .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13160 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[4] )
    , .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13160 ), 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19908 ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[5] ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[6] ), 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19908 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_87 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_87 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19905 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[3] )
    , .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13158 ), 
    .C0(VCC_net), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[2] )
    , .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13158 ), 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19905 ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[3] ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[4] ), 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13160 ), 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19905 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_88 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_88 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19287 ), 
    .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[1] )
    , .D0(VCC_net), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9252 ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[0] )
    , .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19287 ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[1] ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[2] ), 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13158 ), 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n19287 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_89 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_89 
    ( 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[5] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19683 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13176 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[5] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13176 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19683 )
    , 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[5] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[5] )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19683 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_90 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_90 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[4] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[3] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19680 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13174 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13174 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19680 )
    , 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[3] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[4] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13176 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19680 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_91 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_91 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[2] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[1] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19677 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13172 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[1] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13172 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19677 )
    , 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[1] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[1] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[2] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13174 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19677 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_92 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_92 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[0] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19485 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[0] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n5866 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19485 )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[0] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count_5__N_349[0] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13172 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19485 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_93 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_93 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19488 )
    , .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[0] )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19488 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[0] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13091 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19488 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_94 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_94 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19707 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13095 )
    , .C0(VCC_net), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[5] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13095 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19707 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[5] )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19707 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_95 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_95 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19557 )
    , .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13093 )
    , .C0(VCC_net), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[3] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13093 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19557 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[3] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[4] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13095 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19557 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_96 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_96 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19491 )
    , .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13091 )
    , .C0(VCC_net), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[1] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13091 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19491 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[1] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[2] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n13093 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n19491 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_97
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.SLICE_97 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[7] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[6] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19692 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5485 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[7] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13168 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5487 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[6] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13168 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19692 )
    , .Q0(\Controller_inst.int_FIFO_COUNT[6] ), 
    .Q1(\Controller_inst.int_FIFO_COUNT[7] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[6] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[7] )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19692 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_98
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.SLICE_98 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[5] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[4] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19689 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5489 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[5] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13166 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5491 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[4] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13166 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19689 )
    , .Q0(\Controller_inst.int_FIFO_COUNT[4] ), 
    .Q1(\Controller_inst.int_FIFO_COUNT[5] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[4] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[5] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13168 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19689 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_99
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.SLICE_99 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[3] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[2] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19686 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5493 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[3] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13164 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5495 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[2] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13164 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19686 )
    , .Q0(\Controller_inst.int_FIFO_COUNT[2] ), 
    .Q1(\Controller_inst.int_FIFO_COUNT[3] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[2] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[3] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13166 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19686 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_100
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.SLICE_100 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[1] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[0] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19482 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5497 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[1] )
    , .D0(VCC_net), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5483 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19482 )
    , .Q0(\Controller_inst.int_FIFO_COUNT[0] ), 
    .Q1(\Controller_inst.int_FIFO_COUNT[1] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[0] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w[1] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13164 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19482 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_101
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_101 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19704 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13155 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[7] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13155 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19704 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7] )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19704 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_102
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_102 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19701 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13153 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13153 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19701 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13155 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19701 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_103
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_103 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19698 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13151 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13151 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19698 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13153 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19698 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_104
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_104 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19695 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13149 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13149 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19695 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13151 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19695 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_105
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_105 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19332 )
    , .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0] )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19332 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13149 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19332 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_106
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_106 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19329 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13146 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[7] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13146 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19329 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7] )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19329 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_107
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_107 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19326 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13144 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13144 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19326 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13146 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19326 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_108
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_108 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19323 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13142 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13142 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19323 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13144 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19323 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_109
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_109 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19320 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13140 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1] )
    , 
    .CIN0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13140 )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19320 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13142 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19320 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_110
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_110 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19317 )
    , .C1(VCC_net), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0] )
    , 
    .CIN1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19317 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0] )
    , 
    .COUT1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n13140 )
    , 
    .COUT0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n19317 )
    );
  Controller_inst_SLICE_117 \Controller_inst.SLICE_117 ( 
    .DI1(\Controller_inst.n8537 ), .DI0(\Controller_inst.n8536 ), 
    .D1(\Controller_inst.temp_buffer[32] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[32] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[33] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[33] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[33] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[32] ), .F0(\Controller_inst.n8536 ), 
    .F1(\Controller_inst.n8537 ));
  Controller_inst_SLICE_119 \Controller_inst.SLICE_119 ( 
    .DI1(\Controller_inst.n18595 ), .DI0(\Controller_inst.n14693 ), 
    .D1(\Controller_inst.n11111 ), .C1(\Controller_inst.n6_adj_577 ), 
    .B1(\Controller_inst.stm32_state[1] ), .A1(\Controller_inst.n9307 ), 
    .D0(\Controller_inst.n6622 ), .C0(\Controller_inst.n6_adj_579 ), 
    .B0(\Controller_inst.n317 ), .A0(\Controller_inst.n11111 ), 
    .CE(\Controller_inst.n6953 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_state[0] ), 
    .Q1(\Controller_inst.stm32_state[1] ), .F0(\Controller_inst.n14693 ), 
    .F1(\Controller_inst.n18595 ));
  Controller_inst_SLICE_122 \Controller_inst.SLICE_122 ( 
    .DI1(\Controller_inst.n167[1] ), .DI0(\Controller_inst.n167[0] ), 
    .D1(\Controller_inst.n133_adj_680[1] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n4391 ), .C0(\Controller_inst.n133_adj_680[0] ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[0] ), .Q1(\Controller_inst.index[1] ), 
    .F0(\Controller_inst.n167[0] ), .F1(\Controller_inst.n167[1] ));
  Controller_inst_SLICE_123 \Controller_inst.SLICE_123 ( 
    .DI1(\Controller_inst.n167_adj_682[1] ), 
    .DI0(\Controller_inst.n167_adj_682[0] ), .D1(\Controller_inst.n133[1] ), 
    .B1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[0] ), 
    .C0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[0] ), 
    .Q1(\Controller_inst.stm32_counter[1] ), 
    .F0(\Controller_inst.n167_adj_682[0] ), 
    .F1(\Controller_inst.n167_adj_682[1] ));
  Controller_inst_SLICE_124 \Controller_inst.SLICE_124 ( 
    .DI1(\Controller_inst.n167_adj_682[30] ), 
    .DI0(\Controller_inst.n167_adj_682[31] ), .D1(\Controller_inst.n133[30] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[31] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[31] ), 
    .Q1(\Controller_inst.stm32_counter[30] ), 
    .F0(\Controller_inst.n167_adj_682[31] ), 
    .F1(\Controller_inst.n167_adj_682[30] ));
  Controller_inst_SLICE_126 \Controller_inst.SLICE_126 ( 
    .DI1(\Controller_inst.n167_adj_682[28] ), 
    .DI0(\Controller_inst.n167_adj_682[29] ), .D1(\Controller_inst.n133[28] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[29] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[29] ), 
    .Q1(\Controller_inst.stm32_counter[28] ), 
    .F0(\Controller_inst.n167_adj_682[29] ), 
    .F1(\Controller_inst.n167_adj_682[28] ));
  Controller_inst_SLICE_128 \Controller_inst.SLICE_128 ( 
    .DI1(\Controller_inst.n167_adj_682[26] ), 
    .DI0(\Controller_inst.n167_adj_682[27] ), .D1(\Controller_inst.n133[26] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[27] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[27] ), 
    .Q1(\Controller_inst.stm32_counter[26] ), 
    .F0(\Controller_inst.n167_adj_682[27] ), 
    .F1(\Controller_inst.n167_adj_682[26] ));
  Controller_inst_SLICE_130 \Controller_inst.SLICE_130 ( 
    .DI1(\Controller_inst.n167_adj_682[24] ), 
    .DI0(\Controller_inst.n167_adj_682[25] ), .D1(\Controller_inst.n133[24] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[25] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[25] ), 
    .Q1(\Controller_inst.stm32_counter[24] ), 
    .F0(\Controller_inst.n167_adj_682[25] ), 
    .F1(\Controller_inst.n167_adj_682[24] ));
  Controller_inst_SLICE_132 \Controller_inst.SLICE_132 ( 
    .DI1(\Controller_inst.n167_adj_682[22] ), 
    .DI0(\Controller_inst.n167_adj_682[23] ), .D1(\Controller_inst.n133[22] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[23] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[23] ), 
    .Q1(\Controller_inst.stm32_counter[22] ), 
    .F0(\Controller_inst.n167_adj_682[23] ), 
    .F1(\Controller_inst.n167_adj_682[22] ));
  Controller_inst_SLICE_134 \Controller_inst.SLICE_134 ( 
    .DI1(\Controller_inst.n167_adj_682[20] ), 
    .DI0(\Controller_inst.n167_adj_682[21] ), .D1(\Controller_inst.n133[20] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[21] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[21] ), 
    .Q1(\Controller_inst.stm32_counter[20] ), 
    .F0(\Controller_inst.n167_adj_682[21] ), 
    .F1(\Controller_inst.n167_adj_682[20] ));
  Controller_inst_SLICE_136 \Controller_inst.SLICE_136 ( 
    .DI1(\Controller_inst.n167_adj_682[18] ), 
    .DI0(\Controller_inst.n167_adj_682[19] ), .D1(\Controller_inst.n133[18] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[19] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[19] ), 
    .Q1(\Controller_inst.stm32_counter[18] ), 
    .F0(\Controller_inst.n167_adj_682[19] ), 
    .F1(\Controller_inst.n167_adj_682[18] ));
  Controller_inst_SLICE_138 \Controller_inst.SLICE_138 ( 
    .DI1(\Controller_inst.n167_adj_682[16] ), 
    .DI0(\Controller_inst.n167_adj_682[17] ), .D1(\Controller_inst.n133[16] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[17] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[17] ), 
    .Q1(\Controller_inst.stm32_counter[16] ), 
    .F0(\Controller_inst.n167_adj_682[17] ), 
    .F1(\Controller_inst.n167_adj_682[16] ));
  Controller_inst_SLICE_140 \Controller_inst.SLICE_140 ( 
    .DI1(\Controller_inst.n167_adj_682[14] ), 
    .DI0(\Controller_inst.n167_adj_682[15] ), .D1(\Controller_inst.n133[14] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[15] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[15] ), 
    .Q1(\Controller_inst.stm32_counter[14] ), 
    .F0(\Controller_inst.n167_adj_682[15] ), 
    .F1(\Controller_inst.n167_adj_682[14] ));
  Controller_inst_SLICE_142 \Controller_inst.SLICE_142 ( 
    .DI1(\Controller_inst.n167_adj_682[12] ), 
    .DI0(\Controller_inst.n167_adj_682[13] ), .D1(\Controller_inst.n133[12] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[13] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[13] ), 
    .Q1(\Controller_inst.stm32_counter[12] ), 
    .F0(\Controller_inst.n167_adj_682[13] ), 
    .F1(\Controller_inst.n167_adj_682[12] ));
  Controller_inst_SLICE_144 \Controller_inst.SLICE_144 ( 
    .DI1(\Controller_inst.n167_adj_682[10] ), 
    .DI0(\Controller_inst.n167_adj_682[11] ), .D1(\Controller_inst.n133[10] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[11] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[11] ), 
    .Q1(\Controller_inst.stm32_counter[10] ), 
    .F0(\Controller_inst.n167_adj_682[11] ), 
    .F1(\Controller_inst.n167_adj_682[10] ));
  Controller_inst_SLICE_146 \Controller_inst.SLICE_146 ( 
    .DI1(\Controller_inst.n167_adj_682[8] ), 
    .DI0(\Controller_inst.n167_adj_682[9] ), .D1(\Controller_inst.n133[8] ), 
    .C1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[9] ), 
    .B0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[9] ), 
    .Q1(\Controller_inst.stm32_counter[8] ), 
    .F0(\Controller_inst.n167_adj_682[9] ), 
    .F1(\Controller_inst.n167_adj_682[8] ));
  Controller_inst_SLICE_148 \Controller_inst.SLICE_148 ( 
    .DI1(\Controller_inst.n167_adj_682[6] ), 
    .DI0(\Controller_inst.n167_adj_682[7] ), .D1(\Controller_inst.n133[6] ), 
    .B1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[7] ), 
    .C0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[7] ), 
    .Q1(\Controller_inst.stm32_counter[6] ), 
    .F0(\Controller_inst.n167_adj_682[7] ), 
    .F1(\Controller_inst.n167_adj_682[6] ));
  Controller_inst_SLICE_150 \Controller_inst.SLICE_150 ( 
    .DI1(\Controller_inst.n167_adj_682[4] ), 
    .DI0(\Controller_inst.n167_adj_682[5] ), .D1(\Controller_inst.n133[4] ), 
    .B1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[5] ), 
    .C0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[5] ), 
    .Q1(\Controller_inst.stm32_counter[4] ), 
    .F0(\Controller_inst.n167_adj_682[5] ), 
    .F1(\Controller_inst.n167_adj_682[4] ));
  Controller_inst_SLICE_152 \Controller_inst.SLICE_152 ( 
    .DI1(\Controller_inst.n167_adj_682[2] ), 
    .DI0(\Controller_inst.n167_adj_682[3] ), .D1(\Controller_inst.n133[2] ), 
    .B1(\Controller_inst.stm32_state[0] ), .D0(\Controller_inst.n133[3] ), 
    .C0(\Controller_inst.stm32_state[0] ), .CE(\Controller_inst.n4_adj_677 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_counter[3] ), 
    .Q1(\Controller_inst.stm32_counter[2] ), 
    .F0(\Controller_inst.n167_adj_682[3] ), 
    .F1(\Controller_inst.n167_adj_682[2] ));
  Controller_inst_SLICE_155 \Controller_inst.SLICE_155 ( 
    .DI1(\Controller_inst.n167[30] ), .DI0(\Controller_inst.n167[31] ), 
    .D1(\Controller_inst.n133_adj_680[30] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[31] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[31] ), .Q1(\Controller_inst.index[30] ), 
    .F0(\Controller_inst.n167[31] ), .F1(\Controller_inst.n167[30] ));
  Controller_inst_SLICE_157 \Controller_inst.SLICE_157 ( 
    .DI1(\Controller_inst.n167[28] ), .DI0(\Controller_inst.n167[29] ), 
    .D1(\Controller_inst.n133_adj_680[28] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[29] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[29] ), .Q1(\Controller_inst.index[28] ), 
    .F0(\Controller_inst.n167[29] ), .F1(\Controller_inst.n167[28] ));
  Controller_inst_SLICE_159 \Controller_inst.SLICE_159 ( 
    .DI1(\Controller_inst.n167[26] ), .DI0(\Controller_inst.n167[27] ), 
    .D1(\Controller_inst.n133_adj_680[26] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[27] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[27] ), .Q1(\Controller_inst.index[26] ), 
    .F0(\Controller_inst.n167[27] ), .F1(\Controller_inst.n167[26] ));
  Controller_inst_SLICE_161 \Controller_inst.SLICE_161 ( 
    .DI1(\Controller_inst.n167[24] ), .DI0(\Controller_inst.n167[25] ), 
    .D1(\Controller_inst.n133_adj_680[24] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[25] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[25] ), .Q1(\Controller_inst.index[24] ), 
    .F0(\Controller_inst.n167[25] ), .F1(\Controller_inst.n167[24] ));
  Controller_inst_SLICE_163 \Controller_inst.SLICE_163 ( 
    .DI1(\Controller_inst.n167[22] ), .DI0(\Controller_inst.n167[23] ), 
    .D1(\Controller_inst.n133_adj_680[22] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[23] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[23] ), .Q1(\Controller_inst.index[22] ), 
    .F0(\Controller_inst.n167[23] ), .F1(\Controller_inst.n167[22] ));
  Controller_inst_SLICE_165 \Controller_inst.SLICE_165 ( 
    .DI1(\Controller_inst.n167[20] ), .DI0(\Controller_inst.n167[21] ), 
    .D1(\Controller_inst.n133_adj_680[20] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[21] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[21] ), .Q1(\Controller_inst.index[20] ), 
    .F0(\Controller_inst.n167[21] ), .F1(\Controller_inst.n167[20] ));
  Controller_inst_SLICE_167 \Controller_inst.SLICE_167 ( 
    .DI1(\Controller_inst.n167[18] ), .DI0(\Controller_inst.n167[19] ), 
    .D1(\Controller_inst.n133_adj_680[18] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[19] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[19] ), .Q1(\Controller_inst.index[18] ), 
    .F0(\Controller_inst.n167[19] ), .F1(\Controller_inst.n167[18] ));
  Controller_inst_SLICE_169 \Controller_inst.SLICE_169 ( 
    .DI1(\Controller_inst.n167[16] ), .DI0(\Controller_inst.n167[17] ), 
    .D1(\Controller_inst.n133_adj_680[16] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[17] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[17] ), .Q1(\Controller_inst.index[16] ), 
    .F0(\Controller_inst.n167[17] ), .F1(\Controller_inst.n167[16] ));
  Controller_inst_SLICE_171 \Controller_inst.SLICE_171 ( 
    .DI1(\Controller_inst.n167[14] ), .DI0(\Controller_inst.n167[15] ), 
    .D1(\Controller_inst.n133_adj_680[14] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[15] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[15] ), .Q1(\Controller_inst.index[14] ), 
    .F0(\Controller_inst.n167[15] ), .F1(\Controller_inst.n167[14] ));
  Controller_inst_SLICE_173 \Controller_inst.SLICE_173 ( 
    .DI1(\Controller_inst.n167[12] ), .DI0(\Controller_inst.n167[13] ), 
    .D1(\Controller_inst.n133_adj_680[12] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[13] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[13] ), .Q1(\Controller_inst.index[12] ), 
    .F0(\Controller_inst.n167[13] ), .F1(\Controller_inst.n167[12] ));
  Controller_inst_SLICE_175 \Controller_inst.SLICE_175 ( 
    .DI1(\Controller_inst.n167[10] ), .DI0(\Controller_inst.n167[11] ), 
    .D1(\Controller_inst.n133_adj_680[10] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[11] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[11] ), .Q1(\Controller_inst.index[10] ), 
    .F0(\Controller_inst.n167[11] ), .F1(\Controller_inst.n167[10] ));
  Controller_inst_SLICE_177 \Controller_inst.SLICE_177 ( 
    .DI1(\Controller_inst.n167[8] ), .DI0(\Controller_inst.n167[9] ), 
    .D1(\Controller_inst.n133_adj_680[8] ), .C1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[9] ), .B0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[9] ), .Q1(\Controller_inst.index[8] ), 
    .F0(\Controller_inst.n167[9] ), .F1(\Controller_inst.n167[8] ));
  Controller_inst_SLICE_179 \Controller_inst.SLICE_179 ( 
    .DI1(\Controller_inst.n167[6] ), .DI0(\Controller_inst.n167[7] ), 
    .D1(\Controller_inst.n133_adj_680[6] ), .B1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[7] ), .C0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[7] ), .Q1(\Controller_inst.index[6] ), 
    .F0(\Controller_inst.n167[7] ), .F1(\Controller_inst.n167[6] ));
  Controller_inst_SLICE_181 \Controller_inst.SLICE_181 ( 
    .DI1(\Controller_inst.n167[4] ), .DI0(\Controller_inst.n167[5] ), 
    .D1(\Controller_inst.n133_adj_680[4] ), .B1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[5] ), .C0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[5] ), .Q1(\Controller_inst.index[4] ), 
    .F0(\Controller_inst.n167[5] ), .F1(\Controller_inst.n167[4] ));
  Controller_inst_SLICE_183 \Controller_inst.SLICE_183 ( 
    .DI1(\Controller_inst.n167[2] ), .DI0(\Controller_inst.n167[3] ), 
    .D1(\Controller_inst.n133_adj_680[2] ), .B1(\Controller_inst.n4391 ), 
    .D0(\Controller_inst.n133_adj_680[3] ), .C0(\Controller_inst.n4391 ), 
    .CE(\Controller_inst.n4_adj_675 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.index[3] ), .Q1(\Controller_inst.index[2] ), 
    .F0(\Controller_inst.n167[3] ), .F1(\Controller_inst.n167[2] ));
  Controller_inst_SLICE_186 \Controller_inst.SLICE_186 ( 
    .DI1(\Controller_inst.n15047 ), .DI0(\Controller_inst.n3_adj_679 ), 
    .D1(\Controller_inst.n15046 ), .C1(\Controller_inst.n11111 ), 
    .B1(\Controller_inst.n9311 ), .A1(\Controller_inst.stm32_state[1] ), 
    .D0(\Controller_inst.int_STM32_TX_Ready ), .C0(\Controller_inst.n9311 ), 
    .B0(\Controller_inst.stm32_state[1] ), .CE(\Controller_inst.n6953 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.stm32_state[3] ), 
    .Q1(\Controller_inst.stm32_state[2] ), .F0(\Controller_inst.n3_adj_679 ), 
    .F1(\Controller_inst.n15047 ));
  Controller_inst_SLICE_189 \Controller_inst.SLICE_189 ( 
    .DI1(\Controller_inst.index[2].sig_001.FeedThruLUT ), 
    .DI0(\Controller_inst.n4357[12] ), .D1(\Controller_inst.index[2] ), 
    .D0(\Controller_inst.index[0] ), .C0(\Controller_inst.index[1] ), 
    .A0(\Controller_inst.index[2] ), .CE(\Controller_inst.n2457 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_RHD_TX_Byte[12] ), 
    .Q1(\Controller_inst.int_RHD_TX_Byte[10] ), 
    .F0(\Controller_inst.n4357[12] ), 
    .F1(\Controller_inst.index[2].sig_001.FeedThruLUT ));
  Controller_inst_SLICE_191 \Controller_inst.SLICE_191 ( 
    .DI1(\Controller_inst.index[0].sig_003.FeedThruLUT ), 
    .DI0(\Controller_inst.index[1].sig_002.FeedThruLUT ), 
    .C1(\Controller_inst.index[0] ), .C0(\Controller_inst.index[1] ), 
    .CE(\Controller_inst.n2457 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_RHD_TX_Byte[9] ), 
    .Q1(\Controller_inst.int_RHD_TX_Byte[8] ), 
    .F0(\Controller_inst.index[1].sig_002.FeedThruLUT ), 
    .F1(\Controller_inst.index[0].sig_003.FeedThruLUT ));
  Controller_inst_SLICE_193 \Controller_inst.SLICE_193 ( 
    .DI1(\Controller_inst.n15705 ), .DI0(\Controller_inst.n6 ), 
    .D1(\Controller_inst.n2373 ), .C1(\Controller_inst.state[1] ), 
    .B1(\Controller_inst.state[0] ), .C0(\Controller_inst.n2373 ), 
    .A0(\Controller_inst.state[0] ), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.state[0] ), .Q1(\Controller_inst.state[1] ), 
    .F0(\Controller_inst.n6 ), .F1(\Controller_inst.n15705 ));
  Controller_inst_SLICE_195 \Controller_inst.SLICE_195 ( 
    .DI1(\Controller_inst.n8597 ), .DI0(\Controller_inst.n8598 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[35] ), 
    .C1(\Controller_inst.temp_buffer[35] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[34] ), .C0(\Controller_inst.n2455 ), 
    .B0(\Controller_inst.temp_buffer[34] ), .LSR(w_reset), 
    .CLK(pll_clk_internal), .Q0(\Controller_inst.int_STM32_TX_Byte[34] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[35] ), .F0(\Controller_inst.n8598 ), 
    .F1(\Controller_inst.n8597 ));
  Controller_inst_SLICE_197 \Controller_inst.SLICE_197 ( 
    .DI1(\Controller_inst.n8595 ), .DI0(\Controller_inst.n8596 ), 
    .D1(\Controller_inst.temp_buffer[37] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[37] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[36] ), 
    .C0(\Controller_inst.temp_buffer[36] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[36] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[37] ), .F0(\Controller_inst.n8596 ), 
    .F1(\Controller_inst.n8595 ));
  Controller_inst_SLICE_199 \Controller_inst.SLICE_199 ( 
    .DI1(\Controller_inst.n8593 ), .DI0(\Controller_inst.n8594 ), 
    .D1(\Controller_inst.temp_buffer[39] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[39] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[38] ), 
    .C0(\Controller_inst.temp_buffer[38] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[38] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[39] ), .F0(\Controller_inst.n8594 ), 
    .F1(\Controller_inst.n8593 ));
  Controller_inst_SLICE_201 \Controller_inst.SLICE_201 ( 
    .DI1(\Controller_inst.n8591 ), .DI0(\Controller_inst.n8592 ), 
    .D1(\Controller_inst.temp_buffer[41] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[41] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[40] ), 
    .C0(\Controller_inst.temp_buffer[40] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[40] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[41] ), .F0(\Controller_inst.n8592 ), 
    .F1(\Controller_inst.n8591 ));
  Controller_inst_SLICE_203 \Controller_inst.SLICE_203 ( 
    .DI1(\Controller_inst.n8589 ), .DI0(\Controller_inst.n8590 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[43] ), 
    .C1(\Controller_inst.temp_buffer[43] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[42] ), 
    .C0(\Controller_inst.temp_buffer[42] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[42] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[43] ), .F0(\Controller_inst.n8590 ), 
    .F1(\Controller_inst.n8589 ));
  Controller_inst_SLICE_205 \Controller_inst.SLICE_205 ( 
    .DI1(\Controller_inst.n8587 ), .DI0(\Controller_inst.n8588 ), 
    .D1(\Controller_inst.temp_buffer[45] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[45] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[44] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[44] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[44] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[45] ), .F0(\Controller_inst.n8588 ), 
    .F1(\Controller_inst.n8587 ));
  Controller_inst_SLICE_207 \Controller_inst.SLICE_207 ( 
    .DI1(\Controller_inst.n8585 ), .DI0(\Controller_inst.n8586 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[47] ), .C1(\Controller_inst.n2455 ), 
    .B1(\Controller_inst.temp_buffer[47] ), .D0(\Controller_inst.n2455 ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[46] ), 
    .B0(\Controller_inst.temp_buffer[46] ), .LSR(w_reset), 
    .CLK(pll_clk_internal), .Q0(\Controller_inst.int_STM32_TX_Byte[46] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[47] ), .F0(\Controller_inst.n8586 ), 
    .F1(\Controller_inst.n8585 ));
  Controller_inst_SLICE_209 \Controller_inst.SLICE_209 ( 
    .DI1(\Controller_inst.n8583 ), .DI0(\Controller_inst.n8584 ), 
    .D1(\Controller_inst.temp_buffer[49] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[49] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[48] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[48] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[48] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[49] ), .F0(\Controller_inst.n8584 ), 
    .F1(\Controller_inst.n8583 ));
  Controller_inst_SLICE_211 \Controller_inst.SLICE_211 ( 
    .DI1(\Controller_inst.n8581 ), .DI0(\Controller_inst.n8582 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[51] ), 
    .C1(\Controller_inst.temp_buffer[51] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[50] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[50] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[50] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[51] ), .F0(\Controller_inst.n8582 ), 
    .F1(\Controller_inst.n8581 ));
  Controller_inst_SLICE_213 \Controller_inst.SLICE_213 ( 
    .DI1(\Controller_inst.n8579 ), .DI0(\Controller_inst.n8580 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[53] ), 
    .C1(\Controller_inst.temp_buffer[53] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[52] ), 
    .C0(\Controller_inst.temp_buffer[52] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[52] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[53] ), .F0(\Controller_inst.n8580 ), 
    .F1(\Controller_inst.n8579 ));
  Controller_inst_SLICE_215 \Controller_inst.SLICE_215 ( 
    .DI1(\Controller_inst.n8577 ), .DI0(\Controller_inst.n8578 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[55] ), 
    .C1(\Controller_inst.temp_buffer[55] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[54] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[54] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[54] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[55] ), .F0(\Controller_inst.n8578 ), 
    .F1(\Controller_inst.n8577 ));
  Controller_inst_SLICE_217 \Controller_inst.SLICE_217 ( 
    .DI1(\Controller_inst.n8575 ), .DI0(\Controller_inst.n8576 ), 
    .D1(\Controller_inst.temp_buffer[57] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[57] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[56] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[56] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[56] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[57] ), .F0(\Controller_inst.n8576 ), 
    .F1(\Controller_inst.n8575 ));
  Controller_inst_SLICE_219 \Controller_inst.SLICE_219 ( 
    .DI1(\Controller_inst.n8573 ), .DI0(\Controller_inst.n8574 ), 
    .D1(\Controller_inst.temp_buffer[59] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[59] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[58] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[58] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[58] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[59] ), .F0(\Controller_inst.n8574 ), 
    .F1(\Controller_inst.n8573 ));
  Controller_inst_SLICE_221 \Controller_inst.SLICE_221 ( 
    .DI1(\Controller_inst.n8571 ), .DI0(\Controller_inst.n8572 ), 
    .D1(\Controller_inst.temp_buffer[61] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[61] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[60] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[60] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[60] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[61] ), .F0(\Controller_inst.n8572 ), 
    .F1(\Controller_inst.n8571 ));
  Controller_inst_SLICE_223 \Controller_inst.SLICE_223 ( 
    .DI1(\Controller_inst.n8569 ), .DI0(\Controller_inst.n8570 ), 
    .D1(\Controller_inst.temp_buffer[63] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[63] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[62] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[62] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[62] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[63] ), .F0(\Controller_inst.n8570 ), 
    .F1(\Controller_inst.n8569 ));
  Controller_inst_SLICE_225 \Controller_inst.SLICE_225 ( 
    .DI1(\Controller_inst.n8523 ), .DI0(\Controller_inst.n8568 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[0] ), .C1(\Controller_inst.n2455 ), 
    .B1(\Controller_inst.temp_buffer[0] ), 
    .D0(\Controller_inst.temp_buffer[1] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[1] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[1] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[0] ), .F0(\Controller_inst.n8568 ), 
    .F1(\Controller_inst.n8523 ));
  Controller_inst_SLICE_226 \Controller_inst.SLICE_226 ( 
    .DI1(\Controller_inst.n8566 ), .DI0(\Controller_inst.n8567 ), 
    .D1(\Controller_inst.temp_buffer[3] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[3] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[2] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[2] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[2] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[3] ), .F0(\Controller_inst.n8567 ), 
    .F1(\Controller_inst.n8566 ));
  Controller_inst_SLICE_228 \Controller_inst.SLICE_228 ( 
    .DI1(\Controller_inst.n8564 ), .DI0(\Controller_inst.n8565 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[5] ), 
    .C1(\Controller_inst.temp_buffer[5] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[4] ), 
    .C0(\Controller_inst.temp_buffer[4] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[4] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[5] ), .F0(\Controller_inst.n8565 ), 
    .F1(\Controller_inst.n8564 ));
  Controller_inst_SLICE_230 \Controller_inst.SLICE_230 ( 
    .DI1(\Controller_inst.n8562 ), .DI0(\Controller_inst.n8563 ), 
    .D1(\Controller_inst.temp_buffer[7] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[7] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[6] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[6] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[6] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[7] ), .F0(\Controller_inst.n8563 ), 
    .F1(\Controller_inst.n8562 ));
  Controller_inst_SLICE_232 \Controller_inst.SLICE_232 ( 
    .DI1(\Controller_inst.n8560 ), .DI0(\Controller_inst.n8561 ), 
    .D1(\Controller_inst.temp_buffer[9] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[9] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[8] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[8] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[8] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[9] ), .F0(\Controller_inst.n8561 ), 
    .F1(\Controller_inst.n8560 ));
  Controller_inst_SLICE_234 \Controller_inst.SLICE_234 ( 
    .DI1(\Controller_inst.n8558 ), .DI0(\Controller_inst.n8559 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[11] ), 
    .C1(\Controller_inst.temp_buffer[11] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[10] ), 
    .C0(\Controller_inst.temp_buffer[10] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[10] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[11] ), .F0(\Controller_inst.n8559 ), 
    .F1(\Controller_inst.n8558 ));
  Controller_inst_SLICE_236 \Controller_inst.SLICE_236 ( 
    .DI1(\Controller_inst.n8556 ), .DI0(\Controller_inst.n8557 ), 
    .D1(\Controller_inst.temp_buffer[13] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[13] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[12] ), 
    .C0(\Controller_inst.temp_buffer[12] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[12] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[13] ), .F0(\Controller_inst.n8557 ), 
    .F1(\Controller_inst.n8556 ));
  Controller_inst_SLICE_238 \Controller_inst.SLICE_238 ( 
    .DI1(\Controller_inst.n8554 ), .DI0(\Controller_inst.n8555 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[15] ), 
    .C1(\Controller_inst.temp_buffer[15] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[14] ), 
    .C0(\Controller_inst.temp_buffer[14] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[14] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[15] ), .F0(\Controller_inst.n8555 ), 
    .F1(\Controller_inst.n8554 ));
  Controller_inst_SLICE_240 \Controller_inst.SLICE_240 ( 
    .DI1(\Controller_inst.n8552 ), .DI0(\Controller_inst.n8553 ), 
    .D1(\Controller_inst.temp_buffer[17] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[17] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[16] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[16] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[16] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[17] ), .F0(\Controller_inst.n8553 ), 
    .F1(\Controller_inst.n8552 ));
  Controller_inst_SLICE_242 \Controller_inst.SLICE_242 ( 
    .DI1(\Controller_inst.n8550 ), .DI0(\Controller_inst.n8551 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[19] ), 
    .C1(\Controller_inst.temp_buffer[19] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[18] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[18] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[18] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[19] ), .F0(\Controller_inst.n8551 ), 
    .F1(\Controller_inst.n8550 ));
  Controller_inst_SLICE_244 \Controller_inst.SLICE_244 ( 
    .DI1(\Controller_inst.n8548 ), .DI0(\Controller_inst.n8549 ), 
    .D1(\Controller_inst.temp_buffer[21] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[21] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[20] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[20] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[20] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[21] ), .F0(\Controller_inst.n8549 ), 
    .F1(\Controller_inst.n8548 ));
  Controller_inst_SLICE_246 \Controller_inst.SLICE_246 ( 
    .DI1(\Controller_inst.n8546 ), .DI0(\Controller_inst.n8547 ), 
    .D1(\Controller_inst.temp_buffer[23] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[23] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[22] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[22] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[22] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[23] ), .F0(\Controller_inst.n8547 ), 
    .F1(\Controller_inst.n8546 ));
  Controller_inst_SLICE_248 \Controller_inst.SLICE_248 ( 
    .DI1(\Controller_inst.n8544 ), .DI0(\Controller_inst.n8545 ), 
    .D1(\Controller_inst.temp_buffer[25] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[25] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[24] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[24] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[24] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[25] ), .F0(\Controller_inst.n8545 ), 
    .F1(\Controller_inst.n8544 ));
  Controller_inst_SLICE_250 \Controller_inst.SLICE_250 ( 
    .DI1(\Controller_inst.n8542 ), .DI0(\Controller_inst.n8543 ), 
    .D1(\Controller_inst.temp_buffer[27] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[27] ), .A1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[26] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[26] ), .B0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[26] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[27] ), .F0(\Controller_inst.n8543 ), 
    .F1(\Controller_inst.n8542 ));
  Controller_inst_SLICE_252 \Controller_inst.SLICE_252 ( 
    .DI1(\Controller_inst.n8540 ), .DI0(\Controller_inst.n8541 ), 
    .D1(\Controller_inst.temp_buffer[29] ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[29] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.temp_buffer[28] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[28] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[28] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[29] ), .F0(\Controller_inst.n8541 ), 
    .F1(\Controller_inst.n8540 ));
  Controller_inst_SLICE_253 \Controller_inst.SLICE_253 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.n8524 ), 
    .DI0(\Controller_inst.n43_adj_599 ), 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.init_FIFO_State ), 
    .C1(\w_Controller_Mode[0] ), .B1(\w_Controller_Mode[1] ), 
    .D0(\Controller_inst.init_FIFO_Read ), .C0(\w_Controller_Mode[1] ), 
    .B0(\w_Controller_Mode[0] ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.init_FIFO_Read ), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.init_FIFO_State ), 
    .F0(\Controller_inst.n43_adj_599 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.n8524 ));
  Controller_inst_SLICE_254 \Controller_inst.SLICE_254 ( 
    .DI1(\Controller_inst.int_RHD_TX_DV.sig_071.FeedThruLUT ), 
    .DI0(\Controller_inst.n8525 ), .D1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.state[1] ), .C0(\Controller_inst.state[0] ), 
    .B0(\Controller_inst.n5 ), .A0(\Controller_inst.int_RHD_TX_DV ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_RHD_TX_DV ), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , .F0(\Controller_inst.n8525 ), 
    .F1(\Controller_inst.int_RHD_TX_DV.sig_071.FeedThruLUT ));
  Controller_inst_SLICE_257 \Controller_inst.SLICE_257 ( 
    .DI1(\Controller_inst.n8538 ), .DI0(\Controller_inst.n8539 ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[31] ), 
    .C1(\Controller_inst.temp_buffer[31] ), .B1(\Controller_inst.n2455 ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[30] ), 
    .C0(\Controller_inst.temp_buffer[30] ), .A0(\Controller_inst.n2455 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.int_STM32_TX_Byte[30] ), 
    .Q1(\Controller_inst.int_STM32_TX_Byte[31] ), .F0(\Controller_inst.n8539 ), 
    .F1(\Controller_inst.n8538 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_260 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_260 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.n42[1] ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.n42[0] ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n33[1] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n33[0] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n6968 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[0] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[1] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n42[0] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n42[1] ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_262 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_262 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.n42[4] ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.n42[5] ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n33[4] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n33[5] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n6968 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[5] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[4] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n42[5] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n42[4] ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_264 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_264 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.n42[2] ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.n42[3] ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n33[2] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n33[3] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n6968 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[3] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n42[3] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n42[2] ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_268 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_268 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.n5877 ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.n5875 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n15779 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n203 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[0] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n15697 ), 
    .C0(o_STM32_SPI_CS_n_c), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[0] ), 
    .A0(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n5875 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n5877 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_269 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_269 ( 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.n11315 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n6_adj_572 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[4] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[3] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n7011 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[4] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n11315 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_270 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_270 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[2] ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[3] ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n4 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[2] ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[3] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n4 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[2] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n7011 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[3] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[3] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[2] ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_272 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_272 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[0] ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[1] ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n270 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[1] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.n270 ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n7011 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[1] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[1] ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count_4__N_243[0] ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_275 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_275 ( 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk.sig_004.FeedThruLUT )
    , .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk ), 
    .LSR(w_reset), .CLK(pll_clk_internal), .Q0(o_STM32_SPI_Clk_c), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk.sig_004.FeedThruLUT )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_277 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_277 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8501 ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges_7__N_271[7] )
    , .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[6] ), 
    .C1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[7] ), 
    .B0(\Controller_inst.int_STM32_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9422 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[7] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[6] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges_7__N_271[7] )
    , .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8501 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_278 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_278 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[4] )
    , .DI0(\Controller_inst.SPI_Master_CS_STM32_1.n14545 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.r_SPI_Clk_Count[4] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13019 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[3] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n1352 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_SPI_Clk_Count[4] ), 
    .B0(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_Trailing_Edge ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.r_SPI_Clk_Count[4] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n14545 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[4] )
    );
  Controller_inst_SLICE_280 \Controller_inst.SLICE_280 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[1].sig_068.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[0].sig_005.FeedThruLUT ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[1] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[0] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[0] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[1] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[0].sig_005.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[1].sig_068.FeedThruLUT ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_281 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_281 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[1] )
    , 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[0] )
    , 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[1] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[0] ), 
    .B1(\Controller_inst.n27 ), .A1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[0] ), 
    .C0(\Controller_inst.n27 ), .B0(\Controller_inst.int_STM32_TX_DV ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[0] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[1] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[0] )
    , 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[1] )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_282 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_282 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8497 ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8511 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[0] ), 
    .C1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[1] ), 
    .B0(\Controller_inst.int_STM32_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9422 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[1] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8511 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8497 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_283 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_283 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8507 ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8509 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[3] ), 
    .B1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[2] ), 
    .C0(\Controller_inst.int_STM32_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9422 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[2] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[3] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8509 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8507 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_285 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_285 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8503 ), 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8505 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[5] ), 
    .B1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_2[4] ), 
    .C0(\Controller_inst.int_STM32_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9422 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[4] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[5] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8505 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n8503 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_290 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_290 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[2] )
    , 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[3] )
    , .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13019 ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13019 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[3] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[3] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[3] )
    , 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count_4__N_266[2] )
    );
  Controller_inst_SLICE_293 \Controller_inst.SLICE_293 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[62].sig_007.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[63].sig_006.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[62] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[63] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[63] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[62] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[63].sig_006.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[62].sig_007.FeedThruLUT ));
  Controller_inst_SLICE_295 \Controller_inst.SLICE_295 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[60].sig_009.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[61].sig_008.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[60] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[61] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[61] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[60] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[61].sig_008.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[60].sig_009.FeedThruLUT ));
  Controller_inst_SLICE_297 \Controller_inst.SLICE_297 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[58].sig_011.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[59].sig_010.FeedThruLUT ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[58] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[59] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[59] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[58] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[59].sig_010.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[58].sig_011.FeedThruLUT ));
  Controller_inst_SLICE_299 \Controller_inst.SLICE_299 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[56].sig_013.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[57].sig_012.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[56] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[57] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[57] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[56] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[57].sig_012.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[56].sig_013.FeedThruLUT ));
  Controller_inst_SLICE_301 \Controller_inst.SLICE_301 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[54].sig_015.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[55].sig_014.FeedThruLUT ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[54] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[55] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[55] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[54] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[55].sig_014.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[54].sig_015.FeedThruLUT ));
  Controller_inst_SLICE_303 \Controller_inst.SLICE_303 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[52].sig_017.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[53].sig_016.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[52] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[53] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[53] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[52] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[53].sig_016.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[52].sig_017.FeedThruLUT ));
  Controller_inst_SLICE_305 \Controller_inst.SLICE_305 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[50].sig_019.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[51].sig_018.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[50] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[51] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[51] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[50] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[51].sig_018.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[50].sig_019.FeedThruLUT ));
  Controller_inst_SLICE_307 \Controller_inst.SLICE_307 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[48].sig_021.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[49].sig_020.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[48] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[49] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[49] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[48] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[49].sig_020.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[48].sig_021.FeedThruLUT ));
  Controller_inst_SLICE_309 \Controller_inst.SLICE_309 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[46].sig_023.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[47].sig_022.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[46] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[47] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[47] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[46] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[47].sig_022.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[46].sig_023.FeedThruLUT ));
  Controller_inst_SLICE_311 \Controller_inst.SLICE_311 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[44].sig_025.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[45].sig_024.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[44] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[45] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[45] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[44] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[45].sig_024.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[44].sig_025.FeedThruLUT ));
  Controller_inst_SLICE_313 \Controller_inst.SLICE_313 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[42].sig_027.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[43].sig_026.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[42] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[43] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[43] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[42] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[43].sig_026.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[42].sig_027.FeedThruLUT ));
  Controller_inst_SLICE_315 \Controller_inst.SLICE_315 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[40].sig_029.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[41].sig_028.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[40] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[41] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[41] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[40] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[41].sig_028.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[40].sig_029.FeedThruLUT ));
  Controller_inst_SLICE_317 \Controller_inst.SLICE_317 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[38].sig_031.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[39].sig_030.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[38] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[39] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[39] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[38] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[39].sig_030.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[38].sig_031.FeedThruLUT ));
  Controller_inst_SLICE_319 \Controller_inst.SLICE_319 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[36].sig_033.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[37].sig_032.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[36] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[37] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[37] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[36] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[37].sig_032.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[36].sig_033.FeedThruLUT ));
  Controller_inst_SLICE_321 \Controller_inst.SLICE_321 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[34].sig_035.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[35].sig_034.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[34] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[35] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[35] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[34] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[35].sig_034.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[34].sig_035.FeedThruLUT ));
  Controller_inst_SLICE_323 \Controller_inst.SLICE_323 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[32].sig_037.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[33].sig_036.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[32] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[33] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[33] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[32] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[33].sig_036.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[32].sig_037.FeedThruLUT ));
  Controller_inst_SLICE_325 \Controller_inst.SLICE_325 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[30].sig_039.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[31].sig_038.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[30] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[31] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[31] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[30] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[31].sig_038.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[30].sig_039.FeedThruLUT ));
  Controller_inst_SLICE_327 \Controller_inst.SLICE_327 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[28].sig_041.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[29].sig_040.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[28] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[29] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[29] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[28] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[29].sig_040.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[28].sig_041.FeedThruLUT ));
  Controller_inst_SLICE_329 \Controller_inst.SLICE_329 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[26].sig_043.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[27].sig_042.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[26] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[27] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[27] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[26] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[27].sig_042.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[26].sig_043.FeedThruLUT ));
  Controller_inst_SLICE_331 \Controller_inst.SLICE_331 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[24].sig_045.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[25].sig_044.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[24] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[25] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[25] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[24] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[25].sig_044.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[24].sig_045.FeedThruLUT ));
  Controller_inst_SLICE_333 \Controller_inst.SLICE_333 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[22].sig_047.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[23].sig_046.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[22] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[23] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[23] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[22] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[23].sig_046.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[22].sig_047.FeedThruLUT ));
  Controller_inst_SLICE_335 \Controller_inst.SLICE_335 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[20].sig_049.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[21].sig_048.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[20] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[21] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[21] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[20] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[21].sig_048.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[20].sig_049.FeedThruLUT ));
  Controller_inst_SLICE_337 \Controller_inst.SLICE_337 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[18].sig_051.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[19].sig_050.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[18] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[19] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[19] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[18] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[19].sig_050.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[18].sig_051.FeedThruLUT ));
  Controller_inst_SLICE_339 \Controller_inst.SLICE_339 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[16].sig_053.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[17].sig_052.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[16] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[17] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[17] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[16] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[17].sig_052.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[16].sig_053.FeedThruLUT ));
  Controller_inst_SLICE_341 \Controller_inst.SLICE_341 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[14].sig_055.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[15].sig_054.FeedThruLUT ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[14] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[15] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[15] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[14] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[15].sig_054.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[14].sig_055.FeedThruLUT ));
  Controller_inst_SLICE_343 \Controller_inst.SLICE_343 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[12].sig_057.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[13].sig_056.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[12] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[13] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[13] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[12] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[13].sig_056.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[12].sig_057.FeedThruLUT ));
  Controller_inst_SLICE_345 \Controller_inst.SLICE_345 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[10].sig_059.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[11].sig_058.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[10] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[11] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[11] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[10] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[11].sig_058.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[10].sig_059.FeedThruLUT ));
  Controller_inst_SLICE_347 \Controller_inst.SLICE_347 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[8].sig_061.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[9].sig_060.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[8] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[9] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[9] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[8] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[9].sig_060.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[8].sig_061.FeedThruLUT ));
  Controller_inst_SLICE_349 \Controller_inst.SLICE_349 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[6].sig_063.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[7].sig_062.FeedThruLUT ), 
    .C1(\Controller_inst.int_STM32_TX_Byte[6] ), 
    .C0(\Controller_inst.int_STM32_TX_Byte[7] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[7] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[6] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[7].sig_062.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[6].sig_063.FeedThruLUT ));
  Controller_inst_SLICE_351 \Controller_inst.SLICE_351 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[4].sig_065.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[5].sig_064.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[4] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[5] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[5] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[4] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[5].sig_064.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[4].sig_065.FeedThruLUT ));
  Controller_inst_SLICE_353 \Controller_inst.SLICE_353 ( 
    .DI1(\Controller_inst.int_STM32_TX_Byte[2].sig_067.FeedThruLUT ), 
    .DI0(\Controller_inst.int_STM32_TX_Byte[3].sig_066.FeedThruLUT ), 
    .D1(\Controller_inst.int_STM32_TX_Byte[2] ), 
    .D0(\Controller_inst.int_STM32_TX_Byte[3] ), 
    .CE(\Controller_inst.int_STM32_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[3] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[2] ), 
    .F0(\Controller_inst.int_STM32_TX_Byte[3].sig_066.FeedThruLUT ), 
    .F1(\Controller_inst.int_STM32_TX_Byte[2].sig_067.FeedThruLUT ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_356 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_356 ( 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n302 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n14541 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n279 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[63] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6943 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), .Q0(o_STM32_SPI_MOSI_c), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n302 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_358 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_358 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[3] )
    , 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[4] )
    , .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[3] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[4] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6993 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[3] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[4] )
    , 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[3] )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_360 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_360 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[1] )
    , 
    .DI0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[2] )
    , .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[1] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[2] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6993 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[2] )
    , 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[1] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_365 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_365 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5853 ), 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5855 ), 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1137 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n15787 ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n59 ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[0] ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[0] ), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5855 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5853 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_367 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_367 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[1] ), 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[0] ), 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[1] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[0] ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 ), 
    .A1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[0] ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 ), 
    .B0(\Controller_inst.int_RHD_TX_DV ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6967 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[0] ), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[1] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[0] ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[1] ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_369 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_369 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[2] ), 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[3] ), 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13056 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[2] ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[3] ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13056 ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[2] ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6967 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[3] ), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[2] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[3] ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[2] ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_374 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_374 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[4] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[5] )
    , .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[5] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[6] ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n7003 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[5] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[4] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_376 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_376 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[2] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[3] )
    , .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[3] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[4] ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n7003 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[3] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[2] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_378 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_378 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[0] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[1] )
    , .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[1] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n42[2] ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n7003 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[1] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[0] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[1] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count_5__N_255[0] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_379 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_379 
    ( 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk.sig_070.FeedThruLUT )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk )
    , .LSR(w_reset), .CLK(pll_clk_internal), .Q0(o_RHD_SPI_Clk_c), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk.sig_070.FeedThruLUT )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_380 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_380 
    ( 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n191 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n16463 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[15] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6_adj_554 )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6939 )
    , .LSR(w_reset), .CLK(pll_clk_internal), .Q0(o_RHD_SPI_MOSI_c), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n191 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_388 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_388 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8499 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8521 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[0] )
    , .C1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[1] )
    , .B0(\Controller_inst.int_RHD_TX_DV ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8522 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[1] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[0] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8521 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8499 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_389 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_389 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8517 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8519 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[3] )
    , .C1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[2] )
    , .B0(\Controller_inst.int_RHD_TX_DV ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8522 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[2] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[3] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8519 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8517 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_391 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_391 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges_5__N_355[5] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8515 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[5] )
    , .C1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n37[4] )
    , .B0(\Controller_inst.int_RHD_TX_DV ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8522 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[4] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[5] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8515 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges_5__N_355[5] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_393 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_393 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6059 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6057 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[3] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[2] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n4 ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6 ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[4] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[3] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6971 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[4] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[3] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6057 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6059 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_395 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_395 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6063 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6061 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[0] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[2] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[1] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[0] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6971 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[2] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6061 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6063 )
    );
  Controller_inst_SLICE_397 \Controller_inst.SLICE_397 ( 
    .DI0(\Controller_inst.int_RHD_TX_Byte[15].sig_072.FeedThruLUT ), 
    .D0(\Controller_inst.int_RHD_TX_Byte[15] ), 
    .CE(\Controller_inst.int_RHD_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[15] )
    , .F0(\Controller_inst.int_RHD_TX_Byte[15].sig_072.FeedThruLUT ));
  Controller_inst_SLICE_398 \Controller_inst.SLICE_398 ( 
    .DI1(\Controller_inst.int_RHD_TX_Byte[10].sig_074.FeedThruLUT ), 
    .DI0(\Controller_inst.int_RHD_TX_Byte[12].sig_073.FeedThruLUT ), 
    .D1(\Controller_inst.int_RHD_TX_Byte[10] ), 
    .D0(\Controller_inst.int_RHD_TX_Byte[12] ), 
    .CE(\Controller_inst.int_RHD_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[12] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[10] )
    , .F0(\Controller_inst.int_RHD_TX_Byte[12].sig_073.FeedThruLUT ), 
    .F1(\Controller_inst.int_RHD_TX_Byte[10].sig_074.FeedThruLUT ));
  Controller_inst_SLICE_400 \Controller_inst.SLICE_400 ( 
    .DI1(\Controller_inst.int_RHD_TX_Byte[8].sig_076.FeedThruLUT ), 
    .DI0(\Controller_inst.int_RHD_TX_Byte[9].sig_075.FeedThruLUT ), 
    .D1(\Controller_inst.int_RHD_TX_Byte[8] ), 
    .D0(\Controller_inst.int_RHD_TX_Byte[9] ), 
    .CE(\Controller_inst.int_RHD_TX_DV ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[9] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[8] )
    , .F0(\Controller_inst.int_RHD_TX_Byte[9].sig_075.FeedThruLUT ), 
    .F1(\Controller_inst.int_RHD_TX_Byte[8].sig_076.FeedThruLUT ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_403 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_403 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[1] )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[2] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[0] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6054 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[2] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6981 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[2] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[2] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[1] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_406 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_406 
    ( 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n7597 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11362 )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n5866 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n7597 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_410
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_410 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_132.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_077.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_077.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_132.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_411
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_411 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1]$n31 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0]$n4 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[1] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[0] )
    , .B0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0]$n4 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1]$n31 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_412
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_412 
    ( 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_078.FeedThruLUT )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1cmp_r[7] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_078.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_413
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_413 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_125.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_079.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_079.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_125.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_414
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_414 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1].sig_119.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0].sig_080.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0].sig_080.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1].sig_119.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_415
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_415 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_112.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_081.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_081.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_112.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_416
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_416 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_105.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_082.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_082.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_105.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_417
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_417 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1]$n18 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0]$n6 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1] )
    , .B1(\Controller_inst.int_FIFO_RE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A0(\Controller_inst.int_FIFO_RE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0]$n6 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1]$n18 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_418
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_418 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1]$n32 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0]$n3 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[1] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[0] )
    , .B0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0]$n3 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1]$n32 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_419
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_419 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_098.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_083.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[0].sig_083.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[1].sig_098.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_420
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_420 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1]$n19 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0]$n5 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1] )
    , .B1(\Controller_inst.int_FIFO_RE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A0(\Controller_inst.int_FIFO_RE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0]$n5 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1]$n19 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_421
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_421 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_091.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_084.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[0] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[0].sig_084.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[1].sig_091.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_423
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_423 
    ( 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_nxt_w$n2 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15777 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15781 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14561 )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.empty_flag_r )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_nxt_w$n2 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_424
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_424 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_086.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_085.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_085.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_086.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_426
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_426 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_088.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_087.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_087.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_088.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_428
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_428 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_090.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_089.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_089.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_090.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_431
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_431 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6]$n9 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[7]$n7 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[6] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6] )
    , .B1(\Controller_inst.int_FIFO_RE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[7] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A0(\Controller_inst.int_FIFO_RE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[7]$n7 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6]$n9 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_433
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_433 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4]$n13 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5]$n11 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A1(\Controller_inst.int_FIFO_RE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5] )
    , .B0(\Controller_inst.int_FIFO_RE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5]$n11 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4]$n13 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_435
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_435 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2]$n17 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3]$n15 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[2] )
    , .C1(\Controller_inst.int_FIFO_RE ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3] )
    , .B0(\Controller_inst.int_FIFO_RE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3]$n15 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2]$n17 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_438
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_438 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_093.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_092.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_092.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_093.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_440
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_440 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_095.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_094.FeedThruLUT )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_094.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_095.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_442
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_442 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_097.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_096.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_096.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_097.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_445
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_445 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6]$n22 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[7]$n20 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[6] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6] )
    , .B1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[7] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[7]$n20 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6]$n22 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_447
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_447 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4]$n26 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5]$n24 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[4] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[5] )
    , .B0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5]$n24 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4]$n26 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_449
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_449 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2]$n30 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3]$n28 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[2] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[3] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3]$n28 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2]$n30 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_453
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_453 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4]$n12 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5]$n10 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A1(\Controller_inst.int_FIFO_RE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5] )
    , .B0(\Controller_inst.int_FIFO_RE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5]$n10 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4]$n12 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_455
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_455 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2]$n16 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3]$n14 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[2] )
    , .C1(\Controller_inst.int_FIFO_RE ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3] )
    , .B0(\Controller_inst.int_FIFO_RE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3]$n14 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2]$n16 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_458
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_458 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_100.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_099.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_099.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_100.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_460
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_460 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_102.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_101.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_101.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_102.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_462
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_462 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_104.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_103.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_103.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_104.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_465
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_465 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_107.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_106.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[7].sig_106.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[6].sig_107.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_467
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_467 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_109.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_108.FeedThruLUT )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[5].sig_108.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[4].sig_109.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_469
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_469 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_111.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_110.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[3].sig_110.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_p1_w[2].sig_111.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_472
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_472 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6].sig_114.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7].sig_113.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7].sig_113.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6].sig_114.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_474
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_474 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4].sig_116.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5].sig_115.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5].sig_115.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4].sig_116.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_476
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_476 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2].sig_118.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3].sig_117.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3].sig_117.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2].sig_118.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_479
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_479 
    ( 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_120.FeedThruLUT )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_120.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_480
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_480 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_122.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_121.FeedThruLUT )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_121.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_122.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_482
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_482 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_124.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_123.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_123.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_124.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_486
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_486 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4]$n25 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5]$n23 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[4] )
    , .B1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[5] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5]$n23 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4]$n25 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_488
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_488 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2]$n29 )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3]$n27 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[2] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[3] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3]$n27 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2]$n29 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_491
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_491 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_127.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_126.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[7].sig_126.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[6].sig_127.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_493
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_493 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_129.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_128.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[5].sig_128.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[4].sig_129.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_495
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_495 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_131.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_130.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[3].sig_130.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_p1_w[2].sig_131.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_498
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_498 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6].sig_134.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7].sig_133.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[7] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7].sig_133.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6].sig_134.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_500
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_500 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4].sig_136.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5].sig_135.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[5] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5].sig_135.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4].sig_136.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_502
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_502 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2].sig_138.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3].sig_137.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[3] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3].sig_137.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2].sig_138.FeedThruLUT )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_504
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_504 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0].sig_140.FeedThruLUT )
    , 
    .DI0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1].sig_139.FeedThruLUT )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[1] )
    , 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[0] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1].sig_139.FeedThruLUT )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0].sig_140.FeedThruLUT )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_508 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_508 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[4] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n6 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[2] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[3] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[1] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n6 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n270 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_509 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_509 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[1] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n270 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n270 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[1] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n6_adj_572 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n4 ));
  Controller_inst_SLICE_510 \Controller_inst.SLICE_510 ( 
    .D0(\Controller_inst.NUM_DATA[23] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[23] ));
  Controller_inst_SLICE_511 \Controller_inst.SLICE_511 ( 
    .D1(\Controller_inst.stm32_counter[23] ), 
    .C1(\Controller_inst.n46_adj_628 ), .B1(\Controller_inst.NUM_DATA[23] ), 
    .D0(\Controller_inst.stm32_counter[22] ), 
    .C0(\Controller_inst.n44_adj_625 ), .B0(\Controller_inst.NUM_DATA[22] ), 
    .F0(\Controller_inst.n46_adj_628 ), .F1(\Controller_inst.n48_adj_629 ));
  Controller_inst_SLICE_512 \Controller_inst.SLICE_512 ( 
    .D1(\Controller_inst.NUM_DATA[5] ), .B1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[24] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[24] ), .F1(\Controller_inst.NUM_DATA[5] ));
  Controller_inst_SLICE_513 \Controller_inst.SLICE_513 ( 
    .D1(\Controller_inst.stm32_counter[25] ), .C1(\Controller_inst.n50 ), 
    .B1(\Controller_inst.NUM_DATA[25] ), 
    .D0(\Controller_inst.stm32_counter[24] ), 
    .C0(\Controller_inst.n48_adj_629 ), .B0(\Controller_inst.NUM_DATA[24] ), 
    .F0(\Controller_inst.n50 ), .F1(\Controller_inst.n52 ));
  Controller_inst_SLICE_515 \Controller_inst.SLICE_515 ( 
    .D1(\Controller_inst.stm32_counter[5] ), 
    .C1(\Controller_inst.n10_adj_610 ), .B1(\Controller_inst.NUM_DATA[5] ), 
    .D0(\Controller_inst.stm32_counter[4] ), .C0(\Controller_inst.n8_adj_609 ), 
    .B0(\Controller_inst.NUM_DATA[4] ), .F0(\Controller_inst.n10_adj_610 ), 
    .F1(\Controller_inst.n12_adj_611 ));
  Controller_inst_SLICE_516 \Controller_inst.SLICE_516 ( 
    .D1(\Controller_inst.NUM_DATA[26] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[25] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[25] ), .F1(\Controller_inst.NUM_DATA[26] ));
  Controller_inst_SLICE_519 \Controller_inst.SLICE_519 ( 
    .D1(\Controller_inst.stm32_counter[27] ), 
    .C1(\Controller_inst.n54_adj_632 ), .B1(\Controller_inst.NUM_DATA[27] ), 
    .D0(\Controller_inst.stm32_counter[26] ), .C0(\Controller_inst.n52 ), 
    .B0(\Controller_inst.NUM_DATA[26] ), .F0(\Controller_inst.n54_adj_632 ), 
    .F1(\Controller_inst.n56 ));
  Controller_inst_SLICE_520 \Controller_inst.SLICE_520 ( 
    .D1(\Controller_inst.NUM_DATA[27] ), .B1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[0] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[0] ), .F1(\Controller_inst.NUM_DATA[27] ));
  Controller_inst_SLICE_521 \Controller_inst.SLICE_521 ( 
    .D1(\Controller_inst.stm32_counter[1] ), 
    .C1(\Controller_inst.NUM_DATA[1] ), .B1(\Controller_inst.NUM_DATA[0] ), 
    .A1(\Controller_inst.stm32_counter[0] ), 
    .D0(\Controller_inst.NUM_DATA[1] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[1] ), .F1(\Controller_inst.n4_adj_607 ));
  Controller_inst_SLICE_524 \Controller_inst.SLICE_524 ( 
    .D1(\Controller_inst.NUM_DATA[28] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[11] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[11] ), .F1(\Controller_inst.NUM_DATA[28] ));
  Controller_inst_SLICE_525 \Controller_inst.SLICE_525 ( 
    .D1(\Controller_inst.stm32_counter[11] ), .C1(\Controller_inst.n22 ), 
    .B1(\Controller_inst.NUM_DATA[11] ), 
    .D0(\Controller_inst.stm32_counter[10] ), .C0(\Controller_inst.n20 ), 
    .B0(\Controller_inst.NUM_DATA[10] ), .F0(\Controller_inst.n22 ), 
    .F1(\Controller_inst.n24 ));
  Controller_inst_SLICE_527 \Controller_inst.SLICE_527 ( 
    .D1(\Controller_inst.stm32_counter[29] ), .C1(\Controller_inst.n58 ), 
    .B1(\Controller_inst.NUM_DATA[29] ), 
    .D0(\Controller_inst.stm32_counter[28] ), .C0(\Controller_inst.n56 ), 
    .B0(\Controller_inst.NUM_DATA[28] ), .F0(\Controller_inst.n58 ), 
    .F1(\Controller_inst.n60 ));
  Controller_inst_SLICE_528 \Controller_inst.SLICE_528 ( 
    .D1(\Controller_inst.NUM_DATA[31] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[12] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[12] ), .F1(\Controller_inst.NUM_DATA[31] ));
  Controller_inst_SLICE_529 \Controller_inst.SLICE_529 ( 
    .D1(\Controller_inst.stm32_counter[13] ), .C1(\Controller_inst.n26 ), 
    .B1(\Controller_inst.NUM_DATA[13] ), 
    .D0(\Controller_inst.stm32_counter[12] ), .C0(\Controller_inst.n24 ), 
    .A0(\Controller_inst.NUM_DATA[12] ), .F0(\Controller_inst.n26 ), 
    .F1(\Controller_inst.n28 ));
  Controller_inst_SLICE_530 \Controller_inst.SLICE_530 ( 
    .D1(\Controller_inst.NUM_DATA[31] ), .C1(\Controller_inst.n62 ), 
    .B1(\Controller_inst.stm32_state[1] ), .D0(\Controller_inst.NUM_DATA[30] ), 
    .C0(\Controller_inst.n60 ), .B0(\Controller_inst.stm32_counter[30] ), 
    .F0(\Controller_inst.n62 ), .F1(\Controller_inst.n69 ));
  Controller_inst_SLICE_532 \Controller_inst.SLICE_532 ( 
    .D1(\Controller_inst.NUM_DATA[2] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[29] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[29] ), .F1(\Controller_inst.NUM_DATA[2] ));
  Controller_inst_SLICE_534 \Controller_inst.SLICE_534 ( 
    .D1(\Controller_inst.n60 ), .C1(\Controller_inst.NUM_DATA[30] ), 
    .B1(\Controller_inst.stm32_counter[30] ), 
    .A1(\Controller_inst.NUM_DATA[31] ), .D0(\Controller_inst.NUM_DATA[30] ), 
    .B0(w_reset), .F0(\Controller_inst.NUM_DATA[30] ), 
    .F1(\Controller_inst.n39 ));
  Controller_inst_SLICE_537 \Controller_inst.SLICE_537 ( 
    .D1(\Controller_inst.stm32_counter[3] ), .C1(\Controller_inst.n6_adj_608 ), 
    .B1(\Controller_inst.NUM_DATA[3] ), 
    .D0(\Controller_inst.stm32_counter[2] ), .C0(\Controller_inst.n4_adj_607 ), 
    .A0(\Controller_inst.NUM_DATA[2] ), .F0(\Controller_inst.n6_adj_608 ), 
    .F1(\Controller_inst.n8_adj_609 ));
  Controller_inst_SLICE_538 \Controller_inst.SLICE_538 ( 
    .D1(\Controller_inst.n6634 ), .C1(\Controller_inst.n318 ), 
    .B1(\Controller_inst.stm32_state[2] ), .A1(\Controller_inst.n9307 ), 
    .D0(\Controller_inst.stm32_counter[31] ), .C0(\Controller_inst.n62 ), 
    .B0(\Controller_inst.NUM_DATA[31] ), .F0(\Controller_inst.n318 ), 
    .F1(\Controller_inst.n15046 ));
  Controller_inst_SLICE_539 \Controller_inst.SLICE_539 ( 
    .D1(\Controller_inst.stm32_state[3] ), 
    .C1(\Controller_inst.stm32_state[0] ), 
    .D0(\Controller_inst.stm32_state[0] ), 
    .C0(\Controller_inst.stm32_state[3] ), 
    .B0(\Controller_inst.stm32_state[1] ), 
    .A0(\Controller_inst.stm32_state[2] ), .F0(\Controller_inst.n6634 ), 
    .F1(\Controller_inst.n9307 ));
  Controller_inst_SLICE_540 \Controller_inst.SLICE_540 ( 
    .D1(\Controller_inst.stm32_state[3] ), 
    .C1(\Controller_inst.stm32_state[2] ), 
    .B1(\Controller_inst.stm32_state[0] ), 
    .A1(\Controller_inst.stm32_state[1] ), 
    .D0(\Controller_inst.stm32_state[2] ), 
    .C0(\Controller_inst.stm32_state[3] ), 
    .B0(\Controller_inst.stm32_state[1] ), 
    .A0(\Controller_inst.stm32_state[0] ), .F0(\Controller_inst.n6622 ), 
    .F1(\Controller_inst.n42 ));
  Controller_inst_SLICE_541 \Controller_inst.SLICE_541 ( 
    .D1(\Controller_inst.n9 ), .C1(\Controller_inst.n9311 ), 
    .B1(\Controller_inst.stm32_state[1] ), .A1(\Controller_inst.n6622 ), 
    .D0(\Controller_inst.stm32_state[3] ), 
    .C0(\Controller_inst.stm32_state[2] ), 
    .B0(\Controller_inst.stm32_state[0] ), .F0(\Controller_inst.n9311 ), 
    .F1(\Controller_inst.n8_adj_578 ));
  Controller_inst_SLICE_542 \Controller_inst.SLICE_542 ( 
    .D1(\Controller_inst.NUM_DATA[6] ), .B1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[3] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[3] ), .F1(\Controller_inst.NUM_DATA[6] ));
  Controller_inst_SLICE_545 \Controller_inst.SLICE_545 ( 
    .D1(\Controller_inst.stm32_counter[7] ), 
    .C1(\Controller_inst.n14_adj_612 ), .A1(\Controller_inst.NUM_DATA[7] ), 
    .D0(\Controller_inst.stm32_counter[6] ), 
    .C0(\Controller_inst.n12_adj_611 ), .B0(\Controller_inst.NUM_DATA[6] ), 
    .F0(\Controller_inst.n14_adj_612 ), .F1(\Controller_inst.n16_adj_613 ));
  Controller_inst_SLICE_547 \Controller_inst.SLICE_547 ( 
    .D1(\Controller_inst.NUM_DATA[7] ), .B1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[4] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[4] ), .F1(\Controller_inst.NUM_DATA[7] ));
  Controller_inst_SLICE_550 \Controller_inst.SLICE_550 ( 
    .D1(\Controller_inst.stm32_counter[9] ), .C1(\Controller_inst.n18 ), 
    .B1(\Controller_inst.NUM_DATA[9] ), 
    .D0(\Controller_inst.stm32_counter[8] ), 
    .C0(\Controller_inst.n16_adj_613 ), .B0(\Controller_inst.NUM_DATA[8] ), 
    .F0(\Controller_inst.n18 ), .F1(\Controller_inst.n20 ));
  Controller_inst_SLICE_551 \Controller_inst.SLICE_551 ( 
    .D1(\Controller_inst.NUM_DATA[9] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[8] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[8] ), .F1(\Controller_inst.NUM_DATA[9] ));
  Controller_inst_SLICE_555 \Controller_inst.SLICE_555 ( 
    .D1(\Controller_inst.NUM_DATA[13] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[10] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[10] ), .F1(\Controller_inst.NUM_DATA[13] ));
  Controller_inst_SLICE_558 \Controller_inst.SLICE_558 ( 
    .D1(\Controller_inst.stm32_counter[15] ), .C1(\Controller_inst.n30 ), 
    .B1(\Controller_inst.NUM_DATA[15] ), 
    .D0(\Controller_inst.stm32_counter[14] ), .C0(\Controller_inst.n28 ), 
    .B0(\Controller_inst.NUM_DATA[14] ), .F0(\Controller_inst.n30 ), 
    .F1(\Controller_inst.n32 ));
  Controller_inst_SLICE_559 \Controller_inst.SLICE_559 ( 
    .D1(\Controller_inst.NUM_DATA[15] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[14] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[14] ), .F1(\Controller_inst.NUM_DATA[15] ));
  Controller_inst_SLICE_562 \Controller_inst.SLICE_562 ( 
    .D1(\Controller_inst.stm32_counter[17] ), .C1(\Controller_inst.n34 ), 
    .B1(\Controller_inst.NUM_DATA[17] ), 
    .D0(\Controller_inst.stm32_counter[16] ), .C0(\Controller_inst.n32 ), 
    .A0(\Controller_inst.NUM_DATA[16] ), .F0(\Controller_inst.n34 ), 
    .F1(\Controller_inst.n36 ));
  Controller_inst_SLICE_563 \Controller_inst.SLICE_563 ( 
    .D1(\Controller_inst.NUM_DATA[17] ), .B1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[16] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[16] ), .F1(\Controller_inst.NUM_DATA[17] ));
  Controller_inst_SLICE_566 \Controller_inst.SLICE_566 ( 
    .D1(\Controller_inst.stm32_counter[19] ), .C1(\Controller_inst.n38 ), 
    .A1(\Controller_inst.NUM_DATA[19] ), 
    .D0(\Controller_inst.stm32_counter[18] ), .C0(\Controller_inst.n36 ), 
    .B0(\Controller_inst.NUM_DATA[18] ), .F0(\Controller_inst.n38 ), 
    .F1(\Controller_inst.n40 ));
  Controller_inst_SLICE_567 \Controller_inst.SLICE_567 ( 
    .D1(\Controller_inst.NUM_DATA[19] ), .B1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[18] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[18] ), .F1(\Controller_inst.NUM_DATA[19] ));
  Controller_inst_SLICE_570 \Controller_inst.SLICE_570 ( 
    .D1(\Controller_inst.stm32_counter[21] ), 
    .C1(\Controller_inst.n42_adj_624 ), .B1(\Controller_inst.NUM_DATA[21] ), 
    .D0(\Controller_inst.stm32_counter[20] ), .C0(\Controller_inst.n40 ), 
    .B0(\Controller_inst.NUM_DATA[20] ), .F0(\Controller_inst.n42_adj_624 ), 
    .F1(\Controller_inst.n44_adj_625 ));
  Controller_inst_SLICE_571 \Controller_inst.SLICE_571 ( 
    .D1(\Controller_inst.NUM_DATA[21] ), .B1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[20] ), .C0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[20] ), .F1(\Controller_inst.NUM_DATA[21] ));
  Controller_inst_SLICE_575 \Controller_inst.SLICE_575 ( 
    .D1(\Controller_inst.temp_buffer[55] ), .C1(w_reset), 
    .D0(\Controller_inst.NUM_DATA[22] ), .B0(w_reset), 
    .F0(\Controller_inst.NUM_DATA[22] ), 
    .F1(\Controller_inst.temp_buffer[55] ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_576 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_576 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17872 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17869 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16445 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n33 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17866 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n32 ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17869 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17875 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_577 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_577 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n36_adj_570 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n35_adj_571 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[37] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[36] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n35_adj_571 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17866 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_578 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_578 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17920 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[21] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[20] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[23] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[22] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17920 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17923 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_580 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_580 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[28] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17914 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[29] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[30] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[31] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17914 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17917 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_582 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_582 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[25] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17908 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[24] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[26] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[27] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17908 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17911 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_584 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_584 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[17] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17902 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[16] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[18] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[19] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17902 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17905 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_586 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_586 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[9] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17896 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[8] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[11] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[10] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17896 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17899 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_588 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_588 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16436 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16439 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[3] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17911 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17917 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16439 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17890 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_589 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_589 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16433 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16430 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17890 ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n1 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17932 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n2 ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16430 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17893 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_590 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_590 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n43_adj_565 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n42_adj_566 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[44] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[45] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n42_adj_566 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17884 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_591 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_591 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n39_adj_563 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n40_adj_564 ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17884 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[40] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[41] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n39_adj_563 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16445 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_592 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_592 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n5 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n4 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[4] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[5] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n4 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17932 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_594 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_594 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[62] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n57 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[60] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[61] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n57 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17878 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_595 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_595 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17863 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16448 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[3] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n54 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17878 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n55 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16448 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17872 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_596 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_596 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[13] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17926 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[12] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[15] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[14] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17926 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17929 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_600 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_600 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n51 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n50 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[52] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[53] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n50 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17860 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_601 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_601 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_c ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n48 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17860 ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[50] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[51] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n48 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17863 ));
  SLICE_602 SLICE_602( .D1(\reset_counter[4] ), .C1(n15037), 
    .B1(\reset_counter[1] ), .D0(\reset_counter[0] ), .C0(\reset_counter[3] ), 
    .B0(\reset_counter[7] ), .A0(\reset_counter[5] ), .F0(n15037), .F1(n6));
  SLICE_604 SLICE_604( .D0(n8), .C0(n15037), .F0(n1832));
  SLICE_605 SLICE_605( .D1(n11352), .C1(n8), .B1(n15037), 
    .D0(\reset_counter[2] ), .C0(\reset_counter[4] ), .B0(\reset_counter[6] ), 
    .A0(\reset_counter[1] ), .F0(n8), .F1(n8599));
  SLICE_606 SLICE_606( .D1(\reset_counter[5] ), .C1(n11350), 
    .B1(\reset_counter[6] ), .A1(\reset_counter[7] ), .D0(\reset_counter[2] ), 
    .C0(\reset_counter[3] ), .A0(\reset_counter[4] ), .F0(n11350), .F1(n11352));
  SLICE_608 SLICE_608( .D0(\counter[3] ), .C0(\counter[2] ), .B0(\counter[4] ), 
    .A0(\counter[7] ), .F0(n14));
  SLICE_609 SLICE_609( .D1(n14), .C1(n13), .B1(\counter[9] ), 
    .A1(\counter[8] ), .D0(\counter[0] ), .C0(\counter[6] ), .B0(\counter[5] ), 
    .A0(\counter[1] ), .F0(n13), .F1(n11093));
  SLICE_610 SLICE_610( .D1(\counter[13] ), .C1(n14546), .B1(\counter[15] ), 
    .A1(\counter[14] ), .D0(\counter[12] ), .C0(n11093), .B0(\counter[11] ), 
    .A0(\counter[10] ), .F0(n14546), .F1(n14589));
  SLICE_612 SLICE_612( .D1(\counter[20] ), .C1(n14563), .B1(\counter[19] ), 
    .A1(\counter[21] ), .D0(\counter[18] ), .C0(n14589), .B0(\counter[16] ), 
    .A0(\counter[17] ), .F0(n14563), .F1(n14547));
  SLICE_614 SLICE_614( .D1(\counter[25] ), .C1(\counter[29] ), 
    .B1(\counter[26] ), .A1(\counter[30] ), .D0(\counter[27] ), 
    .C0(\counter[24] ), .F0(n10), .F1(n14_adj_683));
  SLICE_615 SLICE_615( .D1(n10), .C1(n9), .B1(n14_adj_683), .A1(\counter[31] ), 
    .D0(\counter[22] ), .C0(n14547), .B0(\counter[23] ), .A0(\counter[28] ), 
    .F0(n9), .F1(n8493));
  Controller_inst_SLICE_616 \Controller_inst.SLICE_616 ( 
    .D1(\Controller_inst.index[11] ), .C1(\Controller_inst.index[13] ), 
    .B1(\Controller_inst.index[14] ), .A1(\Controller_inst.index[4] ), 
    .D0(\Controller_inst.index[10] ), .C0(\Controller_inst.index[9] ), 
    .B0(\Controller_inst.index[26] ), .A0(\Controller_inst.index[28] ), 
    .F0(\Controller_inst.n48 ), .F1(\Controller_inst.n46 ));
  Controller_inst_SLICE_617 \Controller_inst.SLICE_617 ( 
    .D1(\Controller_inst.n47 ), .C1(\Controller_inst.n45 ), 
    .B1(\Controller_inst.n48 ), .A1(\Controller_inst.n46 ), 
    .D0(\Controller_inst.index[29] ), .C0(\Controller_inst.index[27] ), 
    .B0(\Controller_inst.index[30] ), .A0(\Controller_inst.index[22] ), 
    .F0(\Controller_inst.n45 ), .F1(\Controller_inst.n54 ));
  Controller_inst_SLICE_618 \Controller_inst.SLICE_618 ( 
    .D1(\Controller_inst.index[18] ), .C1(\Controller_inst.index[20] ), 
    .B1(\Controller_inst.index[17] ), .A1(\Controller_inst.index[25] ), 
    .D0(\Controller_inst.index[19] ), .C0(\Controller_inst.index[21] ), 
    .B0(\Controller_inst.index[15] ), .A0(\Controller_inst.index[6] ), 
    .F0(\Controller_inst.n44 ), .F1(\Controller_inst.n47 ));
  Controller_inst_SLICE_619 \Controller_inst.SLICE_619 ( 
    .D1(\Controller_inst.n4 ), .C1(\Controller_inst.n14605 ), 
    .B1(\Controller_inst.index[31] ), .A1(\Controller_inst.index[2] ), 
    .D0(\Controller_inst.n44 ), .C0(\Controller_inst.n54 ), 
    .B0(\Controller_inst.n49 ), .A0(\Controller_inst.n43 ), 
    .F0(\Controller_inst.n14605 ), .F1(\Controller_inst.n4391 ));
  Controller_inst_SLICE_620 \Controller_inst.SLICE_620 ( 
    .D0(\Controller_inst.index[1] ), .C0(\Controller_inst.index[0] ), 
    .F0(\Controller_inst.n4 ));
  Controller_inst_SLICE_622 \Controller_inst.SLICE_622 ( 
    .D1(\w_Controller_Mode[0] ), .C1(\Controller_inst.state[1] ), 
    .B1(\Controller_inst.state[0] ), .A1(\w_Controller_Mode[1] ), 
    .C0(\Controller_inst.state[0] ), .B0(\Controller_inst.state[1] ), 
    .F0(\Controller_inst.n33 ), .F1(\Controller_inst.n4_adj_675 ));
  Controller_inst_SLICE_623 \Controller_inst.SLICE_623 ( 
    .D1(\Controller_inst.int_RHD_TX_Ready ), .C1(\Controller_inst.n5 ), 
    .B1(w_reset), .A1(\Controller_inst.n33 ), .D0(\w_Controller_Mode[0] ), 
    .C0(\w_Controller_Mode[1] ), .F0(\Controller_inst.n5 ), 
    .F1(\Controller_inst.n2373 ));
  Controller_inst_SLICE_624 \Controller_inst.SLICE_624 ( 
    .D0(\Controller_inst.stm32_state[0] ), 
    .C0(\Controller_inst.stm32_state[2] ), .F0(\Controller_inst.n4_adj_576 ));
  Controller_inst_SLICE_625 \Controller_inst.SLICE_625 ( 
    .D1(\Controller_inst.n4_adj_576 ), .C1(\Controller_inst.n16469 ), 
    .B1(\w_Controller_Mode[0] ), .A1(\w_Controller_Mode[1] ), 
    .D0(\Controller_inst.stm32_counter[31] ), .C0(\Controller_inst.n69 ), 
    .B0(\Controller_inst.n39 ), .A0(\Controller_inst.n42 ), 
    .F0(\Controller_inst.n16469 ), .F1(\Controller_inst.n14707 ));
  Controller_inst_SLICE_628 \Controller_inst.SLICE_628 ( 
    .D1(\w_Controller_Mode[1] ), .C1(\Controller_inst.n8 ), 
    .A1(\w_Controller_Mode[0] ), .D0(\Controller_inst.stm32_state[1] ), 
    .C0(\Controller_inst.stm32_state[2] ), 
    .B0(\Controller_inst.stm32_state[0] ), 
    .A0(\Controller_inst.stm32_state[3] ), .F0(\Controller_inst.n8 ), 
    .F1(\Controller_inst.n18561 ));
  Controller_inst_SLICE_630 \Controller_inst.SLICE_630 ( 
    .D1(\Controller_inst.n6634 ), .C1(\Controller_inst.n6630 ), 
    .B1(\Controller_inst.n6633 ), .A1(\Controller_inst.n318 ), 
    .D0(\Controller_inst.stm32_state[0] ), 
    .C0(\Controller_inst.stm32_state[3] ), 
    .B0(\Controller_inst.stm32_state[1] ), 
    .A0(\Controller_inst.stm32_state[2] ), .F0(\Controller_inst.n6630 ), 
    .F1(\Controller_inst.n6_adj_577 ));
  Controller_inst_SLICE_633 \Controller_inst.SLICE_633 ( 
    .D1(\Controller_inst.n8_adj_578 ), .C1(\Controller_inst.n6_adj_579 ), 
    .B1(\Controller_inst.n6633 ), .A1(\Controller_inst.n5 ), 
    .D0(\Controller_inst.stm32_state[3] ), 
    .C0(\Controller_inst.stm32_state[2] ), 
    .B0(\Controller_inst.stm32_state[0] ), 
    .A0(\Controller_inst.stm32_state[1] ), .F0(\Controller_inst.n6_adj_579 ), 
    .F1(\Controller_inst.n6953 ));
  Controller_inst_SLICE_634 \Controller_inst.SLICE_634 ( 
    .D1(\Controller_inst.n167_adj_681[2] ), .C1(\Controller_inst.n4_adj_581 ), 
    .B1(\Controller_inst.int_FIFO_COUNT[2] ), 
    .D0(\Controller_inst.n167_adj_681[1] ), 
    .C0(\Controller_inst.n167_adj_681[0] ), 
    .B0(\Controller_inst.int_FIFO_COUNT[1] ), 
    .A0(\Controller_inst.int_FIFO_COUNT[0] ), 
    .F0(\Controller_inst.n4_adj_581 ), .F1(\Controller_inst.n6_adj_583 ));
  Controller_inst_SLICE_636 \Controller_inst.SLICE_636 ( 
    .D1(\Controller_inst.n167_adj_681[4] ), .C1(\Controller_inst.n8_adj_585 ), 
    .B1(\Controller_inst.int_FIFO_COUNT[4] ), 
    .D0(\Controller_inst.n167_adj_681[3] ), .C0(\Controller_inst.n6_adj_583 ), 
    .B0(\Controller_inst.int_FIFO_COUNT[3] ), 
    .F0(\Controller_inst.n8_adj_585 ), .F1(\Controller_inst.n10 ));
  Controller_inst_SLICE_638 \Controller_inst.SLICE_638 ( 
    .D1(\Controller_inst.n167_adj_681[6] ), .C1(\Controller_inst.n12 ), 
    .B1(\Controller_inst.int_FIFO_COUNT[6] ), 
    .D0(\Controller_inst.n167_adj_681[5] ), .C0(\Controller_inst.n10 ), 
    .A0(\Controller_inst.int_FIFO_COUNT[5] ), .F0(\Controller_inst.n12 ), 
    .F1(\Controller_inst.n14 ));
  Controller_inst_SLICE_640 \Controller_inst.SLICE_640 ( 
    .D1(\Controller_inst.n19 ), .C1(\Controller_inst.n16 ), 
    .B1(\Controller_inst.n27_adj_594 ), .A1(\Controller_inst.n35 ), 
    .D0(\Controller_inst.n167_adj_681[7] ), .C0(\Controller_inst.n14 ), 
    .B0(\Controller_inst.int_FIFO_COUNT[7] ), .F0(\Controller_inst.n16 ), 
    .F1(\Controller_inst.n37 ));
  Controller_inst_SLICE_642 \Controller_inst.SLICE_642 ( 
    .D0(\Controller_inst.n49_adj_591 ), .C0(\Controller_inst.n47_adj_592 ), 
    .B0(\Controller_inst.n55 ), .A0(\Controller_inst.n43_adj_590 ), 
    .F0(\Controller_inst.n15793 ));
  Controller_inst_SLICE_643 \Controller_inst.SLICE_643 ( 
    .D1(\Controller_inst.n15797 ), .C1(\Controller_inst.n46_adj_597 ), 
    .B1(\Controller_inst.n15795 ), .A1(\Controller_inst.n167_adj_681[31] ), 
    .D0(\Controller_inst.n15793 ), .C0(\Controller_inst.n37 ), 
    .B0(\Controller_inst.n15791 ), .A0(\Controller_inst.n15789 ), 
    .F0(\Controller_inst.n46_adj_597 ), .F1(\Controller_inst.n317 ));
  Controller_inst_SLICE_644 \Controller_inst.SLICE_644 ( 
    .D0(\Controller_inst.n41 ), .C0(\Controller_inst.n45_adj_595 ), 
    .B0(\Controller_inst.n37_adj_596 ), .A0(\Controller_inst.n53 ), 
    .F0(\Controller_inst.n15797 ));
  Controller_inst_SLICE_646 \Controller_inst.SLICE_646 ( .DI1(n8534), 
    .D1(n1832), .C1(n11352), .B1(\reset_counter[1] ), 
    .A1(\w_Controller_Mode[1] ), .D0(\Controller_inst.n9311 ), 
    .C0(\Controller_inst.stm32_state[1] ), .B0(\w_Controller_Mode[0] ), 
    .A0(\w_Controller_Mode[1] ), .CLK(pll_clk_internal), 
    .Q1(\w_Controller_Mode[1] ), .F0(\Controller_inst.n2455 ), .F1(n8534));
  Controller_inst_SLICE_650 \Controller_inst.SLICE_650 ( 
    .D1(\Controller_inst.stm32_state[3] ), .C1(\Controller_inst.n5_adj_678 ), 
    .B1(\Controller_inst.stm32_state[2] ), 
    .A1(\Controller_inst.stm32_state[0] ), 
    .D0(\Controller_inst.stm32_state[1] ), .C0(\w_Controller_Mode[0] ), 
    .B0(\w_Controller_Mode[1] ), .F0(\Controller_inst.n5_adj_678 ), 
    .F1(\Controller_inst.n4_adj_677 ));
  Controller_inst_SLICE_652 \Controller_inst.SLICE_652 ( 
    .D1(\Controller_inst.n9311 ), .C1(\Controller_inst.int_STM32_TX_Ready ), 
    .B1(\Controller_inst.stm32_state[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n6600 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .B0(\Controller_inst.int_STM32_TX_DV ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[0] ), 
    .F0(\Controller_inst.int_STM32_TX_Ready ), .F1(\Controller_inst.n11111 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_654 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_654 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n1019 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.n203 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n1019 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n6968 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_655 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_655 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[2] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n12 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[6] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[0] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[5] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[4] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[3] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n12 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n216 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_657 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_657 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.n1080 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .C1(o_STM32_SPI_CS_n_c), .B1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(o_STM32_SPI_CS_n_c), .C0(\Controller_inst.int_STM32_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n15699 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), .Q1(o_STM32_SPI_CS_n_c), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n203 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n1080 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_658 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_658 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[1] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[0] ), 
    .B1(\Controller_inst.n27 ), .A1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.int_STM32_TX_DV ), .C0(\Controller_inst.n27 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n5834 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n13019 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_659 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_659 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[7] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n10_adj_562 ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[6] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[3] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9 ), 
    .F1(\Controller_inst.n27 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_660 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_660 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[4] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n15717 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[0] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[3] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.r_CS_Inactive_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n15717 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n15779 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_662 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_662 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n10 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[1] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[5] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[3] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[4] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n10 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n14541 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_664 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_664 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9411 ), 
    .B1(\Controller_inst.n27 ), .A1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[3] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[1] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9411 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9422 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_666 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_666 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9 ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n59 ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6967 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_667 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_667 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[3] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[0] ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[2] ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[4] ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[1] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_668 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_668 ( 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[5] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[1] )
    , .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n8 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_669 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_669 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n8 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9_adj_557 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[2] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[0] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[4] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[3] )
    , .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9_adj_557 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9252 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_670 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_670 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[0] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 ), 
    .B1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 ), 
    .F1(\Controller_inst.int_RHD_TX_Ready ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_673 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_673 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9_adj_557 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n15739 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[0] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[5] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[1] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_CS_Inactive_Count[2] )
    , .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n15739 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n15787 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_674 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_674 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_555 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[3] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[4] )
    , .A1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11362 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n3 ), 
    .B0(\Controller_inst.int_RHD_TX_DV ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8522 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n5866 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_675 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_675 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[3] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6_adj_556 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[1] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[0] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[4] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6_adj_556 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11362 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_676 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_676 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10966 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[3] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Leading_Edge )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10966 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_678 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_678 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[10] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[8] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[9] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[0] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n8 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_553 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_680 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_680 
    ( 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_555 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[4] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[3] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[1] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[2] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[5] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_555 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n3 ));

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_682
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_682 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.empty_flag_r )
    , .C0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.full_flag_r )
    , .A0(\Controller_inst.int_FIFO_RE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5497 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_684
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_684 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[1] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[1] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.empty_flag_r )
    , .C0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.full_flag_r )
    , .A0(\Controller_inst.int_FIFO_RE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[1] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_686
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_686 
    ( 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[2] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[3] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[3] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15757 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_687
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_687 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15749 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15757 )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[7] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[7] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[5] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15749 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15781 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_688
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_688 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[0] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15751 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[0] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[6] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[1] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[6] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1cmp_r[1] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15751 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15777 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_690
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_690 
    ( .D1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14569 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n8 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n12 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[2] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14569 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14561 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_692
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_692 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_nxt_w )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15781 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15777 )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14561 )
    , .D0(\Controller_inst.int_FIFO_RE ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_nxt_w )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_693
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_693 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[6] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n12_adj_552 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[6] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w_0__N_391 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1cmp_r[7] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[1] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[1] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[7] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n12_adj_552 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_694
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_694 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[0] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[4] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[4] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[0] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[4] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[4] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15741 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_695
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_695 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[0] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n10 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5 )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[0] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[3] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[3] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[5] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n10 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n12 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_697
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_697 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15741 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15765 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[2] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_p1_r[3] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[5] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[3] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15765 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15773 )
    );
  Controller_inst_SLICE_699 \Controller_inst.SLICE_699 ( 
    .DI1(\Controller_inst.n8535 ), .D1(\Controller_inst.int_RHD_TX_Byte[15] ), 
    .C1(\Controller_inst.n2457 ), .D0(\Controller_inst.state[1] ), 
    .C0(\Controller_inst.state[0] ), .B0(\w_Controller_Mode[0] ), 
    .A0(\w_Controller_Mode[1] ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.int_RHD_TX_Byte[15] ), .F0(\Controller_inst.n2457 ), 
    .F1(\Controller_inst.n8535 ));
  Controller_inst_SLICE_701 \Controller_inst.SLICE_701 ( 
    .D1(\Controller_inst.stm32_state[2] ), 
    .C1(\Controller_inst.stm32_state[3] ), 
    .B1(\Controller_inst.stm32_state[1] ), 
    .A1(\Controller_inst.stm32_state[0] ), 
    .D0(\Controller_inst.stm32_state[3] ), 
    .C0(\Controller_inst.stm32_state[2] ), 
    .B0(\Controller_inst.stm32_state[0] ), 
    .A0(\Controller_inst.stm32_state[1] ), .F0(\Controller_inst.n6633 ), 
    .F1(\Controller_inst.n9 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_702 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_702 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.n5873 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n6600 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n270 ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n15699 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n5873 ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_703 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_703 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[2] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n7011 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n15697 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_704 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_704 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5851 ), 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9248 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9252 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n7003 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n5851 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_705 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_705 ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9260 ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[2] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6946 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9248 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_706 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_706 ( 
    .DI1(\Controller_inst.int_STM32_TX_DV.sig_069.FeedThruLUT ), 
    .C1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_Trailing_Edge ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6943 ), 
    .F1(\Controller_inst.int_STM32_TX_DV.sig_069.FeedThruLUT ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_707 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_707 ( 
    .DI1(\Controller_inst.n47_adj_574 ), .D1(\Controller_inst.n27 ), 
    .C1(\Controller_inst.int_STM32_TX_DV ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_Trailing_Edge ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6993 ), 
    .F1(\Controller_inst.n47_adj_574 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_708 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_708 ( 
    .D1(o_RHD_SPI_CS_n_c), .B1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[1] ), 
    .C0(\Controller_inst.int_RHD_TX_DV ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[0] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13056 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n59 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_709 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_709 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[4] ), 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[4] ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13064 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n9251 ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[3] ), 
    .D0(\Controller_inst.int_RHD_TX_DV ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[1] ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[0] ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[2] ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6967 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.r_TX_Count[4] ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n13064 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n32[4] ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_710 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_710 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11344 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[3] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_555 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Edges[4] )
    , .A1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6939 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11344 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_711 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_711 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge_N_545 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n3 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[5] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11362 )
    , .A1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6981 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge_N_545 )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_713 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_713 ( 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[5] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[2] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[4] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Edges[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n10_adj_562 ));
  Controller_inst_SLICE_714 \Controller_inst.SLICE_714 ( 
    .D0(\Controller_inst.n25 ), .C0(\Controller_inst.n17 ), 
    .B0(\Controller_inst.n23 ), .A0(\Controller_inst.n29 ), 
    .F0(\Controller_inst.n15791 ));
  Controller_inst_SLICE_715 \Controller_inst.SLICE_715 ( 
    .D1(\Controller_inst.n57 ), .C1(\Controller_inst.n61 ), 
    .B1(\Controller_inst.n39_adj_598 ), .A1(\Controller_inst.n21 ), 
    .D0(\Controller_inst.n51 ), .C0(\Controller_inst.n59 ), 
    .B0(\Controller_inst.n31 ), .A0(\Controller_inst.n33_adj_593 ), 
    .F0(\Controller_inst.n15789 ), .F1(\Controller_inst.n15795 ));
  Controller_inst_SLICE_716 \Controller_inst.SLICE_716 ( 
    .D0(\Controller_inst.index[8] ), .C0(\Controller_inst.index[24] ), 
    .B0(\Controller_inst.index[12] ), .A0(\Controller_inst.index[16] ), 
    .F0(\Controller_inst.n49 ));
  Controller_inst_SLICE_717 \Controller_inst.SLICE_717 ( 
    .D0(\Controller_inst.index[3] ), .C0(\Controller_inst.index[5] ), 
    .B0(\Controller_inst.index[7] ), .A0(\Controller_inst.index[23] ), 
    .F0(\Controller_inst.n43 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_722 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_722 ( 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17893 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17875 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[5] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n279 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_723 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_723 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[5] )
    , .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[5] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_Trailing_Edge ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n6993 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[5] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n15064 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[5] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_724 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_724 
    ( 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Byte[12] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10_adj_553 )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[3] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[2] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n16463 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_725 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_725 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[0] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[0] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[1] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[0] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6054 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[0] )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_726 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_726 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n5839 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[0] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Leading_Edge )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[1] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[0] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[0] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n4 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n5839 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_728
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_728 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6]$n21 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[6] )
    , .B1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[6] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[1] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[6] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[1] )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_cmpaddr_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n8 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6]$n21 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_729
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_729 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_nxt_w )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15773 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14565 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15 )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14569 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A0(\Controller_inst.int_FIFO_RE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14565 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_nxt_w )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_730 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_730 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9445 ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9411 ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] ), 
    .D0(\Controller_inst.n27 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9411 ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk_Count[2] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n5834 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_SPI_Clk ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n1352 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n9445 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_732 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_732 
    ( 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[2] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[1] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_RX_Bit_Count[0] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_733 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_733 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n18562 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n3 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_SPI_Clk_Count[5] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n11362 )
    , .A1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Leading_Edge )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Trailing_Edge )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_Leading_Edge )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6971 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n18562 )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_734 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_734 ( 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17905 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17923 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16436 ));
  SLICE_736 SLICE_736( .F0(VCC_net));
  SLICE_737 SLICE_737( .DI1(n14947), .D1(stop_counting), .C1(n6), 
    .B1(\reset_counter[2] ), .A1(\reset_counter[6] ), .C0(stop_counting), 
    .CLK(pll_clk_internal), .Q1(stop_counting), .F0(n2417), .F1(n14947));
  SLICE_738 SLICE_738( .DI1(n16502), .D1(\step[0] ), .C1(n8493), 
    .D0(\step[1] ), .C0(\step[0] ), .CLK(pll_clk_internal), .Q1(\step[0] ), 
    .F0(RGB_2_c), .F1(n16502));
  SLICE_740 SLICE_740( .D1(\step[0] ), .C1(\step[1] ), .D0(\step[1] ), 
    .C0(\step[0] ), .F0(RGB_1_c), .F1(RGB_3_c));
  SLICE_742 SLICE_742( .DI1(n419), .D1(\step[1] ), .C1(\step[0] ), 
    .D0(\step[0] ), .C0(\step[1] ), .CE(n8493), .CLK(pll_clk_internal), 
    .Q1(\step[1] ), .F0(RGB_4_c), .F1(n419));
  SLICE_744 SLICE_744( .F0(GND_net));
  Controller_inst_SLICE_747 \Controller_inst.SLICE_747 ( 
    .D1(\Controller_inst.temp_buffer[57] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[56] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[56] ), 
    .F1(\Controller_inst.temp_buffer[57] ));
  Controller_inst_SLICE_749 \Controller_inst.SLICE_749 ( 
    .D1(\Controller_inst.temp_buffer[59] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[58] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[58] ), 
    .F1(\Controller_inst.temp_buffer[59] ));
  Controller_inst_SLICE_751 \Controller_inst.SLICE_751 ( 
    .D1(\Controller_inst.temp_buffer[61] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[60] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[60] ), 
    .F1(\Controller_inst.temp_buffer[61] ));
  Controller_inst_SLICE_753 \Controller_inst.SLICE_753 ( 
    .D1(\Controller_inst.temp_buffer[63] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[62] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[62] ), 
    .F1(\Controller_inst.temp_buffer[63] ));
  Controller_inst_SLICE_755 \Controller_inst.SLICE_755 ( 
    .D1(\Controller_inst.temp_buffer[2] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[1] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[1] ), 
    .F1(\Controller_inst.temp_buffer[2] ));
  Controller_inst_SLICE_757 \Controller_inst.SLICE_757 ( 
    .D1(\Controller_inst.temp_buffer[4] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[3] ), 
    .F0(\Controller_inst.temp_buffer[3] ), 
    .F1(\Controller_inst.temp_buffer[4] ));
  Controller_inst_SLICE_759 \Controller_inst.SLICE_759 ( 
    .C1(\Controller_inst.temp_buffer[6] ), .A1(w_reset), 
    .D0(\Controller_inst.temp_buffer[5] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[5] ), 
    .F1(\Controller_inst.temp_buffer[6] ));
  Controller_inst_SLICE_761 \Controller_inst.SLICE_761 ( 
    .D1(\Controller_inst.temp_buffer[8] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[7] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[7] ), 
    .F1(\Controller_inst.temp_buffer[8] ));
  Controller_inst_SLICE_763 \Controller_inst.SLICE_763 ( 
    .D1(\Controller_inst.temp_buffer[10] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[9] ), 
    .F0(\Controller_inst.temp_buffer[9] ), 
    .F1(\Controller_inst.temp_buffer[10] ));
  Controller_inst_SLICE_765 \Controller_inst.SLICE_765 ( 
    .D1(\Controller_inst.temp_buffer[12] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[11] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[11] ), 
    .F1(\Controller_inst.temp_buffer[12] ));
  Controller_inst_SLICE_767 \Controller_inst.SLICE_767 ( 
    .D1(\Controller_inst.temp_buffer[14] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[13] ), 
    .F0(\Controller_inst.temp_buffer[13] ), 
    .F1(\Controller_inst.temp_buffer[14] ));
  Controller_inst_SLICE_769 \Controller_inst.SLICE_769 ( 
    .D1(\Controller_inst.temp_buffer[16] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[15] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[15] ), 
    .F1(\Controller_inst.temp_buffer[16] ));
  Controller_inst_SLICE_771 \Controller_inst.SLICE_771 ( 
    .D1(\Controller_inst.temp_buffer[18] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[17] ), 
    .F0(\Controller_inst.temp_buffer[17] ), 
    .F1(\Controller_inst.temp_buffer[18] ));
  Controller_inst_SLICE_773 \Controller_inst.SLICE_773 ( .DI1(\n11352$n0 ), 
    .D1(n11350), .C1(\reset_counter[5] ), .B1(\reset_counter[7] ), 
    .A1(\reset_counter[6] ), .D0(\Controller_inst.temp_buffer[19] ), 
    .C0(w_reset), .CLK(pll_clk_internal), .Q1(w_reset), 
    .F0(\Controller_inst.temp_buffer[19] ), .F1(\n11352$n0 ));
  Controller_inst_SLICE_774 \Controller_inst.SLICE_774 ( 
    .D1(\Controller_inst.temp_buffer[21] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[20] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[20] ), 
    .F1(\Controller_inst.temp_buffer[21] ));
  Controller_inst_SLICE_776 \Controller_inst.SLICE_776 ( 
    .D1(\Controller_inst.temp_buffer[23] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[22] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[22] ), 
    .F1(\Controller_inst.temp_buffer[23] ));
  Controller_inst_SLICE_778 \Controller_inst.SLICE_778 ( 
    .D1(\Controller_inst.temp_buffer[25] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[24] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[24] ), 
    .F1(\Controller_inst.temp_buffer[25] ));
  Controller_inst_SLICE_780 \Controller_inst.SLICE_780 ( 
    .D1(\Controller_inst.temp_buffer[27] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[26] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[26] ), 
    .F1(\Controller_inst.temp_buffer[27] ));
  Controller_inst_SLICE_782 \Controller_inst.SLICE_782 ( 
    .D1(\Controller_inst.temp_buffer[0] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[28] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[28] ), 
    .F1(\Controller_inst.temp_buffer[0] ));
  Controller_inst_SLICE_784 \Controller_inst.SLICE_784 ( 
    .D1(\Controller_inst.temp_buffer[30] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[29] ), 
    .F0(\Controller_inst.temp_buffer[29] ), 
    .F1(\Controller_inst.temp_buffer[30] ));
  Controller_inst_SLICE_786 \Controller_inst.SLICE_786 ( 
    .D1(\Controller_inst.temp_buffer[34] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[31] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[31] ), 
    .F1(\Controller_inst.temp_buffer[34] ));
  Controller_inst_SLICE_788 \Controller_inst.SLICE_788 ( 
    .DI1(\reset_counter[1].sig_000.FeedThruLUT ), .D1(\reset_counter[1] ), 
    .D0(\w_Controller_Mode[0] ), .CE(n8599), .LSR(n11352), 
    .CLK(pll_clk_internal), .Q1(\w_Controller_Mode[0] ), 
    .F0(\Controller_inst.n3 ), .F1(\reset_counter[1].sig_000.FeedThruLUT ));
  Controller_inst_SLICE_792 \Controller_inst.SLICE_792 ( 
    .D1(\Controller_inst.temp_buffer[36] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[35] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[35] ), 
    .F1(\Controller_inst.temp_buffer[36] ));
  Controller_inst_SLICE_794 \Controller_inst.SLICE_794 ( 
    .D1(\Controller_inst.temp_buffer[38] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[37] ), 
    .F0(\Controller_inst.temp_buffer[37] ), 
    .F1(\Controller_inst.temp_buffer[38] ));
  Controller_inst_SLICE_796 \Controller_inst.SLICE_796 ( 
    .D1(\Controller_inst.temp_buffer[40] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[39] ), 
    .F0(\Controller_inst.temp_buffer[39] ), 
    .F1(\Controller_inst.temp_buffer[40] ));
  Controller_inst_SLICE_798 \Controller_inst.SLICE_798 ( 
    .D1(\Controller_inst.temp_buffer[42] ), .C1(w_reset), .D0(w_reset), 
    .C0(\Controller_inst.temp_buffer[41] ), 
    .F0(\Controller_inst.temp_buffer[41] ), 
    .F1(\Controller_inst.temp_buffer[42] ));
  Controller_inst_SLICE_800 \Controller_inst.SLICE_800 ( .D1(w_reset), 
    .C1(\Controller_inst.temp_buffer[44] ), 
    .D0(\Controller_inst.temp_buffer[43] ), .C0(w_reset), 
    .F0(\Controller_inst.temp_buffer[43] ), 
    .F1(\Controller_inst.temp_buffer[44] ));
  Controller_inst_SLICE_802 \Controller_inst.SLICE_802 ( 
    .D1(\Controller_inst.temp_buffer[46] ), .B1(w_reset), 
    .C0(\Controller_inst.temp_buffer[45] ), .A0(w_reset), 
    .F0(\Controller_inst.temp_buffer[45] ), 
    .F1(\Controller_inst.temp_buffer[46] ));
  Controller_inst_SLICE_804 \Controller_inst.SLICE_804 ( .D1(w_reset), 
    .C1(\Controller_inst.temp_buffer[48] ), 
    .D0(\Controller_inst.temp_buffer[47] ), .C0(w_reset), 
    .F0(\Controller_inst.temp_buffer[47] ), 
    .F1(\Controller_inst.temp_buffer[48] ));
  Controller_inst_SLICE_806 \Controller_inst.SLICE_806 ( .D1(w_reset), 
    .C1(\Controller_inst.temp_buffer[50] ), 
    .C0(\Controller_inst.temp_buffer[49] ), .A0(w_reset), 
    .F0(\Controller_inst.temp_buffer[49] ), 
    .F1(\Controller_inst.temp_buffer[50] ));
  Controller_inst_SLICE_808 \Controller_inst.SLICE_808 ( 
    .D1(\Controller_inst.temp_buffer[52] ), .C1(w_reset), 
    .D0(\Controller_inst.temp_buffer[51] ), .B0(w_reset), 
    .F0(\Controller_inst.temp_buffer[51] ), 
    .F1(\Controller_inst.temp_buffer[52] ));
  Controller_inst_SLICE_810 \Controller_inst.SLICE_810 ( .D1(w_reset), 
    .C1(\Controller_inst.temp_buffer[54] ), 
    .D0(\Controller_inst.temp_buffer[53] ), .C0(w_reset), 
    .F0(\Controller_inst.temp_buffer[53] ), 
    .F1(\Controller_inst.temp_buffer[54] ));
  Controller_inst_SLICE_813 \Controller_inst.SLICE_813 ( .D1(w_reset), 
    .C1(\Controller_inst.temp_buffer[33] ), 
    .C0(\Controller_inst.temp_buffer[32] ), .A0(w_reset), 
    .F0(\Controller_inst.temp_buffer[32] ), 
    .F1(\Controller_inst.temp_buffer[33] ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_815 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_815 ( 
    .DI1(\Controller_inst.n1930[0] ), .D1(\Controller_inst.stm32_state[0] ), 
    .C1(\Controller_inst.stm32_state[1] ), 
    .D0(\Controller_inst.int_STM32_TX_DV ), .CE(\Controller_inst.n18561 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.int_STM32_TX_DV ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.int_STM32_TX_Ready_N_535 ), 
    .F1(\Controller_inst.n1930[0] ));
  Controller_inst_SPI_Master_CS_STM32_1_SLICE_817 
    \Controller_inst.SPI_Master_CS_STM32_1.SLICE_817 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.n42[6] ), 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.n33[6] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.n216 ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.n1026[1] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.n6968 ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.r_TX_Count[6] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.n6600 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.n42[6] ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_821 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_821 ( 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[48] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[49] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n47_c ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_823 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_823 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[56] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[57] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[54] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[55] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n51 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n54 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_826 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_826 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[0] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[1] ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[58] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[59] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n55 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n1 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_829 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_829 ( 
    .DI1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[0] )
    , .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n37[0] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_DV ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.w_Master_Ready ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[2] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[3] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .CE(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n15064 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n2 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count_5__N_343[0] )
    );
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_830 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_830 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[42] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[43] ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[6] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[7] ), 
    .A0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n5 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n40_adj_564 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_834 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_834 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[32] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .B1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[33] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[46] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[47] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n43_adj_565 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n32 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_837 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_837 ( 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17899 ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n17929 ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[2] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n16433 ));
  Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_838 
    \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_838 ( 
    .D1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[39] ), 
    .C1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[38] ), 
    .A1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .D0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[35] ), 
    .C0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Byte[34] ), 
    .B0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.r_TX_Bit_Count[0] ), 
    .F0(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n33 ), 
    .F1(\Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.n36_adj_570 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_845 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SLICE_845 ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n33 ), 
    .D1(o_RHD_SPI_CS_n_c), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[1] ), 
    .B1(\Controller_inst.int_RHD_TX_DV ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1126[0] ), 
    .C0(o_RHD_SPI_CS_n_c), .A0(\Controller_inst.int_RHD_TX_DV ), 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n6946 ), 
    .LSR(w_reset), .CLK(pll_clk_internal), .Q1(o_RHD_SPI_CS_n_c), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n1137 ), 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.n33 ));
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_846 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_846 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.o_RHD_RX_DV_N_529 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n10 ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n4 ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.o_RHD_RX_DV ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_DV )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.w_Master_Ready ), 
    .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.o_RHD_RX_DV ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6050 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.o_RHD_RX_DV_N_529 )
    );
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_847 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_847 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[3] )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[3] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6050 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[2] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6054 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[1] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[3] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[0] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[2] )
    , 
    .CE(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6981 )
    , .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count[3] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.n6_adj_554 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.r_TX_Bit_Count_3__N_372[3] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_850
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_850 
    ( 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[0] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5483 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_851
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_851 
    ( 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[0] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[0] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_852
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_852 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[2] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[2] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[3] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[3] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5493 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5495 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_853
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_853 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[2] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[2] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[3] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[3] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[3] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[2] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_856
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_856 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[4] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[5] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5489 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5491 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_857
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_857 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[4] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[4] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[5] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[5] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[4] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_860
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_860 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[6] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[6] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_p1_r[7] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.rd_flag_addr_r[7] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n1758 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5485 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n5487 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_861
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_861 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[6] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[6] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_p1_r[7] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.wr_flag_addr_r[7] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n6034 )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[7] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.diff_w_7__N_392[6] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_868
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_868 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_nxt_w$n1 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15 )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n15773 )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.n14565 )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.MISC.full_flag_r )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w_0__N_383 )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_nxt_w$n1 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_869
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_869 
    ( 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[1] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[1] )
    , .A0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[1] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_870
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_870 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .C1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[3] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[3] )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[2] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[2] )
    , .B0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[2] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[3] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_872
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_872 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[5] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[5] )
    , .B1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[4] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[4] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[4] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[5] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_874
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_874 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[0] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[0] )
    , .B1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[6] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[6] )
    , .A0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[6] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[0] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_875
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_875 
    ( .DI1(\Controller_inst.Controller_RHD_FIFO_1.n5813 ), 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.init_FIFO_State ), 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.o_RHD_RX_DV ), 
    .B1(\w_Controller_Mode[0] ), .A1(\w_Controller_Mode[1] ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_p1_r[7] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_r[7] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.full_r )
    , .A0(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .CE(\Controller_inst.n3 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.o_FIFO_WE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.wr_addr_nxt_w[7] )
    , .F1(\Controller_inst.Controller_RHD_FIFO_1.n5813 ));

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_876
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_876 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[2] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[2] )
    , .B1(\Controller_inst.int_FIFO_RE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[1] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[1] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A0(\Controller_inst.int_FIFO_RE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[1] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[2] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_878
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_878 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[4] )
    , .C1(\Controller_inst.int_FIFO_RE ), 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[4] )
    , 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .D0(\Controller_inst.int_FIFO_RE ), 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[3] )
    , 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[3] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[3] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[4] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_880
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_880 
    ( 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[7] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[7] )
    , 
    .B1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A1(\Controller_inst.int_FIFO_RE ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[5] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[5] )
    , .B0(\Controller_inst.int_FIFO_RE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[5] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[7] )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_881
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_881 
    ( 
    .DI1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6]$n8 )
    , 
    .D1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6] )
    , 
    .C1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[6] )
    , .B1(\Controller_inst.int_FIFO_RE ), 
    .A1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[6] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[6] )
    , 
    .B0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .A0(\Controller_inst.int_FIFO_RE ), .LSR(w_reset), 
    .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_cmpaddr_r[6] )
    , 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6] )
    , 
    .F1(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[6]$n8 )
    );

    Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_883
     
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_883 
    ( .DI1(\Controller_inst.n11088 ), .D1(\Controller_inst.init_FIFO_Read ), 
    .C1(\Controller_inst.stm32_state[1] ), .B1(\w_Controller_Mode[0] ), 
    .A1(\w_Controller_Mode[1] ), 
    .D0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_r[0] )
    , 
    .C0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_p1_r[0] )
    , .B0(\Controller_inst.int_FIFO_RE ), 
    .A0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.empty_r )
    , .CE(\Controller_inst.n14707 ), .LSR(w_reset), .CLK(pll_clk_internal), 
    .Q1(\Controller_inst.int_FIFO_RE ), 
    .F0(\Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.rd_addr_nxt_w[0] )
    , .F1(\Controller_inst.n11088 ));
  pll_spi_inst_lscc_pll_inst_u_PLL_B \pll_spi_inst.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(i_clk_c), .FEEDBACK(\pll_spi_inst.lscc_pll_inst.feedback_w ), 
    .RESET_N(VCC_net), .INTFBOUT(\pll_spi_inst.lscc_pll_inst.feedback_w ), 
    .OUTGLOBAL(pll_clk_internal));
  RGB_1 RGB_1_I( .PADDO(RGB_1_c), .RGB_1(RGB_1));
  o_RHD_SPI_CS_n o_RHD_SPI_CS_n_I( .PADDO(o_RHD_SPI_CS_n_c), 
    .o_RHD_SPI_CS_n(o_RHD_SPI_CS_n));
  o_RHD_SPI_Clk o_RHD_SPI_Clk_I( .PADDO(o_RHD_SPI_Clk_c), 
    .o_RHD_SPI_Clk(o_RHD_SPI_Clk));
  o_RHD_SPI_MOSI o_RHD_SPI_MOSI_I( .PADDO(o_RHD_SPI_MOSI_c), 
    .o_RHD_SPI_MOSI(o_RHD_SPI_MOSI));
  RGB_2 RGB_2_I( .PADDO(RGB_2_c), .RGB_2(RGB_2));
  o_STM32_SPI_CS_n o_STM32_SPI_CS_n_I( .PADDO(o_STM32_SPI_CS_n_c), 
    .o_STM32_SPI_CS_n(o_STM32_SPI_CS_n));
  o_STM32_SPI_Clk o_STM32_SPI_Clk_I( .PADDO(o_STM32_SPI_Clk_c), 
    .o_STM32_SPI_Clk(o_STM32_SPI_Clk));
  o_STM32_SPI_MOSI o_STM32_SPI_MOSI_I( .PADDO(o_STM32_SPI_MOSI_c), 
    .o_STM32_SPI_MOSI(o_STM32_SPI_MOSI));
  RGB_3 RGB_3_I( .PADDO(RGB_3_c), .RGB_3(RGB_3));
  RGB_4 RGB_4_I( .PADDO(RGB_4_c), .RGB_4(RGB_4));
  i_clk i_clk_I( .PADDI(i_clk_c), .i_clk(i_clk));
  pll_clk pll_clk_I( .PADDO(GND_net), .pll_clk(pll_clk));
endmodule

module SLICE_0 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 counter_1152_add_4_33( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i31( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_31( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i29( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i30( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_29( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i27( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i28( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_27( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i25( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i26( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_25( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i23( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i24( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_23( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i21( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i22( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_21( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i19( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i20( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_19( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i17( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i18( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_17( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i15( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i16( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_15( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i13( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i14( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_13( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i12( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i10( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 counter_1152_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 counter_1152__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_16 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 counter_1152_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 counter_1152__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_17 ( input DI0, D1, D0, C0, CLK, CIN0, CIN1, output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  fa2 reset_counter_1153_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 reset_counter_1153__i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 reset_counter_1153_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 reset_counter_1153__i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 reset_counter_1153__i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_19 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 reset_counter_1153_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 reset_counter_1153__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 reset_counter_1153__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_20 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 reset_counter_1153_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 reset_counter_1153__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 reset_counter_1153__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_21 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 reset_counter_1153_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 reset_counter_1153__i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module Controller_inst_SLICE_22 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_7 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_23 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_5 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_24 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_3 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_25 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_26 ( input D1, D0, C0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_27 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_28 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_29 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_30 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_31 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_32 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_33 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_34 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_35 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_36 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_37 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_38 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_39 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_40 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_41 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/index_1156_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_42 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \Controller_inst/index_1156_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_43 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_33 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_44 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_31 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_45 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_29 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_46 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_27 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_47 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_25 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_48 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_23 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_49 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_50 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_51 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_52 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_53 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_54 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_55 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_56 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_57 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_58 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \Controller_inst/sub_667_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_59 ( input D1, D0, C0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_33 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_60 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_31 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_61 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_29 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_62 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/sub_667_add_2_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_63 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_27 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_64 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_25 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_65 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_23 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_66 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_21 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_67 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_19 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_68 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_17 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_69 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_15 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_70 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_13 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_71 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_11 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_72 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/stm32_counter_1154_add_4_9 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_73 ( input D1, D0, C0, B0, 
    CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158_add_4_8 ( 
    .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_74 ( input D1, C1, B1, D0, 
    C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158_add_4_6 ( 
    .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_75 ( input D1, C1, B1, D0, 
    C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158_add_4_4 ( 
    .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_76 ( input D1, C1, B1, D0, 
    C0, B0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158_add_4_2 ( 
    .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_77 ( input D1, 
    C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_227_add_2_add_5_5 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_78 ( input D1, 
    D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_228_add_2_add_5_7 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_79 ( input D1, 
    C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_227_add_2_add_5_3 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_80 ( input D1, 
    C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_228_add_2_add_5_5 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_81 ( input D1, 
    C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_227_add_2_add_5_1 
    ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_82 ( input D1, 
    C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_228_add_2_add_5_3 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_83 ( input D1, 
    C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_228_add_2_add_5_1 
    ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_84 ( input D1, 
    D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_227_add_2_add_5_9 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_85 ( input D1, 
    C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/sub_227_add_2_add_5_7 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_86 ( input 
    D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/add_2188_6 ( 
    .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_87 ( input 
    D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/add_2188_4 ( 
    .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_88 ( input 
    D1, C1, B1, D0, C0, B0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/add_2188_2 ( 
    .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_89
   ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162_add_4_7 
    ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162__i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20001 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_90
   ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162_add_4_5 
    ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162__i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162__i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_91
   ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, Q1, F0, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162_add_4_3 
    ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162__i1 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162__i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_92
   ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162_add_4_1 
    ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Count_1162__i0 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_93
   ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/sub_131_add_2_add_5_1 
    ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_94
   ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/sub_131_add_2_add_5_7 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_95
   ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/sub_131_add_2_add_5_5 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_96
   ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/sub_131_add_2_add_5_3 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_97
   ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.diff_w_7__I_0_8 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i6 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i7 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_98
   ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.diff_w_7__I_0_6 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i4 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i5 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_99
   ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.diff_w_7__I_0_4 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i2 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i3 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_MISC_SLICE_100
   ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, CIN1, output Q0, Q1, F0, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.diff_w_7__I_0_2 
    ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.genblk4.data_cnt_r_res1_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_101
   ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_nxt_w_7__I_0_9 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_102
   ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_nxt_w_7__I_0_7 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_103
   ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_nxt_w_7__I_0_5 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_104
   ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_nxt_w_7__I_0_3 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_105
   ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_nxt_w_7__I_0_1 
    ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_106
   ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_nxt_w_7__I_0_9 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_107
   ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_nxt_w_7__I_0_7 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_108
   ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_nxt_w_7__I_0_5 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_109
   ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_nxt_w_7__I_0_3 
    ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), 
    .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_110
   ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_nxt_w_7__I_0_1 
    ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), 
    .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_117 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5460_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5459_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i32 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i33 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_119 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \Controller_inst/i3_4_lut_adj_573 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40004 \Controller_inst/i2_4_lut_adj_576 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_state_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_state_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xF4FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xF5FD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_122 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7914_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \Controller_inst/i7825_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_123 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \Controller_inst/i7883_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/i7826_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i1 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i0 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_124 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7854_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7853_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i30 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i31 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_126 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7856_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7855_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i28 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i29 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_128 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7858_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7857_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i26 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i27 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_130 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7860_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7859_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i24 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i25 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_132 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7862_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7861_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i22 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i23 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_134 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7864_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7863_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i20 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i21 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_136 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7866_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7865_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i18 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i19 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_138 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7868_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7867_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i16 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i17 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_140 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7870_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7869_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i14 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i15 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_142 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7872_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7871_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i12 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i13 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_144 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7874_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7873_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i10 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i11 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_146 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7876_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7875_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_148 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \Controller_inst/i7878_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/i7877_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_150 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \Controller_inst/i7880_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/i7879_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_152 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \Controller_inst/i7882_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/i7881_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/stm32_counter_1154__i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_counter_1154__i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_155 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7885_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7884_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i30 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i31 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_157 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7887_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7886_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i28 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i29 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_159 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7889_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7888_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i26 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i27 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_161 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7891_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7890_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i24 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i25 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_163 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7893_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7892_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i22 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i23 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_165 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7895_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7894_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i20 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i21 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_167 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7897_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7896_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i18 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i19 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_169 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7899_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7898_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i16 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i17 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_171 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7901_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7900_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_173 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7903_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7902_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_175 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7905_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7904_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_177 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/i7907_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/i7906_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_179 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \Controller_inst/i7909_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/i7908_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_181 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \Controller_inst/i7911_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/i7910_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_183 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \Controller_inst/i7913_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/i7912_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/index_1156__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/index_1156__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_186 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 \Controller_inst.i12322_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40011 \Controller_inst/select_92_Select_3_i3_2_lut_3_lut ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 \Controller_inst/stm32_state_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/stm32_state_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x1FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x0C00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_189 ( input DI1, DI0, D1, D0, C0, A0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_189_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \Controller_inst/i7927_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_RHD_TX_Byte__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/int_RHD_TX_Byte__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_191 ( input DI1, DI0, C1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \Controller_inst.SLICE_191_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \Controller_inst.SLICE_191_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre20001 \Controller_inst/int_RHD_TX_Byte__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/int_RHD_TX_Byte__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_193 ( input DI1, DI0, D1, C1, B1, C0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \Controller_inst/i13_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \Controller_inst/i11386_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \Controller_inst/state_i0_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Controller_inst/state_i0_i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xF03C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xA5A5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_195 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5520_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \Controller_inst/i5521_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i35 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i34 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_197 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5518_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5519_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i37 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i36 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_199 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5516_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5517_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i39 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i38 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_201 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5514_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5515_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i41 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i40 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_203 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5512_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5513_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i43 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i42 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_205 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5510_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5511_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i45 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i44 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_207 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40021 \Controller_inst/i5508_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \Controller_inst/i5509_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i47 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i46 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_209 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 \Controller_inst/i5506_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5507_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i49 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i48 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_211 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40025 \Controller_inst/i5504_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5505_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i51 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i50 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_213 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5502_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5503_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i53 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i52 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_215 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5500_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5501_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i55 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i54 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_217 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5498_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5499_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i57 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i56 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_219 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5496_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5497_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i59 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i58 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_221 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5494_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5495_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i61 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i60 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_223 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5492_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5493_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i63 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i62 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_225 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40021 \Controller_inst/i5446_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5491_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i0 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i1 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_226 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 \Controller_inst/i5489_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5490_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i3 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i2 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_228 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5487_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5488_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i5 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i4 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_230 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 \Controller_inst/i5485_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5486_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i7 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i6 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_232 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5483_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5484_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i9 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i8 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_234 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5481_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5482_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i11 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i10 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_236 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 \Controller_inst/i5479_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \Controller_inst/i5480_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i13 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i12 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_238 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40025 \Controller_inst/i5477_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \Controller_inst/i5478_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i15 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i14 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_240 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 \Controller_inst/i5475_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5476_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i17 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i16 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_242 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5473_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5474_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i19 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i18 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_244 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5471_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5472_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i21 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i20 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_246 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 \Controller_inst/i5469_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5470_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i23 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i22 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_248 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5467_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5468_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i25 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i24 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_250 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 \Controller_inst/i5465_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \Controller_inst/i5466_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i27 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i26 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_252 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \Controller_inst/i5463_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \Controller_inst/i5464_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i29 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i28 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_253 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \Controller_inst/Controller_RHD_FIFO_1/i7693_3_lut ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \Controller_inst/i1_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/Controller_RHD_FIFO_1/init_FIFO_State_c ( 
    .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/init_FIFO_Read_c ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xFF03") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_254 ( input DI1, DI0, D1, D0, C0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_254_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \Controller_inst/i5448_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_DV_c 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_RHD_TX_DV_c ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xAA8B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_257 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \Controller_inst/i5461_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \Controller_inst/i5462_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i31 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/int_STM32_TX_Byte_i0_i30 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_260 ( input DI1, DI0, D1, 
    C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40030 \Controller_inst/SPI_Master_CS_STM32_1/i7920_2_lut_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \Controller_inst/SPI_Master_CS_STM32_1/i7824_2_lut_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158__i1 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158__i0 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_262 ( input DI1, DI0, D1, 
    C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40030 \Controller_inst/SPI_Master_CS_STM32_1/i7917_2_lut_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \Controller_inst/SPI_Master_CS_STM32_1/i7916_2_lut_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158__i4 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158__i5 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_264 ( input DI1, DI0, D1, 
    C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40030 \Controller_inst/SPI_Master_CS_STM32_1/i7919_2_lut_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \Controller_inst/SPI_Master_CS_STM32_1/i7918_2_lut_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158__i2 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158__i3 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_268 ( input DI1, DI0, D1, 
    C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40032 \Controller_inst/SPI_Master_CS_STM32_1/i3491_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \Controller_inst.SPI_Master_CS_STM32_1.i3489_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20034 \Controller_inst/SPI_Master_CS_STM32_1/r_SM_CS_FSM_i1 ( 
    .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_SM_CS_FSM_i2 ( 
    .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x0ACE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20034 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_269 ( input DI0, D0, C0, B0, 
    A0, CE, LSR, CLK, output Q0, F0 );
  wire   DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40035 \Controller_inst/SPI_Master_CS_STM32_1/i12345_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 \Controller_inst/SPI_Master_CS_STM32_1/r_CS_Inactive_Count_i4 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xF5D7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_270 ( input DI1, DI0, D1, 
    C1, B1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40036 \Controller_inst/SPI_Master_CS_STM32_1/i7942_3_lut ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \Controller_inst/SPI_Master_CS_STM32_1/i7941_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_CS_Inactive_Count_i2 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_CS_Inactive_Count_i3 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xC00C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xA802") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_272 ( input DI1, DI0, D1, 
    C1, B1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40038 \Controller_inst/SPI_Master_CS_STM32_1/i7723_3_lut ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 \Controller_inst/SPI_Master_CS_STM32_1/i7943_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_CS_Inactive_Count_i0 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_CS_Inactive_Count_i1 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x0CC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xA208") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_275 ( input 
    DI0, D0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40040 \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_275_K0 ( 
    .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/o_SPI_Clk ( 
    .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_277 ( input 
    DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40041 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7738_2_lut_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7807_2_lut ( 
    .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i6 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i7 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_278 ( input DI1, DI0, D1, 
    C1, B1, A1, D0, C0, B0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40043 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i9457_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \Controller_inst.SPI_Master_CS_STM32_1.i2_3_lut ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Count_1161__i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_Trailing_Edge_c ( 
    .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_280 ( input DI1, DI0, C1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \Controller_inst.SLICE_280_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_280_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i1 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i0 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_281 ( input 
    DI1, DI0, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40045 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i9436_2_lut_3_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i9428_2_lut_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Count_1161__i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Count_1161__i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xBF40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xCF30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_282 ( input 
    DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40041 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7705_2_lut_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7759_2_lut_2_lut ( 
    .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i0 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i1 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_283 ( input 
    DI1, DI0, D1, B1, D0, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7753_2_lut_2_lut ( 
    .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7754_2_lut_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i3 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i2 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_285 ( input 
    DI1, DI0, D1, B1, D0, C0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40048 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7748_2_lut_2_lut ( 
    .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7752_2_lut_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i5 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Edges_i4 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_290 ( input 
    DI1, DI0, C1, A1, D0, C0, B0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40050 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i9443_2_lut ( 
    .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i9450_2_lut_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Count_1161__i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_Count_1161__i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_293 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_293_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_293_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i62 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i63 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_295 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_295_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_295_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i60 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i61 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_297 ( input DI1, DI0, C1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \Controller_inst.SLICE_297_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \Controller_inst.SLICE_297_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i58 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i59 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_299 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_299_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_299_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i56 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i57 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_301 ( input DI1, DI0, C1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \Controller_inst.SLICE_301_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \Controller_inst.SLICE_301_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i54 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i55 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_303 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_303_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_303_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i52 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i53 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_305 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_305_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_305_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i50 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i51 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_307 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_307_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_307_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i48 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i49 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_309 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_309_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_309_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i46 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i47 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_311 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_311_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_311_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i44 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i45 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_313 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_313_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_313_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i42 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i43 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_315 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_315_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_315_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i40 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i41 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_317 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_317_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_317_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i38 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i39 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_319 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_319_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_319_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i36 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i37 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_321 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_321_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_321_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i34 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i35 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_323 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_323_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_323_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i32 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i33 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_325 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_325_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_325_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i30 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i31 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_327 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_327_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_327_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i28 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i29 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_329 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_329_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_329_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i26 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i27 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_331 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_331_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_331_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i24 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i25 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_333 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_333_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_333_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i22 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i23 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_335 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_335_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_335_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i20 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i21 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_337 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_337_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_337_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i18 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i19 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_339 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_339_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_339_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i16 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i17 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_341 ( input DI1, DI0, C1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \Controller_inst.SLICE_341_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_341_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i14 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i15 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_343 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_343_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_343_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i12 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i13 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_345 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_345_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_345_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i10 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i11 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_347 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_347_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_347_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i8 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i9 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_349 ( input DI1, DI0, C1, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \Controller_inst.SLICE_349_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \Controller_inst.SLICE_349_K0 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i6 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i7 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_351 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_351_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_351_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i4 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i5 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_353 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_353_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_353_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i2 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Byte_i0_i3 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_356 ( input 
    DI0, D0, C0, B0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40052 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i56_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/o_SPI_MOSI ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_358 ( input 
    DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7763_2_lut_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7760_2_lut_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count_i3 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20034 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count_i4 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_360 ( input 
    DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7765_2_lut_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7764_2_lut_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count_i1 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20034 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count_i2 ( 
    .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_365 ( 
    input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40055 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i3469_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_SM_CS_FSM_i2 ( 
    .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_SM_CS_FSM_i1 ( 
    .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x0CAE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_367 ( 
    input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40057 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_3_lut_4_lut_adj_562 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_TX_Count_1160__i1 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_TX_Count_1160__i0 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xC408") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x30C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_369 ( 
    input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40059 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_3_lut_adj_557 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_TX_Count_1160__i2 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_TX_Count_1160__i3 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xC00C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xA802") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_374 ( 
    input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i7945_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i7944_2_lut 
    ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_CS_Inactive_Count_i4 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_CS_Inactive_Count_i5 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_376 ( 
    input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i7947_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i7946_2_lut 
    ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_CS_Inactive_Count_i2 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_CS_Inactive_Count_i3 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_378 ( 
    input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i7715_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i7948_2_lut 
    ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_CS_Inactive_Count_i0 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_CS_Inactive_Count_i1 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_379
   ( input DI0, D0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.SLICE_379_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/o_SPI_Clk 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_380
   ( input DI0, D0, C0, B0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40062 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i56_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/o_SPI_MOSI 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_388
   ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40041 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7725_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7938_2_lut 
    ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Edges_i0 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Edges_i1 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_389
   ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40041 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7936_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7937_2_lut 
    ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Edges_i3 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Edges_i2 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_391
   ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40063 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7939_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7935_2_lut 
    ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Edges_i5 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_Edges_i4 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_393
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40064 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7755_3_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7751_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_RX_Bit_Count_i0_i3 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_RX_Bit_Count_i0_i4 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xFEAB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFCED") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_395
   ( input DI1, DI0, D1, C1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40066 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7757_3_lut 
    ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7756_3_lut_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_RX_Bit_Count_i0_i1 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_RX_Bit_Count_i0_i2 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFAAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFEAB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_397 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40040 \Controller_inst.SLICE_397_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Byte__i6 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_398 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_398_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_398_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Byte__i4 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Byte__i5 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SLICE_400 ( input DI1, DI0, D1, D0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_400_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \Controller_inst.SLICE_400_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Byte__i2 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Byte__i3 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_403
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40068 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7745_3_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7744_3_lut_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Bit_Count_i1 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Bit_Count_i2 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_406
   ( input DI0, D0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40070 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i19_3_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_SPI_Clk_c 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_410
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_410_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_410_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_411
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40071 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_411_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_411_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xF2D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xF4B0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_412
   ( input DI0, D0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_412_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1cmp_r_i1 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_413
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_413_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_413_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_p1_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_p1_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_414
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_414_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_414_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i1 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i0 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_415
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_415_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_415_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_416
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_416_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_416_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_417
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40073 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_417_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_417_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_cmpaddr_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_cmpaddr_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xFB40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFD20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_418
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40071 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_418_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_418_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_419
   ( input DI1, DI0, D1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_419_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_419_K0 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_420
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40073 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_420_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_420_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_421
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_421_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_421_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i1 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i0 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_423
   ( input DI0, D0, C0, B0, A0, LSR, CLK, output Q0, F0 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40075 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_423_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.empty_flag_r_c 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_424
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_424_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_424_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i7 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_426
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_426_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_426_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_428
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_428_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_428_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_p1_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_431
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40073 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_431_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_431_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i7 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_433
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40076 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_433_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_433_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFD20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFB40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_435
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40078 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_435_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_435_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.rd_flag_addr_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xEF40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xAAE2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_438
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_438_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_438_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i7 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_440
   ( input DI1, DI0, B1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40080 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_440_K1 
    ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_440_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_442
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_442_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_442_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_p1_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_445
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40073 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_445_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_445_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i7 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xF2D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_447
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40071 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_447_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_447_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_449
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40071 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_449_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_449_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.wr_flag_addr_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xCACC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_453
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40076 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_453_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_453_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_cmpaddr_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_cmpaddr_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_455
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40078 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_455_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_455_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_cmpaddr_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_cmpaddr_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_458
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_458_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_458_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i7 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_460
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_460_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_460_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_462
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_462_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_462_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1cmp_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_465
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_465_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_465_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i7 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_467
   ( input DI1, DI0, C1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_467_K1 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_467_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_469
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_469_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_469_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_p1_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_472
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_472_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_472_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i6 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i7 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_474
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_474_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_474_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i4 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i5 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_476
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_476_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_476_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i2 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_i3 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_479
   ( input DI0, D0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_479_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_p1_r_i6 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_480
   ( input DI1, DI0, B1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40080 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_480_K1 
    ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_480_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_p1_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_p1_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_482
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_482_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_482_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_p1_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_p1_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_486
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40083 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_486_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_486_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xF4B0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_488
   ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40071 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_488_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_488_K0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_491
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_491_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_491_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i7 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_493
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_493_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_493_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i4 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i5 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_495
   ( input DI1, DI0, D1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_495_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_495_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i2 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_p1_r_i3 
    ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_498
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_498_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_498_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i6 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i7 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_500
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_500_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_500_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i4 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i5 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_502
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_502_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_502_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i2 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i3 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_504
   ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40012 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_504_K1 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_504_K0 
    ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i0 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_i1 
    ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_508 ( input D1, C1, B1, A1, 
    D0, C0, output F0, F1 );
  wire   GNDI;

  lut40084 \Controller_inst/SPI_Master_CS_STM32_1/i4_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40085 \Controller_inst/SPI_Master_CS_STM32_1/i1_2_lut ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_509 ( input D1, C1, B1, D0, 
    C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 \Controller_inst/SPI_Master_CS_STM32_1/i1483_2_lut_3_lut ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \Controller_inst.SPI_Master_CS_STM32_1.i1490_2_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_510 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40049 \Controller_inst/i7971_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_511 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i48_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i46_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_512 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \Controller_inst/i8007_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Controller_inst/i7969_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_513 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i52_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i50_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_515 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i12_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i10_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_516 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 \Controller_inst/i7965_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i7967_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_519 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i56_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i54_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_520 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \Controller_inst/i7963_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Controller_inst/i7697_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_521 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40090 \Controller_inst/LessThan_10_i4_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40049 \Controller_inst/i8015_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x40F4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_524 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 \Controller_inst/i7961_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i7995_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_525 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i24_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i22_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_527 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i60_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i58_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_528 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 \Controller_inst/i7955_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i7993_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_529 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i28_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \Controller_inst/LessThan_10_i26_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_530 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40092 \Controller_inst/i1_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \Controller_inst/LessThan_10_i62_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x3F33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_532 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8013_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i7959_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_534 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40094 \Controller_inst.i1_2_lut_adj_569 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40047 \Controller_inst/i7957_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xAEEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_537 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i8_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \Controller_inst/LessThan_10_i6_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_538 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40095 \Controller_inst/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \Controller_inst/LessThan_10_i64_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xBBB0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_539 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \Controller_inst/i1_2_lut_adj_574 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \Controller_inst/i1_3_lut_4_lut_adj_581 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_540 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40098 \Controller_inst/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40099 \Controller_inst/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x00FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_541 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40100 \Controller_inst.i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40101 \Controller_inst/i1_2_lut_3_lut_adj_579 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xA800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFF3F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_542 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \Controller_inst/i8005_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Controller_inst/i8011_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_545 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40102 \Controller_inst/LessThan_10_i16_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i14_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_547 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \Controller_inst/i8003_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Controller_inst/i8009_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_550 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i20_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i18_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_551 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 \Controller_inst/i7999_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i8001_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_555 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 \Controller_inst/i7991_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i7997_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_558 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i32_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i30_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_559 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 \Controller_inst/i7987_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i7989_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_562 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i36_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \Controller_inst/LessThan_10_i34_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_563 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \Controller_inst/i7983_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Controller_inst/i7985_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_566 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40102 \Controller_inst/LessThan_10_i40_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i38_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_567 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \Controller_inst/i7979_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Controller_inst/i7981_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_570 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_10_i44_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_10_i42_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_571 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \Controller_inst/i7975_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Controller_inst/i7977_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_575 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7966_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \Controller_inst/i7973_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_576 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40103 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17872_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17866_bdd_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xEE30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xF4A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_577 ( input D1, 
    C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40105 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[1]_bdd_4_lut_3 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40002 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i35_3_lut ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xEA62") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_578 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40106 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17920_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[0]_bdd_4_lut_6 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xEC64") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_580 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40108 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17914_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40109 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[0]_bdd_4_lut_5 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xE3E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_582 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40110 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17908_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[0]_bdd_4_lut_4 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xF4A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xE6A2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_584 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40110 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17902_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[0]_bdd_4_lut_3 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_586 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40110 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17896_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40112 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[0]_bdd_4_lut_2 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xEA62") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_588 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40113 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[3]_bdd_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i11814_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_589 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40114 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17890_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17932_bdd_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xDC98") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_590 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40105 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[1]_bdd_4_lut_5 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i42_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_591 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40116 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17884_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i39_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xAAD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_592 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40105 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[1]_bdd_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i4_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_594 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40105 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[1]_bdd_4_lut_4 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i57_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_595 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40113 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[3]_bdd_4_lut_2 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40117 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17878_bdd_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xE3E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_596 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40118 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17926_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[0]_bdd_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xF2C2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_600 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40119 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count[1]_bdd_4_lut_2 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i50_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xEC64") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_601 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40120 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/n17860_bdd_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i48_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xD9C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_602 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40121 i2_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40122 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_604 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40006 i1_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_605 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40123 i5522_2_lut_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 i19_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x0420") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_606 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40125 i12317_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 i8080_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_608 ( input D0, C0, B0, A0, output F0 );

  lut40126 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_609 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40127 i7827_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40126 i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xC888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_610 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40128 i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40129 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xC800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_612 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40130 i2_4_lut_adj_583( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 i3_4_lut_adj_582( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xA800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_614 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40131 i6_4_lut_adj_584( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 i2_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_615 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40132 i12351_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40133 i1_4_lut_adj_585( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0x5554") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_616 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40134 \Controller_inst/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40135 \Controller_inst/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_617 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40136 \Controller_inst/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 \Controller_inst/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_618 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40138 \Controller_inst/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40139 \Controller_inst/i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_619 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40140 \Controller_inst/i1753_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40135 \Controller_inst/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0xCDCF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_620 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40006 \Controller_inst/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_622 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40141 \Controller_inst/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40142 \Controller_inst/equal_257_i33_2_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0xF3F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_623 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40143 \Controller_inst/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40144 \Controller_inst/equal_7_i5_2_lut ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_624 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40049 \Controller_inst/i1_2_lut_adj_570 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_625 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40145 \Controller_inst/i77_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40146 \Controller_inst/i11862_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0x6444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_628 ( input D1, C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40147 \Controller_inst/i4_4_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40148 \Controller_inst/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0x5000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0x1040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_630 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40149 \Controller_inst/i2_4_lut_adj_572 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40150 \Controller_inst.i1_2_lut_adj_577 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0x3FBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_633 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40151 \Controller_inst/i12303_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40152 \Controller_inst/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0x5155") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0x003A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_634 ( input D1, C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_9_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40153 \Controller_inst/LessThan_9_i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x08CE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_636 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_9_i10_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \Controller_inst/LessThan_9_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_638 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \Controller_inst/LessThan_9_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \Controller_inst/LessThan_9_i12_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_640 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40154 \Controller_inst/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 \Controller_inst/LessThan_9_i16_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_642 ( input D0, C0, B0, A0, output F0 );

  lut40137 \Controller_inst/i11376_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_643 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40155 \Controller_inst/i3009_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40156 \Controller_inst/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0xAABA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_644 ( input D0, C0, B0, A0, output F0 );

  lut40157 \Controller_inst/i11380_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_646 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40158 i5457_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40159 \Controller_inst/i1_2_lut_3_lut_4_lut_adj_575 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 w_Controller_Mode__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0x030A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_650 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40160 \Controller_inst/i3_4_lut_adj_578 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40011 \Controller_inst/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0x0060") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_652 ( input D1, C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40161 \Controller_inst/i7845_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40162 
    \Controller_inst/SPI_Master_CS_STM32_1/int_STM32_TX_Ready_I_0_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0x3222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_654 ( input D1, C1, B1, A1, 
    D0, C0, output F0, F1 );
  wire   GNDI;

  lut40163 \Controller_inst/SPI_Master_CS_STM32_1/i12313_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \Controller_inst/SPI_Master_CS_STM32_1/i442_2_lut ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  LUT4 #("0x00E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_655 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, output F0, F1 );

  lut40131 \Controller_inst/SPI_Master_CS_STM32_1/i6_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40164 \Controller_inst/SPI_Master_CS_STM32_1/i5_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_657 ( input DI1, D1, C1, B1, 
    D0, C0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40165 \Controller_inst/SPI_Master_CS_STM32_1/i7724_3_lut ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \Controller_inst/SPI_Master_CS_STM32_1/i5_2_lut ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20034 \Controller_inst/SPI_Master_CS_STM32_1/r_CS_n ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  LUT4 #("0xFF30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_658 ( input D1, C1, B1, A1, 
    D0, C0, output F0, F1 );
  wire   GNDI;

  lut40166 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i9439_2_lut_3_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40167 \Controller_inst/SPI_Master_CS_STM32_1/i1_2_lut_adj_568 ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_659 ( input D1, 
    C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40131 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i2_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i3_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_660 ( input D1, C1, B1, A1, 
    D0, B0, output F0, F1 );
  wire   GNDI;

  lut40168 \Controller_inst/SPI_Master_CS_STM32_1/i11362_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \Controller_inst/SPI_Master_CS_STM32_1/i11301_2_lut ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_662 ( input D1, 
    C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40169 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i5_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40170 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i4_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40170 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_664 ( input D1, 
    C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40171 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i1_2_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40172 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i2_3_lut_adj_564 ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40172 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_666 ( 
    input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40173 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i6091_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40174 ( input A, B, C, D, output Z );

  LUT4 #("0x88F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_667 ( 
    input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40175 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i4_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_2_lut_adj_561 ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_668 ( 
    input D0, B0, output F0 );
  wire   GNDI;

  lut40042 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i2_2_lut ( 
    .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_669 ( 
    input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40176 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i12326_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40177 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i3_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40177 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_670 ( 
    input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40178 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/int_RHD_TX_Ready_I_0_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_2_lut_3_lut_adj_554 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  LUT4 #("0x3330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_673 ( 
    input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40179 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i11370_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i11323_2_lut ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_674
   ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40180 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.i3480_2_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40181 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  LUT4 #("0x5554") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40181 ( input A, B, C, D, output Z );

  LUT4 #("0xFCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_675
   ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40182 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i4_4_lut_adj_552 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_676
   ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40183 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i4_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7701_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_678
   ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut4 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/Mux_50_i10_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/Mux_50_i8_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_680
   ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40184 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i5_3_lut 
    ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40185 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i4_4_lut_adj_551 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40185 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_682
   ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40186 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i2_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i2_3_lut_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  LUT4 #("0x03F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  LUT4 #("0x008A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_684
   ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40188 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3661_3_lut 
    ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40189 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i1_3_lut_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  LUT4 #("0x3010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_686
   ( input D0, C0, B0, A0, output F0 );

  lut40190 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11341_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_687
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40191 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11364_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40192 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11333_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40192 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_688
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40193 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11360_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40194 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11335_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40194 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_690
   ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i2_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i6_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  LUT4 #("0x000C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40196 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_692
   ( input DI1, D1, C1, B1, A1, D0, C0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40197 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/empty_nxt_w_I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i9_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/empty_r_c 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  LUT4 #("0xAABA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_693
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40198 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i6_4_lut_adj_548 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40199 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3_4_lut_adj_547 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  LUT4 #("0x4010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  LUT4 #("0x4182") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_694
   ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40200 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11325_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40201 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/not_equal_21_i5_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40201 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_695
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40202 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i5_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40203 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40203 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_697
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40204 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11356_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40205 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i11348_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40205 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_699 ( input DI1, D1, C1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40063 \Controller_inst/i7925_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40206 \Controller_inst/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20001 \Controller_inst/int_RHD_TX_Byte__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_701 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40207 \Controller_inst/i24_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40208 \Controller_inst/i1_2_lut_3_lut_4_lut_adj_580 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  LUT4 #("0xF7EF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40208 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_702 ( input DI1, D1, C1, B1, 
    A1, D0, C0, B0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40209 \Controller_inst/SPI_Master_CS_STM32_1/i3487_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40210 \Controller_inst/SPI_Master_CS_STM32_1/i12300_2_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_SM_CS_FSM_i3 ( 
    .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  LUT4 #("0x88F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40210 ( input A, B, C, D, output Z );

  LUT4 #("0x040F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_703 ( input D1, C1, A1, D0, 
    C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40211 \Controller_inst/SPI_Master_CS_STM32_1/i11283_2_lut_3_lut ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40212 \Controller_inst/SPI_Master_CS_STM32_1/i1_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  LUT4 #("0xF050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40212 ( input A, B, C, D, output Z );

  LUT4 #("0xF4F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_704 ( 
    input DI1, D1, C1, B1, D0, C0, B0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40213 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_3_lut_adj_556 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_2_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_SM_CS_FSM_i3 ( 
    .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40214 ( input A, B, C, D, output Z );

  LUT4 #("0xAEAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_705 ( 
    input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40215 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_2_lut_3_lut_adj_555 
    ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40216 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_4_lut_adj_559 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  LUT4 #("0x00A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40216 ( input A, B, C, D, output Z );

  LUT4 #("0x0455") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_706 ( input 
    DI1, C1, D0, C0, B0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40014 \Controller_inst.SPI_Master_CS_STM32_1.SPI_Master_1.SLICE_706_K1 ( 
    .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40217 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i1_2_lut_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_DV_c ( 
    .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  LUT4 #("0x3330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_707 ( input 
    DI1, D1, C1, D0, C0, B0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40218 \Controller_inst/i12310_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40219 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i1_2_lut_3_lut_adj_566 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/o_TX_Ready ( 
    .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40219 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_708 ( 
    input D1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i5_2_lut ( 
    .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i9476_2_lut_3_lut 
    ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_709 ( 
    input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40221 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_4_lut_adj_558 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40222 \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.i9484_2_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_TX_Count_1160__i4 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40221 ( input A, B, C, D, output Z );

  LUT4 #("0xC804") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40222 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_710
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40223 
    \Controller_inst.Controller_RHD_FIFO_1.SPI_Master_CS_1.SPI_Master_1.i12297_2_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40224 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_3_lut_adj_550 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/o_TX_Ready 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40223 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40224 ( input A, B, C, D, output Z );

  LUT4 #("0x3330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_711
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40225 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7788_3_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40226 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_2_lut_3_lut_adj_553 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_Trailing_Edge_c 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40226 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_713 ( input D0, 
    C0, B0, A0, output F0 );

  lut40227 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i4_4_lut_adj_563 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_714 ( input D0, C0, B0, A0, output F0 );

  lut40228 \Controller_inst/i11374_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40228 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_715 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40179 \Controller_inst/i11378_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40099 \Controller_inst/i11372_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_716 ( input D0, C0, B0, A0, output F0 );

  lut40135 \Controller_inst/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_717 ( input D0, C0, B0, A0, output F0 );

  lut40099 \Controller_inst/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_722 ( input D0, 
    C0, B0, output F0 );
  wire   GNDI;

  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i832113_i1_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_723 ( input 
    DI1, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40053 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7758_2_lut_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40229 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i1_2_lut_3_lut_adj_565 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count_i5 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_724
   ( input D0, C0, B0, A0, output F0 );

  lut40230 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i11857_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40230 ( input A, B, C, D, output Z );

  LUT4 #("0xC840") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_725
   ( input DI1, D1, C1, B1, A1, D0, C0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40231 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7728_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40177 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i3668_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Bit_Count_i0 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  LUT4 #("0xABBA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_726
   ( input DI1, D1, C1, B1, A1, D0, C0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40232 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7808_3_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1443_2_lut 
    ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_RX_Bit_Count_i0_i0 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40232 ( input A, B, C, D, output Z );

  LUT4 #("0xABFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_728
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40083 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_728_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40233 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i1_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_cmpaddr_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40233 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_729
   ( input DI1, D1, C1, B1, A1, D0, C0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40234 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/full_nxt_w_I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40235 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i2_3_lut_adj_549 
    ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/full_r_c 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40235 ( input A, B, C, D, output Z );

  LUT4 #("0x0050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_730 ( input 
    DI1, D1, C1, B1, D0, C0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40236 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i32_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i2_3_lut ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_SPI_Clk_c 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40237 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_732
   ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40226 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1451_2_lut_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_733
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40238 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i3_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40239 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_2_lut_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_Leading_Edge_c 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40239 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_734 ( input D0, 
    C0, B0, output F0 );
  wire   GNDI;

  lut40026 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i11811_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_736 ( output F0 );
  wire   GNDI;

  lut40240 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_737 ( input DI1, D1, C1, B1, A1, C0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40241 i1_4_lut_adj_586( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40242 i1143_1_lut( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 stop_counting_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40241 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40242 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_738 ( input DI1, D1, C1, D0, C0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40243 i11877_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40244 i7930_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 step__i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40243 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40244 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_740 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40245 i7929_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 i7931_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40245 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_742 ( input DI1, D1, C1, D0, C0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40243 i1423_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40246 i12348_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 step__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  LUT4 #("0x0FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_744 ( output F0 );
  wire   GNDI;

  lut40247 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40247 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_747 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7962_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i7964_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_749 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7958_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i7960_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_751 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7954_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i7956_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_753 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7952_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i7953_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_755 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8044_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8045_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_757 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8042_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i8043_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_759 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40248 \Controller_inst/i8040_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8041_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_761 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8038_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8039_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_763 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8036_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i8037_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_765 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8034_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8035_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_767 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8032_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i8033_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_769 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8030_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8031_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_771 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8028_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i8029_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_773 ( input DI1, D1, C1, B1, A1, D0, C0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40249 \Controller_inst.SLICE_773_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40085 \Controller_inst/i8027_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 w_reset_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40249 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_774 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8025_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8026_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_776 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8023_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8024_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_778 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8021_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8022_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_780 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8019_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8020_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_782 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8046_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8018_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_784 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8016_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i8017_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_786 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8008_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8014_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_788 ( input DI1, D1, D0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40012 \Controller_inst.SLICE_788_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40250 \Controller_inst/i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 w_Controller_Mode__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40250 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_792 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8004_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i8006_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_794 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i8000_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i8002_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_796 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7996_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i7998_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_798 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7992_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Controller_inst/i7994_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_800 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40096 \Controller_inst/i7988_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \Controller_inst/i7990_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_802 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40251 \Controller_inst/i7984_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40252 \Controller_inst/i7986_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40251 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40252 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SLICE_804 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40096 \Controller_inst/i7980_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \Controller_inst/i7982_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_806 ( input D1, C1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \Controller_inst/i7976_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40252 \Controller_inst/i7978_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_808 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40063 \Controller_inst/i7972_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \Controller_inst/i7974_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_810 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40096 \Controller_inst/i7968_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \Controller_inst/i7970_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SLICE_813 ( input D1, C1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \Controller_inst/i8010_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40252 \Controller_inst/i8012_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_815 ( input DI1, D1, C1, D0, 
    CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40041 \Controller_inst/i1_2_lut_adj_571 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40250 \Controller_inst/SPI_Master_CS_STM32_1/i37_1_lut ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/int_STM32_TX_DV_c ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SLICE_817 ( input DI1, D1, C1, B1, 
    A1, D0, C0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40030 \Controller_inst/SPI_Master_CS_STM32_1/i7915_2_lut_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \Controller_inst/SPI_Master_CS_STM32_1/i1_2_lut_adj_567 ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 \Controller_inst/SPI_Master_CS_STM32_1/r_TX_Count_1158__i6 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_821 ( input D0, 
    C0, B0, output F0 );
  wire   GNDI;

  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i47_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_823 ( input D1, 
    C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40025 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i54_3_lut ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i51_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_826 ( input D1, 
    C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40018 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i1_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i55_3_lut ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_829 ( input 
    DI1, D1, C1, A1, D0, C0, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40253 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i7712_3_lut ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i2_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/r_TX_Bit_Count_i0 ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40253 ( input A, B, C, D, output Z );

  LUT4 #("0xAFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_830 ( input D1, 
    C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40018 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i40_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i5_3_lut ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_834 ( input D1, 
    C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40021 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i32_3_lut ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i43_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_837 ( input D0, 
    C0, B0, output F0 );
  wire   GNDI;

  lut40026 \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/i11808_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_SPI_Master_CS_STM32_1_SPI_Master_1_SLICE_838 ( input D1, 
    C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40023 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i36_3_lut ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 
    \Controller_inst/SPI_Master_CS_STM32_1/SPI_Master_1/Mux_50_i33_3_lut ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SLICE_845 ( 
    input DI1, D1, C1, B1, D0, C0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40254 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i1_3_lut_adj_560 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/i499_2_lut_3_lut ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20034 \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/r_CS_n ( 
    .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  LUT4 #("0xF3F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_846
   ( input DI1, D1, C1, B1, A1, C0, B0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40255 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7716_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40256 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i3664_2_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/o_RX_DV 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40255 ( input A, B, C, D, output Z );

  LUT4 #("0x4445") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40256 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_SPI_Master_CS_1_SPI_Master_1_SLICE_847
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40257 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i7737_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40258 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/i1_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20034 
    \Controller_inst/Controller_RHD_FIFO_1/SPI_Master_CS_1/SPI_Master_1/r_TX_Bit_Count_i3 
    ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40257 ( input A, B, C, D, output Z );

  LUT4 #("0xFEF1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40258 ( input A, B, C, D, output Z );

  LUT4 #("0xE080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_850
   ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40259 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i1_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40259 ( input A, B, C, D, output Z );

  LUT4 #("0x03CF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_851
   ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40002 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3500_3_lut 
    ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_852
   ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40186 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i3_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40259 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i4_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_853
   ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut4 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3659_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3657_3_lut 
    ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_856
   ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40186 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i5_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40259 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i6_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_857
   ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut4 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3655_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3653_3_lut 
    ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_860
   ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40260 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i7_3_lut 
    ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40259 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/mux_1147_i8_3_lut 
    ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  LUT4 #("0x05AF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_861
   ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40261 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3651_3_lut 
    ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i3649_3_lut 
    ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40261 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_868
   ( input DI1, D1, C1, B1, A1, C0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40262 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_868_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40263 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/i5_2_lut 
    ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/MISC.full_flag_r_c 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40262 ( input A, B, C, D, output Z );

  LUT4 #("0xBAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40263 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_869
   ( input D0, C0, B0, A0, output F0 );

  lut40264 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_1__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40264 ( input A, B, C, D, output Z );

  LUT4 #("0xFD08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_870
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40265 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_3__I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_2__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40265 ( input A, B, C, D, output Z );

  LUT4 #("0xAACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_872
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40073 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_5__I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_4__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_874
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40083 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_0__I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40266 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_6__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  LUT4 #("0xF0D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_875
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40267 \Controller_inst/Controller_RHD_FIFO_1/i3433_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40081 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/wr_addr_r_7__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/Controller_RHD_FIFO_1/int_FIFO_WE ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40267 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_876
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40073 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_2__I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_1__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_878
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40078 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_4__I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40268 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_3__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40268 ( input A, B, C, D, output Z );

  LUT4 #("0xACAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_880
   ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40076 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_7__I_0_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_5__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_881
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40083 
    \Controller_inst.Controller_RHD_FIFO_1.FIFO_1.lscc_fifo_inst.fifo0._FABRIC.u_fifo.SLICE_881_K1 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_6__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_cmpaddr_r_i6 
    ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module 
  Controller_inst_Controller_RHD_FIFO_1_FIFO_1_lscc_fifo_inst_fifo0__FABRIC_u_fifo_SLICE_883
   ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40269 \Controller_inst/i6195_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40077 
    \Controller_inst/Controller_RHD_FIFO_1/FIFO_1/lscc_fifo_inst/fifo0/_FABRIC.u_fifo/rd_addr_r_0__I_0_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20001 \Controller_inst/int_FIFO_RE_c ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40269 ( input A, B, C, D, output Z );

  LUT4 #("0x0B4F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module pll_spi_inst_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, 
    RESET_N, output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \pll_spi_inst/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "87";
  defparam INST10.DIVQ = "4";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module RGB_1 ( input PADDO, output RGB_1 );
  wire   VCCI;

  BB_B_B \RGB_1_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB_1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB_1) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module o_RHD_SPI_CS_n ( input PADDO, output o_RHD_SPI_CS_n );
  wire   VCCI;

  BB_B_B \o_RHD_SPI_CS_n_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(o_RHD_SPI_CS_n));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_RHD_SPI_CS_n) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_RHD_SPI_Clk ( input PADDO, output o_RHD_SPI_Clk );
  wire   VCCI;

  BB_B_B \o_RHD_SPI_Clk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(o_RHD_SPI_Clk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_RHD_SPI_Clk) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_RHD_SPI_MOSI ( input PADDO, output o_RHD_SPI_MOSI );
  wire   VCCI;

  BB_B_B \o_RHD_SPI_MOSI_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(o_RHD_SPI_MOSI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_RHD_SPI_MOSI) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_2 ( input PADDO, output RGB_2 );
  wire   VCCI;

  BB_B_B \RGB_2_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB_2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB_2) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_STM32_SPI_CS_n ( input PADDO, output o_STM32_SPI_CS_n );
  wire   VCCI;

  BB_B_B \o_STM32_SPI_CS_n_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(o_STM32_SPI_CS_n));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_STM32_SPI_CS_n) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_STM32_SPI_Clk ( input PADDO, output o_STM32_SPI_Clk );
  wire   VCCI;

  BB_B_B \o_STM32_SPI_Clk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(o_STM32_SPI_Clk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_STM32_SPI_Clk) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_STM32_SPI_MOSI ( input PADDO, output o_STM32_SPI_MOSI );
  wire   VCCI;

  BB_B_B \o_STM32_SPI_MOSI_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(o_STM32_SPI_MOSI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => o_STM32_SPI_MOSI) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_3 ( input PADDO, output RGB_3 );
  wire   VCCI;

  BB_B_B \RGB_3_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB_3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB_3) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_4 ( input PADDO, output RGB_4 );
  wire   VCCI;

  BB_B_B \RGB_4_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB_4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB_4) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_clk ( output PADDI, input i_clk );
  wire   GNDI;

  BB_B_B \i_clk_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(i_clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (i_clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module pll_clk ( input PADDO, output pll_clk );
  wire   VCCI;

  BB_OD_B \pll_clk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pll_clk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pll_clk) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_OD_B ( input T_N, I, output O, inout B );

  BB_OD INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule
